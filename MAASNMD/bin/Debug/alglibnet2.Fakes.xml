<?xml version="1.0"?>
<doc>
    <assembly>
        <name>alglibnet2.Fakes</name>
    </assembly>
    <members>
        <member name="T:Global.Fakes.Shimalglib">
            <summary>Shim type of alglib</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.#ctor(alglib)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Constructor">
            <summary>Sets the shim of alglib.alglib()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.airyDoubleDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.airy(Double x, Double&amp; ai, Double&amp; aip, Double&amp; bi, Double&amp; bip)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogkintegratealglibautogkstatealglibintegrator1_funcObject">
            <summary>Sets the shim of alglib.autogkintegrate(autogkstate state, integrator1_func func, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogkiterationalglibautogkstate">
            <summary>Sets the shim of alglib.autogkiteration(autogkstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogkresultsalglibautogkstateDoubleOutalglibautogkreportOut">
            <summary>Sets the shim of alglib.autogkresults(autogkstate state, Double&amp; v, autogkreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogksingularDoubleDoubleDoubleDoublealglibautogkstateOut">
            <summary>Sets the shim of alglib.autogksingular(Double a, Double b, Double alpha, Double beta, autogkstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogksmoothDoubleDoublealglibautogkstateOut">
            <summary>Sets the shim of alglib.autogksmooth(Double a, Double b, autogkstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.autogksmoothwDoubleDoubleDoublealglibautogkstateOut">
            <summary>Sets the shim of alglib.autogksmoothw(Double a, Double b, Double xwidth, autogkstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricbuildfloaterhormannDoubleArrayDoubleArrayInt32Int32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.barycentricbuildfloaterhormann(Double[] x, Double[] y, Int32 n, Int32 d, barycentricinterpolant&amp; b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricbuildxywDoubleArrayDoubleArrayDoubleArrayInt32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.barycentricbuildxyw(Double[] x, Double[] y, Double[] w, Int32 n, barycentricinterpolant&amp; b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentriccalcalglibbarycentricinterpolantDouble">
            <summary>Sets the shim of alglib.barycentriccalc(barycentricinterpolant b, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricdiff1alglibbarycentricinterpolantDoubleDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.barycentricdiff1(barycentricinterpolant b, Double t, Double&amp; f, Double&amp; df)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricdiff2alglibbarycentricinterpolantDoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.barycentricdiff2(barycentricinterpolant b, Double t, Double&amp; f, Double&amp; df, Double&amp; d2f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricfitfloaterhormannDoubleArrayDoubleArrayInt32Int32Int32OutalglibbarycentricinterpolantOutalglibbarycentricfitreportOut">
            <summary>Sets the shim of alglib.barycentricfitfloaterhormann(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, barycentricinterpolant&amp; b, barycentricfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricfitfloaterhormannwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32OutalglibbarycentricinterpolantOutalglibbarycentricfitreportOut">
            <summary>Sets the shim of alglib.barycentricfitfloaterhormannwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, barycentricinterpolant&amp; b, barycentricfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentriclintransxalglibbarycentricinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.barycentriclintransx(barycentricinterpolant b, Double ca, Double cb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentriclintransyalglibbarycentricinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.barycentriclintransy(barycentricinterpolant b, Double ca, Double cb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.barycentricunpackalglibbarycentricinterpolantInt32OutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.barycentricunpack(barycentricinterpolant b, Int32&amp; n, Double[]&amp; x, Double[]&amp; y, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besseli0Double">
            <summary>Sets the shim of alglib.besseli0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besseli1Double">
            <summary>Sets the shim of alglib.besseli1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselj0Double">
            <summary>Sets the shim of alglib.besselj0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselj1Double">
            <summary>Sets the shim of alglib.besselj1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besseljnInt32Double">
            <summary>Sets the shim of alglib.besseljn(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselk0Double">
            <summary>Sets the shim of alglib.besselk0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselk1Double">
            <summary>Sets the shim of alglib.besselk1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselknInt32Double">
            <summary>Sets the shim of alglib.besselkn(Int32 nn, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.bessely0Double">
            <summary>Sets the shim of alglib.bessely0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.bessely1Double">
            <summary>Sets the shim of alglib.bessely1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.besselynInt32Double">
            <summary>Sets the shim of alglib.besselyn(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.betaDoubleDouble">
            <summary>Sets the shim of alglib.beta(Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.binomialcdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.binomialcdistribution(Int32 k, Int32 n, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.binomialdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.binomialdistribution(Int32 k, Int32 n, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.chebyshevcalculateInt32Int32Double">
            <summary>Sets the shim of alglib.chebyshevcalculate(Int32 r, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.chebyshevcoefficientsInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.chebyshevcoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.chebyshevsumDoubleArrayInt32Int32Double">
            <summary>Sets the shim of alglib.chebyshevsum(Double[] c, Int32 r, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.chisquarecdistributionDoubleDouble">
            <summary>Sets the shim of alglib.chisquarecdistribution(Double v, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.chisquaredistributionDoubleDouble">
            <summary>Sets the shim of alglib.chisquaredistribution(Double v, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixcopyInt32Int32alglibcomplexMdArray2Int32Int32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixcopy(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, complex[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixdetalglibcomplexMdArray2">
            <summary>Sets the shim of alglib.cmatrixdet(complex[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixdetalglibcomplexMdArray2Int32">
            <summary>Sets the shim of alglib.cmatrixdet(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixgemmInt32Int32Int32alglibcomplexalglibcomplexMdArray2Int32Int32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixgemm(Int32 m, Int32 n, Int32 k, complex alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, complex[,] b, Int32 ib, Int32 jb, Int32 optypeb, complex beta, complex[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixinversealglibcomplexMdArray2RefInt32Int32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixinverse(complex[,]&amp; a, Int32 n, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixinversealglibcomplexMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixinverse(complex[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlefttrsmInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixlefttrsm(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlqalglibcomplexMdArray2RefInt32Int32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.cmatrixlq(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlqunpacklalglibcomplexMdArray2Int32Int32alglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixlqunpackl(complex[,] a, Int32 m, Int32 n, complex[,]&amp; l)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlqunpackqalglibcomplexMdArray2Int32Int32alglibcomplexArrayInt32alglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixlqunpackq(complex[,] a, Int32 m, Int32 n, complex[] tau, Int32 qrows, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlualglibcomplexMdArray2RefInt32Int32Int32ArrayOut">
            <summary>Sets the shim of alglib.cmatrixlu(complex[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixludetalglibcomplexMdArray2Int32Array">
            <summary>Sets the shim of alglib.cmatrixludet(complex[,] a, Int32[] pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixludetalglibcomplexMdArray2Int32ArrayInt32">
            <summary>Sets the shim of alglib.cmatrixludet(complex[,] a, Int32[] pivots, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixluinversealglibcomplexMdArray2RefInt32ArrayInt32Int32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixluinverse(complex[,]&amp; a, Int32[] pivots, Int32 n, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixluinversealglibcomplexMdArray2RefInt32ArrayInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixluinverse(complex[,]&amp; a, Int32[] pivots, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlurcond1alglibcomplexMdArray2Int32">
            <summary>Sets the shim of alglib.cmatrixlurcond1(complex[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlurcondinfalglibcomplexMdArray2Int32">
            <summary>Sets the shim of alglib.cmatrixlurcondinf(complex[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlusolvealglibcomplexMdArray2Int32ArrayInt32alglibcomplexArrayInt32OutalglibdensesolverreportOutalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.cmatrixlusolve(complex[,] lua, Int32[] p, Int32 n, complex[] b, Int32&amp; info, densesolverreport&amp; rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixlusolvemalglibcomplexMdArray2Int32ArrayInt32alglibcomplexMdArray2Int32Int32OutalglibdensesolverreportOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixlusolvem(complex[,] lua, Int32[] p, Int32 n, complex[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixmixedsolvealglibcomplexMdArray2alglibcomplexMdArray2Int32ArrayInt32alglibcomplexArrayInt32OutalglibdensesolverreportOutalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.cmatrixmixedsolve(complex[,] a, complex[,] lua, Int32[] p, Int32 n, complex[] b, Int32&amp; info, densesolverreport&amp; rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixmixedsolvemalglibcomplexMdArray2alglibcomplexMdArray2Int32ArrayInt32alglibcomplexMdArray2Int32Int32OutalglibdensesolverreportOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixmixedsolvem(complex[,] a, complex[,] lua, Int32[] p, Int32 n, complex[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixmvInt32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexArrayInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of alglib.cmatrixmv(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, Int32 opa, complex[] x, Int32 ix, complex[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixqralglibcomplexMdArray2RefInt32Int32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.cmatrixqr(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixqrunpackqalglibcomplexMdArray2Int32Int32alglibcomplexArrayInt32alglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixqrunpackq(complex[,] a, Int32 m, Int32 n, complex[] tau, Int32 qcolumns, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixqrunpackralglibcomplexMdArray2Int32Int32alglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixqrunpackr(complex[,] a, Int32 m, Int32 n, complex[,]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrank1Int32Int32alglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of alglib.cmatrixrank1(Int32 m, Int32 n, complex[,]&amp; a, Int32 ia, Int32 ja, complex[]&amp; u, Int32 iu, complex[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrcond1alglibcomplexMdArray2Int32">
            <summary>Sets the shim of alglib.cmatrixrcond1(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrcondinfalglibcomplexMdArray2Int32">
            <summary>Sets the shim of alglib.cmatrixrcondinf(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrighttrsmInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixrighttrsm(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrndcondInt32DoublealglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrndorthogonalInt32alglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixrndorthogonal(Int32 n, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrndorthogonalfromtheleftalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixrndorthogonalfromtheleft(complex[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixrndorthogonalfromtherightalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixrndorthogonalfromtheright(complex[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixsolvealglibcomplexMdArray2Int32alglibcomplexArrayInt32OutalglibdensesolverreportOutalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.cmatrixsolve(complex[,] a, Int32 n, complex[] b, Int32&amp; info, densesolverreport&amp; rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixsolvemalglibcomplexMdArray2Int32alglibcomplexMdArray2Int32BooleanInt32OutalglibdensesolverreportOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.cmatrixsolvem(complex[,] a, Int32 n, complex[,] b, Int32 m, Boolean rfs, Int32&amp; info, densesolverreport&amp; rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixsyrkInt32Int32DoublealglibcomplexMdArray2Int32Int32Int32DoublealglibcomplexMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of alglib.cmatrixsyrk(Int32 n, Int32 k, Double alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, complex[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixtransposeInt32Int32alglibcomplexMdArray2Int32Int32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.cmatrixtranspose(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, complex[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixtrinversealglibcomplexMdArray2RefBooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixtrinverse(complex[,]&amp; a, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixtrinversealglibcomplexMdArray2RefInt32BooleanBooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.cmatrixtrinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Boolean isunit, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixtrrcond1alglibcomplexMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of alglib.cmatrixtrrcond1(complex[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cmatrixtrrcondinfalglibcomplexMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of alglib.cmatrixtrrcondinf(complex[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convc1dalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.convc1d(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convc1dcircularalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.convc1dcircular(complex[] s, Int32 m, complex[] r, Int32 n, complex[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convc1dcircularinvalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.convc1dcircularinv(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convc1dinvalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.convc1dinv(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convr1dDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.convr1d(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convr1dcircularDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.convr1dcircular(Double[] s, Int32 m, Double[] r, Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convr1dcircularinvDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.convr1dcircularinv(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.convr1dinvDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.convr1dinv(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.corrc1dalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.corrc1d(complex[] signal, Int32 n, complex[] pattern, Int32 m, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.corrc1dcircularalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.corrc1dcircular(complex[] signal, Int32 m, complex[] pattern, Int32 n, complex[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.corrr1dDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.corrr1d(Double[] signal, Int32 n, Double[] pattern, Int32 m, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.corrr1dcircularDoubleArrayInt32DoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.corrr1dcircular(Double[] signal, Int32 m, Double[] pattern, Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cov2DoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.cov2(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.cov2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of alglib.cov2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.covm2DoubleMdArray2DoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.covm2(Double[,] x, Double[,] y, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.covm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.covm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.covmDoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.covm(Double[,] x, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.covmDoubleMdArray2Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.covm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dawsonintegralDouble">
            <summary>Sets the shim of alglib.dawsonintegral(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfavgcealglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.dfavgce(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfavgerroralglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.dfavgerror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfavgrelerroralglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.dfavgrelerror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfbuildrandomdecisionforestDoubleMdArray2Int32Int32Int32Int32DoubleInt32OutalglibdecisionforestOutalglibdfreportOut">
            <summary>Sets the shim of alglib.dfbuildrandomdecisionforest(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 ntrees, Double r, Int32&amp; info, decisionforest&amp; df, dfreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfbuildrandomdecisionforestx1DoubleMdArray2Int32Int32Int32Int32Int32DoubleInt32OutalglibdecisionforestOutalglibdfreportOut">
            <summary>Sets the shim of alglib.dfbuildrandomdecisionforestx1(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 ntrees, Int32 nrndvars, Double r, Int32&amp; info, decisionforest&amp; df, dfreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfprocessalglibdecisionforestDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of alglib.dfprocess(decisionforest df, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfprocessialglibdecisionforestDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.dfprocessi(decisionforest df, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfrelclserroralglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.dfrelclserror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfrmserroralglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.dfrmserror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfserializealglibdecisionforestStringOut">
            <summary>Sets the shim of alglib.dfserialize(decisionforest obj, String&amp; s_out)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dfunserializeStringalglibdecisionforestOut">
            <summary>Sets the shim of alglib.dfunserialize(String s_in, decisionforest&amp; obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dsoptimalsplit2DoubleArrayInt32ArrayInt32Int32OutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.dsoptimalsplit2(Double[] a, Int32[] c, Int32 n, Int32&amp; info, Double&amp; threshold, Double&amp; pal, Double&amp; pbl, Double&amp; par, Double&amp; pbr, Double&amp; cve)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.dsoptimalsplit2fastDoubleArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefDoubleArrayRefInt32ArrayRefInt32Int32DoubleInt32OutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.dsoptimalsplit2fast(Double[]&amp; a, Int32[]&amp; c, Int32[]&amp; tiesbuf, Int32[]&amp; cntbuf, Double[]&amp; bufr, Int32[]&amp; bufi, Int32 n, Int32 nc, Double alpha, Int32&amp; info, Double&amp; threshold, Double&amp; rms, Double&amp; cvrms)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.ellipticintegraleDouble">
            <summary>Sets the shim of alglib.ellipticintegrale(Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.ellipticintegralkDouble">
            <summary>Sets the shim of alglib.ellipticintegralk(Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.ellipticintegralkhighprecisionDouble">
            <summary>Sets the shim of alglib.ellipticintegralkhighprecision(Double m1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.errorfunctionDouble">
            <summary>Sets the shim of alglib.errorfunction(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.errorfunctioncDouble">
            <summary>Sets the shim of alglib.errorfunctionc(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.exponentialintegraleiDouble">
            <summary>Sets the shim of alglib.exponentialintegralei(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.exponentialintegralenDoubleInt32">
            <summary>Sets the shim of alglib.exponentialintegralen(Double x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fcdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.fcdistribution(Int32 a, Int32 b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.fdistribution(Int32 a, Int32 b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftc1dalglibcomplexArrayRef">
            <summary>Sets the shim of alglib.fftc1d(complex[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftc1dalglibcomplexArrayRefInt32">
            <summary>Sets the shim of alglib.fftc1d(complex[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftc1dinvalglibcomplexArrayRef">
            <summary>Sets the shim of alglib.fftc1dinv(complex[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftc1dinvalglibcomplexArrayRefInt32">
            <summary>Sets the shim of alglib.fftc1dinv(complex[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftr1dDoubleArrayInt32alglibcomplexArrayOut">
            <summary>Sets the shim of alglib.fftr1d(Double[] a, Int32 n, complex[]&amp; f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftr1dDoubleArrayalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.fftr1d(Double[] a, complex[]&amp; f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftr1dinvalglibcomplexArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.fftr1dinv(complex[] f, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fftr1dinvalglibcomplexArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.fftr1dinv(complex[] f, Int32 n, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fhtr1dDoubleArrayRefInt32">
            <summary>Sets the shim of alglib.fhtr1d(Double[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fhtr1dinvDoubleArrayRefInt32">
            <summary>Sets the shim of alglib.fhtr1dinv(Double[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fisherldaDoubleMdArray2Int32Int32Int32Int32OutDoubleArrayOut">
            <summary>Sets the shim of alglib.fisherlda(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fisherldanDoubleMdArray2Int32Int32Int32Int32OutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.fisherldan(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, Double[,]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fresnelintegralDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of alglib.fresnelintegral(Double x, Double&amp; c, Double&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.fromchebyshevDoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.fromchebyshev(Double[] a, Int32 n, Double[]&amp; b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.ftestDoubleArrayInt32DoubleArrayInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.ftest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gammafunctionDouble">
            <summary>Sets the shim of alglib.gammafunction(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gkqgenerategaussjacobiInt32DoubleDoubleInt32OutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gkqgenerategaussjacobi(Int32 n, Double alpha, Double beta, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gkqgenerategausslegendreInt32Int32OutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gkqgenerategausslegendre(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gkqgeneraterecDoubleArrayDoubleArrayDoubleInt32Int32OutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gkqgeneraterec(Double[] alpha, Double[] beta, Double mu0, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gkqlegendrecalcInt32Int32OutDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gkqlegendrecalc(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gkqlegendretblInt32DoubleArrayOutDoubleArrayOutDoubleArrayOutDoubleOut">
            <summary>Sets the shim of alglib.gkqlegendretbl(Int32 n, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss, Double&amp; eps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategausshermiteInt32Int32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategausshermite(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategaussjacobiInt32DoubleDoubleInt32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategaussjacobi(Int32 n, Double alpha, Double beta, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategausslaguerreInt32DoubleInt32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategausslaguerre(Int32 n, Double alpha, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategausslegendreInt32Int32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategausslegendre(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategausslobattorecDoubleArrayDoubleArrayDoubleDoubleDoubleInt32Int32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategausslobattorec(Double[] alpha, Double[] beta, Double mu0, Double a, Double b, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgenerategaussradaurecDoubleArrayDoubleArrayDoubleDoubleInt32Int32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgenerategaussradaurec(Double[] alpha, Double[] beta, Double mu0, Double a, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.gqgeneraterecDoubleArrayDoubleArrayDoubleInt32Int32OutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.gqgeneraterec(Double[] alpha, Double[] beta, Double mu0, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hermitecalculateInt32Double">
            <summary>Sets the shim of alglib.hermitecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hermitecoefficientsInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.hermitecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hermitesumDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.hermitesum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixevdalglibcomplexMdArray2Int32Int32BooleanDoubleArrayOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hmatrixevd(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double[]&amp; d, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixevdialglibcomplexMdArray2Int32Int32BooleanInt32Int32DoubleArrayOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hmatrixevdi(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Int32 i1, Int32 i2, Double[]&amp; w, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixevdralglibcomplexMdArray2Int32Int32BooleanDoubleDoubleInt32OutDoubleArrayOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hmatrixevdr(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double b1, Double b2, Int32&amp; m, Double[]&amp; w, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixrndcondInt32DoublealglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixrndmultiplyalglibcomplexMdArray2RefInt32">
            <summary>Sets the shim of alglib.hmatrixrndmultiply(complex[,]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixtdalglibcomplexMdArray2RefInt32BooleanalglibcomplexArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.hmatrixtd(complex[,]&amp; a, Int32 n, Boolean isupper, complex[]&amp; tau, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hmatrixtdunpackqalglibcomplexMdArray2Int32BooleanalglibcomplexArrayalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hmatrixtdunpackq(complex[,] a, Int32 n, Boolean isupper, complex[] tau, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskyalglibcomplexMdArray2RefInt32Boolean">
            <summary>Sets the shim of alglib.hpdmatrixcholesky(complex[,]&amp; a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskyinversealglibcomplexMdArray2RefInt32BooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.hpdmatrixcholeskyinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskyinversealglibcomplexMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.hpdmatrixcholeskyinverse(complex[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskyrcondalglibcomplexMdArray2Int32Boolean">
            <summary>Sets the shim of alglib.hpdmatrixcholeskyrcond(complex[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskysolvealglibcomplexMdArray2Int32BooleanalglibcomplexArrayInt32OutalglibdensesolverreportOutalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.hpdmatrixcholeskysolve(complex[,] cha, Int32 n, Boolean isupper, complex[] b, Int32&amp; info, densesolverreport&amp; rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixcholeskysolvemalglibcomplexMdArray2Int32BooleanalglibcomplexMdArray2Int32Int32OutalglibdensesolverreportOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hpdmatrixcholeskysolvem(complex[,] cha, Int32 n, Boolean isupper, complex[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixinversealglibcomplexMdArray2RefInt32BooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.hpdmatrixinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixinversealglibcomplexMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.hpdmatrixinverse(complex[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixrcondalglibcomplexMdArray2Int32Boolean">
            <summary>Sets the shim of alglib.hpdmatrixrcond(complex[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixrndcondInt32DoublealglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hpdmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixsolvealglibcomplexMdArray2Int32BooleanalglibcomplexArrayInt32OutalglibdensesolverreportOutalglibcomplexArrayOut">
            <summary>Sets the shim of alglib.hpdmatrixsolve(complex[,] a, Int32 n, Boolean isupper, complex[] b, Int32&amp; info, densesolverreport&amp; rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hpdmatrixsolvemalglibcomplexMdArray2Int32BooleanalglibcomplexMdArray2Int32Int32OutalglibdensesolverreportOutalglibcomplexMdArray2Out">
            <summary>Sets the shim of alglib.hpdmatrixsolvem(complex[,] a, Int32 n, Boolean isupper, complex[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndexponentialalglibhqrndstateDouble">
            <summary>Sets the shim of alglib.hqrndexponential(hqrndstate state, Double lambdav)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndnormal2alglibhqrndstateDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.hqrndnormal2(hqrndstate state, Double&amp; x1, Double&amp; x2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndnormalalglibhqrndstate">
            <summary>Sets the shim of alglib.hqrndnormal(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndrandomizealglibhqrndstateOut">
            <summary>Sets the shim of alglib.hqrndrandomize(hqrndstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndseedInt32Int32alglibhqrndstateOut">
            <summary>Sets the shim of alglib.hqrndseed(Int32 s1, Int32 s2, hqrndstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrnduniformialglibhqrndstateInt32">
            <summary>Sets the shim of alglib.hqrnduniformi(hqrndstate state, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrnduniformralglibhqrndstate">
            <summary>Sets the shim of alglib.hqrnduniformr(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hqrndunit2alglibhqrndstateDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.hqrndunit2(hqrndstate state, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.hyperbolicsinecosineintegralsDoubleDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.hyperbolicsinecosineintegrals(Double x, Double&amp; shi, Double&amp; chi)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.idwbuildmodifiedshepardDoubleMdArray2Int32Int32Int32Int32Int32alglibidwinterpolantOut">
            <summary>Sets the shim of alglib.idwbuildmodifiedshepard(Double[,] xy, Int32 n, Int32 nx, Int32 d, Int32 nq, Int32 nw, idwinterpolant&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.idwbuildmodifiedshepardrDoubleMdArray2Int32Int32DoublealglibidwinterpolantOut">
            <summary>Sets the shim of alglib.idwbuildmodifiedshepardr(Double[,] xy, Int32 n, Int32 nx, Double r, idwinterpolant&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.idwbuildnoisyDoubleMdArray2Int32Int32Int32Int32Int32alglibidwinterpolantOut">
            <summary>Sets the shim of alglib.idwbuildnoisy(Double[,] xy, Int32 n, Int32 nx, Int32 d, Int32 nq, Int32 nw, idwinterpolant&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.idwcalcalglibidwinterpolantDoubleArray">
            <summary>Sets the shim of alglib.idwcalc(idwinterpolant z, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.incompletebetaDoubleDoubleDouble">
            <summary>Sets the shim of alglib.incompletebeta(Double a, Double b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.incompleteellipticintegraleDoubleDouble">
            <summary>Sets the shim of alglib.incompleteellipticintegrale(Double phi, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.incompleteellipticintegralkDoubleDouble">
            <summary>Sets the shim of alglib.incompleteellipticintegralk(Double phi, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.incompletegammaDoubleDouble">
            <summary>Sets the shim of alglib.incompletegamma(Double a, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.incompletegammacDoubleDouble">
            <summary>Sets the shim of alglib.incompletegammac(Double a, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invbinomialdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.invbinomialdistribution(Int32 k, Int32 n, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invchisquaredistributionDoubleDouble">
            <summary>Sets the shim of alglib.invchisquaredistribution(Double v, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.inverfDouble">
            <summary>Sets the shim of alglib.inverf(Double e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invfdistributionInt32Int32Double">
            <summary>Sets the shim of alglib.invfdistribution(Int32 a, Int32 b, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invincompletebetaDoubleDoubleDouble">
            <summary>Sets the shim of alglib.invincompletebeta(Double a, Double b, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invincompletegammacDoubleDouble">
            <summary>Sets the shim of alglib.invincompletegammac(Double a, Double y0)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invnormaldistributionDouble">
            <summary>Sets the shim of alglib.invnormaldistribution(Double y0)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invpoissondistributionInt32Double">
            <summary>Sets the shim of alglib.invpoissondistribution(Int32 k, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.invstudenttdistributionInt32Double">
            <summary>Sets the shim of alglib.invstudenttdistribution(Int32 k, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.jacobianellipticfunctionsDoubleDoubleDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.jacobianellipticfunctions(Double u, Double m, Double&amp; sn, Double&amp; cn, Double&amp; dn, Double&amp; ph)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.jarqueberatestDoubleArrayInt32DoubleOut">
            <summary>Sets the shim of alglib.jarqueberatest(Double[] x, Int32 n, Double&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreebuildDoubleMdArray2Int32Int32Int32Int32alglibkdtreeOut">
            <summary>Sets the shim of alglib.kdtreebuild(Double[,] xy, Int32 n, Int32 nx, Int32 ny, Int32 normtype, kdtree&amp; kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreebuildDoubleMdArray2Int32Int32Int32alglibkdtreeOut">
            <summary>Sets the shim of alglib.kdtreebuild(Double[,] xy, Int32 nx, Int32 ny, Int32 normtype, kdtree&amp; kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreebuildtaggedDoubleMdArray2Int32ArrayInt32Int32Int32Int32alglibkdtreeOut">
            <summary>Sets the shim of alglib.kdtreebuildtagged(Double[,] xy, Int32[] tags, Int32 n, Int32 nx, Int32 ny, Int32 normtype, kdtree&amp; kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreebuildtaggedDoubleMdArray2Int32ArrayInt32Int32Int32alglibkdtreeOut">
            <summary>Sets the shim of alglib.kdtreebuildtagged(Double[,] xy, Int32[] tags, Int32 nx, Int32 ny, Int32 normtype, kdtree&amp; kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryaknnalglibkdtreeDoubleArrayInt32BooleanDouble">
            <summary>Sets the shim of alglib.kdtreequeryaknn(kdtree kdt, Double[] x, Int32 k, Boolean selfmatch, Double eps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryaknnalglibkdtreeDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.kdtreequeryaknn(kdtree kdt, Double[] x, Int32 k, Double eps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryknnalglibkdtreeDoubleArrayInt32">
            <summary>Sets the shim of alglib.kdtreequeryknn(kdtree kdt, Double[] x, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryknnalglibkdtreeDoubleArrayInt32Boolean">
            <summary>Sets the shim of alglib.kdtreequeryknn(kdtree kdt, Double[] x, Int32 k, Boolean selfmatch)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsdistancesalglibkdtreeDoubleArrayRef">
            <summary>Sets the shim of alglib.kdtreequeryresultsdistances(kdtree kdt, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsdistancesialglibkdtreeDoubleArrayOut">
            <summary>Sets the shim of alglib.kdtreequeryresultsdistancesi(kdtree kdt, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultstagsalglibkdtreeInt32ArrayRef">
            <summary>Sets the shim of alglib.kdtreequeryresultstags(kdtree kdt, Int32[]&amp; tags)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultstagsialglibkdtreeInt32ArrayOut">
            <summary>Sets the shim of alglib.kdtreequeryresultstagsi(kdtree kdt, Int32[]&amp; tags)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsxalglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of alglib.kdtreequeryresultsx(kdtree kdt, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsxialglibkdtreeDoubleMdArray2Out">
            <summary>Sets the shim of alglib.kdtreequeryresultsxi(kdtree kdt, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsxyalglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of alglib.kdtreequeryresultsxy(kdtree kdt, Double[,]&amp; xy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryresultsxyialglibkdtreeDoubleMdArray2Out">
            <summary>Sets the shim of alglib.kdtreequeryresultsxyi(kdtree kdt, Double[,]&amp; xy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryrnnalglibkdtreeDoubleArrayDouble">
            <summary>Sets the shim of alglib.kdtreequeryrnn(kdtree kdt, Double[] x, Double r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreequeryrnnalglibkdtreeDoubleArrayDoubleBoolean">
            <summary>Sets the shim of alglib.kdtreequeryrnn(kdtree kdt, Double[] x, Double r, Boolean selfmatch)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreeserializealglibkdtreeStringOut">
            <summary>Sets the shim of alglib.kdtreeserialize(kdtree obj, String&amp; s_out)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kdtreeunserializeStringalglibkdtreeOut">
            <summary>Sets the shim of alglib.kdtreeunserialize(String s_in, kdtree&amp; obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.kmeansgenerateDoubleMdArray2Int32Int32Int32Int32Int32OutDoubleMdArray2OutInt32ArrayOut">
            <summary>Sets the shim of alglib.kmeansgenerate(Double[,] xy, Int32 npoints, Int32 nvars, Int32 k, Int32 restarts, Int32&amp; info, Double[,]&amp; c, Int32[]&amp; xyc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.laguerrecalculateInt32Double">
            <summary>Sets the shim of alglib.laguerrecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.laguerrecoefficientsInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.laguerrecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.laguerresumDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.laguerresum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.legendrecalculateInt32Double">
            <summary>Sets the shim of alglib.legendrecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.legendrecoefficientsInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.legendrecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.legendresumDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.legendresum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lngammaDoubleDoubleOut">
            <summary>Sets the shim of alglib.lngamma(Double x, Double&amp; sgngam)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lravgerroralgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.lravgerror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lravgrelerroralgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.lravgrelerror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrbuildDoubleMdArray2Int32Int32Int32OutalgliblinearmodelOutalgliblrreportOut">
            <summary>Sets the shim of alglib.lrbuild(Double[,] xy, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel&amp; lm, lrreport&amp; ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrbuildsDoubleMdArray2DoubleArrayInt32Int32Int32OutalgliblinearmodelOutalgliblrreportOut">
            <summary>Sets the shim of alglib.lrbuilds(Double[,] xy, Double[] s, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel&amp; lm, lrreport&amp; ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrbuildzDoubleMdArray2Int32Int32Int32OutalgliblinearmodelOutalgliblrreportOut">
            <summary>Sets the shim of alglib.lrbuildz(Double[,] xy, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel&amp; lm, lrreport&amp; ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrbuildzsDoubleMdArray2DoubleArrayInt32Int32Int32OutalgliblinearmodelOutalgliblrreportOut">
            <summary>Sets the shim of alglib.lrbuildzs(Double[,] xy, Double[] s, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel&amp; lm, lrreport&amp; ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrpackDoubleArrayInt32algliblinearmodelOut">
            <summary>Sets the shim of alglib.lrpack(Double[] v, Int32 nvars, linearmodel&amp; lm)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrprocessalgliblinearmodelDoubleArray">
            <summary>Sets the shim of alglib.lrprocess(linearmodel lm, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrrmserroralgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.lrrmserror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lrunpackalgliblinearmodelDoubleArrayOutInt32Out">
            <summary>Sets the shim of alglib.lrunpack(linearmodel lm, Double[]&amp; v, Int32&amp; nvars)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefDoubleMdArray2DoubleArrayDoubleArrayDoublealgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatef(Double[,] x, Double[] y, Double[] c, Double diffstep, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32DoublealgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatef(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, Double diffstep, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefgDoubleMdArray2DoubleArrayDoubleArrayBooleanalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatefg(Double[,] x, Double[] y, Double[] c, Boolean cheapfg, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefgDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32BooleanalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatefg(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, Boolean cheapfg, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefghDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32algliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatefgh(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatefghDoubleMdArray2DoubleArrayDoubleArrayalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatefgh(Double[,] x, Double[] y, Double[] c, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayDoublealgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewf(Double[,] x, Double[] y, Double[] w, Double[] c, Double diffstep, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32DoublealgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewf(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, Double diffstep, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfgDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayBooleanalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewfg(Double[,] x, Double[] y, Double[] w, Double[] c, Boolean cheapfg, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfgDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32BooleanalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewfg(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, Boolean cheapfg, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfghDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32algliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewfgh(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitcreatewfghDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayalgliblsfitstateOut">
            <summary>Sets the shim of alglib.lsfitcreatewfgh(Double[,] x, Double[] y, Double[] w, Double[] c, lsfitstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitfitalgliblsfitstatealglibndimensional_pfuncalglibndimensional_pgradalglibndimensional_phessalglibndimensional_repObject">
            <summary>Sets the shim of alglib.lsfitfit(lsfitstate state, ndimensional_pfunc func, ndimensional_pgrad grad, ndimensional_phess hess, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitfitalgliblsfitstatealglibndimensional_pfuncalglibndimensional_pgradalglibndimensional_repObject">
            <summary>Sets the shim of alglib.lsfitfit(lsfitstate state, ndimensional_pfunc func, ndimensional_pgrad grad, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitfitalgliblsfitstatealglibndimensional_pfuncalglibndimensional_repObject">
            <summary>Sets the shim of alglib.lsfitfit(lsfitstate state, ndimensional_pfunc func, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfititerationalgliblsfitstate">
            <summary>Sets the shim of alglib.lsfititeration(lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearDoubleArrayDoubleMdArray2Int32Int32Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinear(Double[] y, Double[,] fmatrix, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearDoubleArrayDoubleMdArray2Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinear(Double[] y, Double[,] fmatrix, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearcDoubleArrayDoubleMdArray2DoubleMdArray2Int32Int32Int32Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearc(Double[] y, Double[,] fmatrix, Double[,] cmatrix, Int32 n, Int32 m, Int32 k, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearcDoubleArrayDoubleMdArray2DoubleMdArray2Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearc(Double[] y, Double[,] fmatrix, Double[,] cmatrix, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearwDoubleArrayDoubleArrayDoubleMdArray2Int32Int32Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearw(Double[] y, Double[] w, Double[,] fmatrix, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearwDoubleArrayDoubleArrayDoubleMdArray2Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearw(Double[] y, Double[] w, Double[,] fmatrix, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearwcDoubleArrayDoubleArrayDoubleMdArray2DoubleMdArray2Int32Int32Int32Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearwc(Double[] y, Double[] w, Double[,] fmatrix, Double[,] cmatrix, Int32 n, Int32 m, Int32 k, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitlinearwcDoubleArrayDoubleArrayDoubleMdArray2DoubleMdArray2Int32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitlinearwc(Double[] y, Double[] w, Double[,] fmatrix, Double[,] cmatrix, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitresultsalgliblsfitstateInt32OutDoubleArrayOutalgliblsfitreportOut">
            <summary>Sets the shim of alglib.lsfitresults(lsfitstate state, Int32&amp; info, Double[]&amp; c, lsfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitsetbcalgliblsfitstateDoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.lsfitsetbc(lsfitstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitsetcondalgliblsfitstateDoubleDoubleInt32">
            <summary>Sets the shim of alglib.lsfitsetcond(lsfitstate state, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitsetscalealgliblsfitstateDoubleArray">
            <summary>Sets the shim of alglib.lsfitsetscale(lsfitstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitsetstpmaxalgliblsfitstateDouble">
            <summary>Sets the shim of alglib.lsfitsetstpmax(lsfitstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.lsfitsetxrepalgliblsfitstateBoolean">
            <summary>Sets the shim of alglib.lsfitsetxrep(lsfitstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mannwhitneyutestDoubleArrayInt32DoubleArrayInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.mannwhitneyutest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdaddbcalglibmcpdstateInt32Int32DoubleDouble">
            <summary>Sets the shim of alglib.mcpdaddbc(mcpdstate s, Int32 i, Int32 j, Double bndl, Double bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdaddecalglibmcpdstateInt32Int32Double">
            <summary>Sets the shim of alglib.mcpdaddec(mcpdstate s, Int32 i, Int32 j, Double c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdaddtrackalglibmcpdstateDoubleMdArray2">
            <summary>Sets the shim of alglib.mcpdaddtrack(mcpdstate s, Double[,] xy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdaddtrackalglibmcpdstateDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mcpdaddtrack(mcpdstate s, Double[,] xy, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdcreateInt32alglibmcpdstateOut">
            <summary>Sets the shim of alglib.mcpdcreate(Int32 n, mcpdstate&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdcreateentryInt32Int32alglibmcpdstateOut">
            <summary>Sets the shim of alglib.mcpdcreateentry(Int32 n, Int32 entrystate, mcpdstate&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdcreateentryexitInt32Int32Int32alglibmcpdstateOut">
            <summary>Sets the shim of alglib.mcpdcreateentryexit(Int32 n, Int32 entrystate, Int32 exitstate, mcpdstate&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdcreateexitInt32Int32alglibmcpdstateOut">
            <summary>Sets the shim of alglib.mcpdcreateexit(Int32 n, Int32 exitstate, mcpdstate&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdresultsalglibmcpdstateDoubleMdArray2OutalglibmcpdreportOut">
            <summary>Sets the shim of alglib.mcpdresults(mcpdstate s, Double[,]&amp; p, mcpdreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetbcalglibmcpdstateDoubleMdArray2DoubleMdArray2">
            <summary>Sets the shim of alglib.mcpdsetbc(mcpdstate s, Double[,] bndl, Double[,] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetecalglibmcpdstateDoubleMdArray2">
            <summary>Sets the shim of alglib.mcpdsetec(mcpdstate s, Double[,] ec)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetlcalglibmcpdstateDoubleMdArray2Int32Array">
            <summary>Sets the shim of alglib.mcpdsetlc(mcpdstate s, Double[,] c, Int32[] ct)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetlcalglibmcpdstateDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of alglib.mcpdsetlc(mcpdstate s, Double[,] c, Int32[] ct, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetpredictionweightsalglibmcpdstateDoubleArray">
            <summary>Sets the shim of alglib.mcpdsetpredictionweights(mcpdstate s, Double[] pw)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsetprioralglibmcpdstateDoubleMdArray2">
            <summary>Sets the shim of alglib.mcpdsetprior(mcpdstate s, Double[,] pp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsettikhonovregularizeralglibmcpdstateDouble">
            <summary>Sets the shim of alglib.mcpdsettikhonovregularizer(mcpdstate s, Double v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mcpdsolvealglibmcpdstate">
            <summary>Sets the shim of alglib.mcpdsolve(mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasacreateDoubleArrayDoubleArrayDoubleArrayalglibminasastateOut">
            <summary>Sets the shim of alglib.minasacreate(Double[] x, Double[] bndl, Double[] bndu, minasastate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasacreateInt32DoubleArrayDoubleArrayDoubleArrayalglibminasastateOut">
            <summary>Sets the shim of alglib.minasacreate(Int32 n, Double[] x, Double[] bndl, Double[] bndu, minasastate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasaiterationalglibminasastate">
            <summary>Sets the shim of alglib.minasaiteration(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasaoptimizealglibminasastatealglibndimensional_gradalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minasaoptimize(minasastate state, ndimensional_grad grad, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasarestartfromalglibminasastateDoubleArrayDoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.minasarestartfrom(minasastate state, Double[] x, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasaresultsalglibminasastateDoubleArrayOutalglibminasareportOut">
            <summary>Sets the shim of alglib.minasaresults(minasastate state, Double[]&amp; x, minasareport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasaresultsbufalglibminasastateDoubleArrayRefalglibminasareport">
            <summary>Sets the shim of alglib.minasaresultsbuf(minasastate state, Double[]&amp; x, minasareport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasasetalgorithmalglibminasastateInt32">
            <summary>Sets the shim of alglib.minasasetalgorithm(minasastate state, Int32 algotype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasasetcondalglibminasastateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of alglib.minasasetcond(minasastate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasasetstpmaxalglibminasastateDouble">
            <summary>Sets the shim of alglib.minasasetstpmax(minasastate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minasasetxrepalglibminasastateBoolean">
            <summary>Sets the shim of alglib.minasasetxrep(minasastate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleiccreateDoubleArrayalglibminbleicstateOut">
            <summary>Sets the shim of alglib.minbleiccreate(Double[] x, minbleicstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleiccreateInt32DoubleArrayalglibminbleicstateOut">
            <summary>Sets the shim of alglib.minbleiccreate(Int32 n, Double[] x, minbleicstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleiccreatefDoubleArrayDoublealglibminbleicstateOut">
            <summary>Sets the shim of alglib.minbleiccreatef(Double[] x, Double diffstep, minbleicstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleiccreatefInt32DoubleArrayDoublealglibminbleicstateOut">
            <summary>Sets the shim of alglib.minbleiccreatef(Int32 n, Double[] x, Double diffstep, minbleicstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleiciterationalglibminbleicstate">
            <summary>Sets the shim of alglib.minbleiciteration(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicoptimizealglibminbleicstatealglibndimensional_funcalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minbleicoptimize(minbleicstate state, ndimensional_func func, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicoptimizealglibminbleicstatealglibndimensional_gradalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minbleicoptimize(minbleicstate state, ndimensional_grad grad, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicrestartfromalglibminbleicstateDoubleArray">
            <summary>Sets the shim of alglib.minbleicrestartfrom(minbleicstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicresultsalglibminbleicstateDoubleArrayOutalglibminbleicreportOut">
            <summary>Sets the shim of alglib.minbleicresults(minbleicstate state, Double[]&amp; x, minbleicreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicresultsbufalglibminbleicstateDoubleArrayRefalglibminbleicreport">
            <summary>Sets the shim of alglib.minbleicresultsbuf(minbleicstate state, Double[]&amp; x, minbleicreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetbarrierdecayalglibminbleicstateDouble">
            <summary>Sets the shim of alglib.minbleicsetbarrierdecay(minbleicstate state, Double mudecay)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetbarrierwidthalglibminbleicstateDouble">
            <summary>Sets the shim of alglib.minbleicsetbarrierwidth(minbleicstate state, Double mu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetbcalglibminbleicstateDoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.minbleicsetbc(minbleicstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetinnercondalglibminbleicstateDoubleDoubleDouble">
            <summary>Sets the shim of alglib.minbleicsetinnercond(minbleicstate state, Double epsg, Double epsf, Double epsx)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetlcalglibminbleicstateDoubleMdArray2Int32Array">
            <summary>Sets the shim of alglib.minbleicsetlc(minbleicstate state, Double[,] c, Int32[] ct)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetlcalglibminbleicstateDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of alglib.minbleicsetlc(minbleicstate state, Double[,] c, Int32[] ct, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetmaxitsalglibminbleicstateInt32">
            <summary>Sets the shim of alglib.minbleicsetmaxits(minbleicstate state, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetoutercondalglibminbleicstateDoubleDouble">
            <summary>Sets the shim of alglib.minbleicsetoutercond(minbleicstate state, Double epsx, Double epsi)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetprecdefaultalglibminbleicstate">
            <summary>Sets the shim of alglib.minbleicsetprecdefault(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetprecdiagalglibminbleicstateDoubleArray">
            <summary>Sets the shim of alglib.minbleicsetprecdiag(minbleicstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetprecscalealglibminbleicstate">
            <summary>Sets the shim of alglib.minbleicsetprecscale(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetscalealglibminbleicstateDoubleArray">
            <summary>Sets the shim of alglib.minbleicsetscale(minbleicstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetstpmaxalglibminbleicstateDouble">
            <summary>Sets the shim of alglib.minbleicsetstpmax(minbleicstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minbleicsetxrepalglibminbleicstateBoolean">
            <summary>Sets the shim of alglib.minbleicsetxrep(minbleicstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgcreateDoubleArrayalglibmincgstateOut">
            <summary>Sets the shim of alglib.mincgcreate(Double[] x, mincgstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgcreateInt32DoubleArrayalglibmincgstateOut">
            <summary>Sets the shim of alglib.mincgcreate(Int32 n, Double[] x, mincgstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgcreatefDoubleArrayDoublealglibmincgstateOut">
            <summary>Sets the shim of alglib.mincgcreatef(Double[] x, Double diffstep, mincgstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgcreatefInt32DoubleArrayDoublealglibmincgstateOut">
            <summary>Sets the shim of alglib.mincgcreatef(Int32 n, Double[] x, Double diffstep, mincgstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgiterationalglibmincgstate">
            <summary>Sets the shim of alglib.mincgiteration(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgoptimizealglibmincgstatealglibndimensional_funcalglibndimensional_repObject">
            <summary>Sets the shim of alglib.mincgoptimize(mincgstate state, ndimensional_func func, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgoptimizealglibmincgstatealglibndimensional_gradalglibndimensional_repObject">
            <summary>Sets the shim of alglib.mincgoptimize(mincgstate state, ndimensional_grad grad, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgrestartfromalglibmincgstateDoubleArray">
            <summary>Sets the shim of alglib.mincgrestartfrom(mincgstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgresultsalglibmincgstateDoubleArrayOutalglibmincgreportOut">
            <summary>Sets the shim of alglib.mincgresults(mincgstate state, Double[]&amp; x, mincgreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgresultsbufalglibmincgstateDoubleArrayRefalglibmincgreport">
            <summary>Sets the shim of alglib.mincgresultsbuf(mincgstate state, Double[]&amp; x, mincgreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetcgtypealglibmincgstateInt32">
            <summary>Sets the shim of alglib.mincgsetcgtype(mincgstate state, Int32 cgtype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetcondalglibmincgstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of alglib.mincgsetcond(mincgstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetprecdefaultalglibmincgstate">
            <summary>Sets the shim of alglib.mincgsetprecdefault(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetprecdiagalglibmincgstateDoubleArray">
            <summary>Sets the shim of alglib.mincgsetprecdiag(mincgstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetprecscalealglibmincgstate">
            <summary>Sets the shim of alglib.mincgsetprecscale(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetscalealglibmincgstateDoubleArray">
            <summary>Sets the shim of alglib.mincgsetscale(mincgstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetstpmaxalglibmincgstateDouble">
            <summary>Sets the shim of alglib.mincgsetstpmax(mincgstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsetxrepalglibmincgstateBoolean">
            <summary>Sets the shim of alglib.mincgsetxrep(mincgstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mincgsuggeststepalglibmincgstateDouble">
            <summary>Sets the shim of alglib.mincgsuggeststep(mincgstate state, Double stp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgscreateInt32DoubleArrayalglibminlbfgsstateOut">
            <summary>Sets the shim of alglib.minlbfgscreate(Int32 m, Double[] x, minlbfgsstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgscreateInt32Int32DoubleArrayalglibminlbfgsstateOut">
            <summary>Sets the shim of alglib.minlbfgscreate(Int32 n, Int32 m, Double[] x, minlbfgsstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgscreatefInt32DoubleArrayDoublealglibminlbfgsstateOut">
            <summary>Sets the shim of alglib.minlbfgscreatef(Int32 m, Double[] x, Double diffstep, minlbfgsstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgscreatefInt32Int32DoubleArrayDoublealglibminlbfgsstateOut">
            <summary>Sets the shim of alglib.minlbfgscreatef(Int32 n, Int32 m, Double[] x, Double diffstep, minlbfgsstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsiterationalglibminlbfgsstate">
            <summary>Sets the shim of alglib.minlbfgsiteration(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsoptimizealglibminlbfgsstatealglibndimensional_funcalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlbfgsoptimize(minlbfgsstate state, ndimensional_func func, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsoptimizealglibminlbfgsstatealglibndimensional_gradalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlbfgsoptimize(minlbfgsstate state, ndimensional_grad grad, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsrestartfromalglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of alglib.minlbfgsrestartfrom(minlbfgsstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsresultsalglibminlbfgsstateDoubleArrayOutalglibminlbfgsreportOut">
            <summary>Sets the shim of alglib.minlbfgsresults(minlbfgsstate state, Double[]&amp; x, minlbfgsreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgsresultsbufalglibminlbfgsstateDoubleArrayRefalglibminlbfgsreport">
            <summary>Sets the shim of alglib.minlbfgsresultsbuf(minlbfgsstate state, Double[]&amp; x, minlbfgsreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetcholeskypreconditioneralglibminlbfgsstateDoubleMdArray2Boolean">
            <summary>Sets the shim of alglib.minlbfgssetcholeskypreconditioner(minlbfgsstate state, Double[,] p, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetcondalglibminlbfgsstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of alglib.minlbfgssetcond(minlbfgsstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetdefaultpreconditioneralglibminlbfgsstate">
            <summary>Sets the shim of alglib.minlbfgssetdefaultpreconditioner(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetpreccholeskyalglibminlbfgsstateDoubleMdArray2Boolean">
            <summary>Sets the shim of alglib.minlbfgssetpreccholesky(minlbfgsstate state, Double[,] p, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetprecdefaultalglibminlbfgsstate">
            <summary>Sets the shim of alglib.minlbfgssetprecdefault(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetprecdiagalglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of alglib.minlbfgssetprecdiag(minlbfgsstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetprecscalealglibminlbfgsstate">
            <summary>Sets the shim of alglib.minlbfgssetprecscale(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetscalealglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of alglib.minlbfgssetscale(minlbfgsstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetstpmaxalglibminlbfgsstateDouble">
            <summary>Sets the shim of alglib.minlbfgssetstpmax(minlbfgsstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlbfgssetxrepalglibminlbfgsstateBoolean">
            <summary>Sets the shim of alglib.minlbfgssetxrep(minlbfgsstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefghDoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefgh(Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefghInt32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefgh(Int32 n, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefgjInt32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefgj(Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefgjInt32Int32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefgj(Int32 n, Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefjInt32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefj(Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatefjInt32Int32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatefj(Int32 n, Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevInt32DoubleArrayDoublealglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatev(Int32 m, Double[] x, Double diffstep, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevInt32Int32DoubleArrayDoublealglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatev(Int32 n, Int32 m, Double[] x, Double diffstep, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevgjInt32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatevgj(Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevgjInt32Int32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatevgj(Int32 n, Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevjInt32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatevj(Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmcreatevjInt32Int32DoubleArrayalglibminlmstateOut">
            <summary>Sets the shim of alglib.minlmcreatevj(Int32 n, Int32 m, Double[] x, minlmstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmiterationalglibminlmstate">
            <summary>Sets the shim of alglib.minlmiteration(minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmoptimizealglibminlmstatealglibndimensional_funcalglibndimensional_gradalglibndimensional_hessalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlmoptimize(minlmstate state, ndimensional_func func, ndimensional_grad grad, ndimensional_hess hess, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmoptimizealglibminlmstatealglibndimensional_funcalglibndimensional_gradalglibndimensional_jacalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlmoptimize(minlmstate state, ndimensional_func func, ndimensional_grad grad, ndimensional_jac jac, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmoptimizealglibminlmstatealglibndimensional_funcalglibndimensional_jacalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlmoptimize(minlmstate state, ndimensional_func func, ndimensional_jac jac, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmoptimizealglibminlmstatealglibndimensional_fvecalglibndimensional_jacalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlmoptimize(minlmstate state, ndimensional_fvec fvec, ndimensional_jac jac, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmoptimizealglibminlmstatealglibndimensional_fvecalglibndimensional_repObject">
            <summary>Sets the shim of alglib.minlmoptimize(minlmstate state, ndimensional_fvec fvec, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmrestartfromalglibminlmstateDoubleArray">
            <summary>Sets the shim of alglib.minlmrestartfrom(minlmstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmresultsalglibminlmstateDoubleArrayOutalglibminlmreportOut">
            <summary>Sets the shim of alglib.minlmresults(minlmstate state, Double[]&amp; x, minlmreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmresultsbufalglibminlmstateDoubleArrayRefalglibminlmreport">
            <summary>Sets the shim of alglib.minlmresultsbuf(minlmstate state, Double[]&amp; x, minlmreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetacctypealglibminlmstateInt32">
            <summary>Sets the shim of alglib.minlmsetacctype(minlmstate state, Int32 acctype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetbcalglibminlmstateDoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.minlmsetbc(minlmstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetcondalglibminlmstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of alglib.minlmsetcond(minlmstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetscalealglibminlmstateDoubleArray">
            <summary>Sets the shim of alglib.minlmsetscale(minlmstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetstpmaxalglibminlmstateDouble">
            <summary>Sets the shim of alglib.minlmsetstpmax(minlmstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minlmsetxrepalglibminlmstateBoolean">
            <summary>Sets the shim of alglib.minlmsetxrep(minlmstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpcreateInt32alglibminqpstateOut">
            <summary>Sets the shim of alglib.minqpcreate(Int32 n, minqpstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpoptimizealglibminqpstate">
            <summary>Sets the shim of alglib.minqpoptimize(minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpresultsalglibminqpstateDoubleArrayOutalglibminqpreportOut">
            <summary>Sets the shim of alglib.minqpresults(minqpstate state, Double[]&amp; x, minqpreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpresultsbufalglibminqpstateDoubleArrayRefalglibminqpreport">
            <summary>Sets the shim of alglib.minqpresultsbuf(minqpstate state, Double[]&amp; x, minqpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetalgocholeskyalglibminqpstate">
            <summary>Sets the shim of alglib.minqpsetalgocholesky(minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetbcalglibminqpstateDoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.minqpsetbc(minqpstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetlineartermalglibminqpstateDoubleArray">
            <summary>Sets the shim of alglib.minqpsetlinearterm(minqpstate state, Double[] b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetoriginalglibminqpstateDoubleArray">
            <summary>Sets the shim of alglib.minqpsetorigin(minqpstate state, Double[] xorigin)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetquadratictermalglibminqpstateDoubleMdArray2">
            <summary>Sets the shim of alglib.minqpsetquadraticterm(minqpstate state, Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetquadratictermalglibminqpstateDoubleMdArray2Boolean">
            <summary>Sets the shim of alglib.minqpsetquadraticterm(minqpstate state, Double[,] a, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.minqpsetstartingpointalglibminqpstateDoubleArray">
            <summary>Sets the shim of alglib.minqpsetstartingpoint(minqpstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpactivationfunctionDoubleInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.mlpactivationfunction(Double net, Int32 k, Double&amp; f, Double&amp; df, Double&amp; d2f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpavgcealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpavgce(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpavgerroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpavgerror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpavgrelerroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpavgrelerror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpclserroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpclserror(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreate0Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreate0(Int32 nin, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreate1Int32Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreate1(Int32 nin, Int32 nhid, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreate2Int32Int32Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreate2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreateb0Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreateb0(Int32 nin, Int32 nout, Double b, Double d, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreateb1Int32Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreateb1(Int32 nin, Int32 nhid, Int32 nout, Double b, Double d, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreateb2Int32Int32Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreateb2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double b, Double d, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreatec0Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreatec0(Int32 nin, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreatec1Int32Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreatec1(Int32 nin, Int32 nhid, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreatec2Int32Int32Int32Int32alglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreatec2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreater0Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreater0(Int32 nin, Int32 nout, Double a, Double b, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreater1Int32Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreater1(Int32 nin, Int32 nhid, Int32 nout, Double a, Double b, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpcreater2Int32Int32Int32Int32DoubleDoublealglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpcreater2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double a, Double b, multilayerperceptron&amp; network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeavgcealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpeavgce(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeavgerroralglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpeavgerror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeavgrelerroralglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpeavgrelerror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpebagginglbfgsalglibmlpensembleDoubleMdArray2Int32DoubleInt32DoubleInt32Int32OutalglibmlpreportOutalglibmlpcvreportOut">
            <summary>Sets the shim of alglib.mlpebagginglbfgs(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32&amp; info, mlpreport&amp; rep, mlpcvreport&amp; ooberrors)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpebagginglmalglibmlpensembleDoubleMdArray2Int32DoubleInt32Int32OutalglibmlpreportOutalglibmlpcvreportOut">
            <summary>Sets the shim of alglib.mlpebagginglm(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport&amp; rep, mlpcvreport&amp; ooberrors)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreate0Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreate0(Int32 nin, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreate1Int32Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreate1(Int32 nin, Int32 nhid, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreate2Int32Int32Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreate2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreateb0Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreateb0(Int32 nin, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreateb1Int32Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreateb1(Int32 nin, Int32 nhid, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreateb2Int32Int32Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreateb2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreatec0Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreatec0(Int32 nin, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreatec1Int32Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreatec1(Int32 nin, Int32 nhid, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreatec2Int32Int32Int32Int32Int32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreatec2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreatefromnetworkalglibmultilayerperceptronInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreatefromnetwork(multilayerperceptron network, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreater0Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreater0(Int32 nin, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreater1Int32Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreater1(Int32 nin, Int32 nhid, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpecreater2Int32Int32Int32Int32DoubleDoubleInt32alglibmlpensembleOut">
            <summary>Sets the shim of alglib.mlpecreater2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble&amp; ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeissoftmaxalglibmlpensemble">
            <summary>Sets the shim of alglib.mlpeissoftmax(mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeprocessalglibmlpensembleDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpeprocess(mlpensemble ensemble, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpeprocessialglibmlpensembleDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.mlpeprocessi(mlpensemble ensemble, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpepropertiesalglibmlpensembleInt32OutInt32Out">
            <summary>Sets the shim of alglib.mlpeproperties(mlpensemble ensemble, Int32&amp; nin, Int32&amp; nout)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlperandomizealglibmlpensemble">
            <summary>Sets the shim of alglib.mlperandomize(mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlperelclserroralglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlperelclserror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpermserroralglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlpermserror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlperroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlperror(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlperrornalglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlperrorn(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpetrainesalglibmlpensembleDoubleMdArray2Int32DoubleInt32Int32OutalglibmlpreportOut">
            <summary>Sets the shim of alglib.mlpetraines(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetinputscalingalglibmultilayerperceptronInt32DoubleOutDoubleOut">
            <summary>Sets the shim of alglib.mlpgetinputscaling(multilayerperceptron network, Int32 i, Double&amp; mean, Double&amp; sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetlayerscountalglibmultilayerperceptron">
            <summary>Sets the shim of alglib.mlpgetlayerscount(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetlayersizealglibmultilayerperceptronInt32">
            <summary>Sets the shim of alglib.mlpgetlayersize(multilayerperceptron network, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetneuroninfoalglibmultilayerperceptronInt32Int32Int32OutDoubleOut">
            <summary>Sets the shim of alglib.mlpgetneuroninfo(multilayerperceptron network, Int32 k, Int32 i, Int32&amp; fkind, Double&amp; threshold)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetoutputscalingalglibmultilayerperceptronInt32DoubleOutDoubleOut">
            <summary>Sets the shim of alglib.mlpgetoutputscaling(multilayerperceptron network, Int32 i, Double&amp; mean, Double&amp; sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgetweightalglibmultilayerperceptronInt32Int32Int32Int32">
            <summary>Sets the shim of alglib.mlpgetweight(multilayerperceptron network, Int32 k0, Int32 i0, Int32 k1, Int32 i1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgradalglibmultilayerperceptronDoubleArrayDoubleArrayDoubleOutDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpgrad(multilayerperceptron network, Double[] x, Double[] desiredy, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgradbatchalglibmultilayerperceptronDoubleMdArray2Int32DoubleOutDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpgradbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgradnalglibmultilayerperceptronDoubleArrayDoubleArrayDoubleOutDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpgradn(multilayerperceptron network, Double[] x, Double[] desiredy, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpgradnbatchalglibmultilayerperceptronDoubleMdArray2Int32DoubleOutDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpgradnbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlphessianbatchalglibmultilayerperceptronDoubleMdArray2Int32DoubleOutDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of alglib.mlphessianbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlphessiannbatchalglibmultilayerperceptronDoubleMdArray2Int32DoubleOutDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of alglib.mlphessiannbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpissoftmaxalglibmultilayerperceptron">
            <summary>Sets the shim of alglib.mlpissoftmax(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpkfoldcvlbfgsalglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32DoubleInt32Int32Int32OutalglibmlpreportOutalglibmlpcvreportOut">
            <summary>Sets the shim of alglib.mlpkfoldcvlbfgs(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32 foldscount, Int32&amp; info, mlpreport&amp; rep, mlpcvreport&amp; cvrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpkfoldcvlmalglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32Int32Int32OutalglibmlpreportOutalglibmlpcvreportOut">
            <summary>Sets the shim of alglib.mlpkfoldcvlm(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32 foldscount, Int32&amp; info, mlpreport&amp; rep, mlpcvreport&amp; cvrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpprocessalglibmultilayerperceptronDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of alglib.mlpprocess(multilayerperceptron network, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpprocessialglibmultilayerperceptronDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.mlpprocessi(multilayerperceptron network, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlppropertiesalglibmultilayerperceptronInt32OutInt32OutInt32Out">
            <summary>Sets the shim of alglib.mlpproperties(multilayerperceptron network, Int32&amp; nin, Int32&amp; nout, Int32&amp; wcount)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlprandomizealglibmultilayerperceptron">
            <summary>Sets the shim of alglib.mlprandomize(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlprandomizefullalglibmultilayerperceptron">
            <summary>Sets the shim of alglib.mlprandomizefull(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlprelclserroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlprelclserror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlprmserroralglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mlprmserror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpserializealglibmultilayerperceptronStringOut">
            <summary>Sets the shim of alglib.mlpserialize(multilayerperceptron obj, String&amp; s_out)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpsetinputscalingalglibmultilayerperceptronInt32DoubleDouble">
            <summary>Sets the shim of alglib.mlpsetinputscaling(multilayerperceptron network, Int32 i, Double mean, Double sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpsetneuroninfoalglibmultilayerperceptronInt32Int32Int32Double">
            <summary>Sets the shim of alglib.mlpsetneuroninfo(multilayerperceptron network, Int32 k, Int32 i, Int32 fkind, Double threshold)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpsetoutputscalingalglibmultilayerperceptronInt32DoubleDouble">
            <summary>Sets the shim of alglib.mlpsetoutputscaling(multilayerperceptron network, Int32 i, Double mean, Double sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpsetweightalglibmultilayerperceptronInt32Int32Int32Int32Double">
            <summary>Sets the shim of alglib.mlpsetweight(multilayerperceptron network, Int32 k0, Int32 i0, Int32 k1, Int32 i1, Double w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlptrainesalglibmultilayerperceptronDoubleMdArray2Int32DoubleMdArray2Int32DoubleInt32Int32OutalglibmlpreportOut">
            <summary>Sets the shim of alglib.mlptraines(multilayerperceptron network, Double[,] trnxy, Int32 trnsize, Double[,] valxy, Int32 valsize, Double decay, Int32 restarts, Int32&amp; info, mlpreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlptrainlbfgsalglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32DoubleInt32Int32OutalglibmlpreportOut">
            <summary>Sets the shim of alglib.mlptrainlbfgs(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32&amp; info, mlpreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlptrainlmalglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32Int32OutalglibmlpreportOut">
            <summary>Sets the shim of alglib.mlptrainlm(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mlpunserializeStringalglibmultilayerperceptronOut">
            <summary>Sets the shim of alglib.mlpunserialize(String s_in, multilayerperceptron&amp; obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlavgcealgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlavgce(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlavgerroralgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlavgerror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlavgrelerroralgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlavgrelerror(logitmodel lm, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlclserroralgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlclserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlpackDoubleMdArray2Int32Int32algliblogitmodelOut">
            <summary>Sets the shim of alglib.mnlpack(Double[,] a, Int32 nvars, Int32 nclasses, logitmodel&amp; lm)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlprocessalgliblogitmodelDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of alglib.mnlprocess(logitmodel lm, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlprocessialgliblogitmodelDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.mnlprocessi(logitmodel lm, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlrelclserroralgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlrelclserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlrmserroralgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.mnlrmserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnltrainhDoubleMdArray2Int32Int32Int32Int32OutalgliblogitmodelOutalglibmnlreportOut">
            <summary>Sets the shim of alglib.mnltrainh(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, logitmodel&amp; lm, mnlreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.mnlunpackalgliblogitmodelDoubleMdArray2OutInt32OutInt32Out">
            <summary>Sets the shim of alglib.mnlunpack(logitmodel lm, Double[,]&amp; a, Int32&amp; nvars, Int32&amp; nclasses)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqcreatelmInt32DoubleArrayalglibnleqstateOut">
            <summary>Sets the shim of alglib.nleqcreatelm(Int32 m, Double[] x, nleqstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqcreatelmInt32Int32DoubleArrayalglibnleqstateOut">
            <summary>Sets the shim of alglib.nleqcreatelm(Int32 n, Int32 m, Double[] x, nleqstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqiterationalglibnleqstate">
            <summary>Sets the shim of alglib.nleqiteration(nleqstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqrestartfromalglibnleqstateDoubleArray">
            <summary>Sets the shim of alglib.nleqrestartfrom(nleqstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqresultsalglibnleqstateDoubleArrayOutalglibnleqreportOut">
            <summary>Sets the shim of alglib.nleqresults(nleqstate state, Double[]&amp; x, nleqreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqresultsbufalglibnleqstateDoubleArrayRefalglibnleqreport">
            <summary>Sets the shim of alglib.nleqresultsbuf(nleqstate state, Double[]&amp; x, nleqreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqsetcondalglibnleqstateDoubleInt32">
            <summary>Sets the shim of alglib.nleqsetcond(nleqstate state, Double epsf, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqsetstpmaxalglibnleqstateDouble">
            <summary>Sets the shim of alglib.nleqsetstpmax(nleqstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqsetxrepalglibnleqstateBoolean">
            <summary>Sets the shim of alglib.nleqsetxrep(nleqstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.nleqsolvealglibnleqstatealglibndimensional_funcalglibndimensional_jacalglibndimensional_repObject">
            <summary>Sets the shim of alglib.nleqsolve(nleqstate state, ndimensional_func func, ndimensional_jac jac, ndimensional_rep rep, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.normaldistributionDouble">
            <summary>Sets the shim of alglib.normaldistribution(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.odesolveriterationalglibodesolverstate">
            <summary>Sets the shim of alglib.odesolveriteration(odesolverstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.odesolverresultsalglibodesolverstateInt32OutDoubleArrayOutDoubleMdArray2OutalglibodesolverreportOut">
            <summary>Sets the shim of alglib.odesolverresults(odesolverstate state, Int32&amp; m, Double[]&amp; xtbl, Double[,]&amp; ytbl, odesolverreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.odesolverrkckDoubleArrayDoubleArrayDoubleDoublealglibodesolverstateOut">
            <summary>Sets the shim of alglib.odesolverrkck(Double[] y, Double[] x, Double eps, Double h, odesolverstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.odesolverrkckDoubleArrayInt32DoubleArrayInt32DoubleDoublealglibodesolverstateOut">
            <summary>Sets the shim of alglib.odesolverrkck(Double[] y, Int32 n, Double[] x, Int32 m, Double eps, Double h, odesolverstate&amp; state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.odesolversolvealglibodesolverstatealglibndimensional_ode_rpObject">
            <summary>Sets the shim of alglib.odesolversolve(odesolverstate state, ndimensional_ode_rp diff, Object obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.onesamplesigntestDoubleArrayInt32DoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.onesamplesigntest(Double[] x, Int32 n, Double median, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.onesamplevariancetestDoubleArrayInt32DoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.onesamplevariancetest(Double[] x, Int32 n, Double variance, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pcabuildbasisDoubleMdArray2Int32Int32Int32OutDoubleArrayOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.pcabuildbasis(Double[,] x, Int32 npoints, Int32 nvars, Int32&amp; info, Double[]&amp; s2, Double[,]&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorr2DoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.pearsoncorr2(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorr2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of alglib.pearsoncorr2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrelationDoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of alglib.pearsoncorrelation(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrelationsignificanceDoubleInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pearsoncorrelationsignificance(Double r, Int32 n, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrm2DoubleMdArray2DoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.pearsoncorrm2(Double[,] x, Double[,] y, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.pearsoncorrm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrmDoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.pearsoncorrm(Double[,] x, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pearsoncorrmDoubleMdArray2Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.pearsoncorrm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.poissoncdistributionInt32Double">
            <summary>Sets the shim of alglib.poissoncdistribution(Int32 k, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.poissondistributionInt32Double">
            <summary>Sets the shim of alglib.poissondistribution(Int32 k, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbar2chebalglibbarycentricinterpolantDoubleDoubleDoubleArrayOut">
            <summary>Sets the shim of alglib.polynomialbar2cheb(barycentricinterpolant p, Double a, Double b, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbar2powalglibbarycentricinterpolantDoubleArrayOut">
            <summary>Sets the shim of alglib.polynomialbar2pow(barycentricinterpolant p, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbar2powalglibbarycentricinterpolantDoubleDoubleDoubleArrayOut">
            <summary>Sets the shim of alglib.polynomialbar2pow(barycentricinterpolant p, Double c, Double s, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildDoubleArrayDoubleArrayInt32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuild(Double[] x, Double[] y, Int32 n, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildDoubleArrayDoubleArrayalglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuild(Double[] x, Double[] y, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildcheb1DoubleDoubleDoubleArrayInt32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildcheb1(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildcheb1DoubleDoubleDoubleArrayalglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildcheb1(Double a, Double b, Double[] y, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildcheb2DoubleDoubleDoubleArrayInt32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildcheb2(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildcheb2DoubleDoubleDoubleArrayalglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildcheb2(Double a, Double b, Double[] y, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildeqdistDoubleDoubleDoubleArrayInt32alglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildeqdist(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialbuildeqdistDoubleDoubleDoubleArrayalglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialbuildeqdist(Double a, Double b, Double[] y, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalccheb1DoubleDoubleDoubleArrayDouble">
            <summary>Sets the shim of alglib.polynomialcalccheb1(Double a, Double b, Double[] f, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalccheb1DoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.polynomialcalccheb1(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalccheb2DoubleDoubleDoubleArrayDouble">
            <summary>Sets the shim of alglib.polynomialcalccheb2(Double a, Double b, Double[] f, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalccheb2DoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.polynomialcalccheb2(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalceqdistDoubleDoubleDoubleArrayDouble">
            <summary>Sets the shim of alglib.polynomialcalceqdist(Double a, Double b, Double[] f, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcalceqdistDoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of alglib.polynomialcalceqdist(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcheb2barDoubleArrayDoubleDoublealglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialcheb2bar(Double[] t, Double a, Double b, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialcheb2barDoubleArrayInt32DoubleDoublealglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialcheb2bar(Double[] t, Int32 n, Double a, Double b, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialfitDoubleArrayDoubleArrayInt32Int32Int32OutalglibbarycentricinterpolantOutalglibpolynomialfitreportOut">
            <summary>Sets the shim of alglib.polynomialfit(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, barycentricinterpolant&amp; p, polynomialfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialfitDoubleArrayDoubleArrayInt32Int32OutalglibbarycentricinterpolantOutalglibpolynomialfitreportOut">
            <summary>Sets the shim of alglib.polynomialfit(Double[] x, Double[] y, Int32 m, Int32&amp; info, barycentricinterpolant&amp; p, polynomialfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialfitwcDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32ArrayInt32Int32OutalglibbarycentricinterpolantOutalglibpolynomialfitreportOut">
            <summary>Sets the shim of alglib.polynomialfitwc(Double[] x, Double[] y, Double[] w, Double[] xc, Double[] yc, Int32[] dc, Int32 m, Int32&amp; info, barycentricinterpolant&amp; p, polynomialfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialfitwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32OutalglibbarycentricinterpolantOutalglibpolynomialfitreportOut">
            <summary>Sets the shim of alglib.polynomialfitwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, barycentricinterpolant&amp; p, polynomialfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialpow2barDoubleArrayInt32DoubleDoublealglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialpow2bar(Double[] a, Int32 n, Double c, Double s, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.polynomialpow2barDoubleArrayalglibbarycentricinterpolantOut">
            <summary>Sets the shim of alglib.polynomialpow2bar(Double[] a, barycentricinterpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.psiDouble">
            <summary>Sets the shim of alglib.psi(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2arclengthalglibpspline2interpolantDoubleDouble">
            <summary>Sets the shim of alglib.pspline2arclength(pspline2interpolant p, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2buildDoubleMdArray2Int32Int32Int32alglibpspline2interpolantOut">
            <summary>Sets the shim of alglib.pspline2build(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline2interpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2buildperiodicDoubleMdArray2Int32Int32Int32alglibpspline2interpolantOut">
            <summary>Sets the shim of alglib.pspline2buildperiodic(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline2interpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2calcalglibpspline2interpolantDoubleDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline2calc(pspline2interpolant p, Double t, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2diff2alglibpspline2interpolantDoubleDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline2diff2(pspline2interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; d2x, Double&amp; y, Double&amp; dy, Double&amp; d2y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2diffalglibpspline2interpolantDoubleDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline2diff(pspline2interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; y, Double&amp; dy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2parametervaluesalglibpspline2interpolantInt32OutDoubleArrayOut">
            <summary>Sets the shim of alglib.pspline2parametervalues(pspline2interpolant p, Int32&amp; n, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline2tangentalglibpspline2interpolantDoubleDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline2tangent(pspline2interpolant p, Double t, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3arclengthalglibpspline3interpolantDoubleDouble">
            <summary>Sets the shim of alglib.pspline3arclength(pspline3interpolant p, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3buildDoubleMdArray2Int32Int32Int32alglibpspline3interpolantOut">
            <summary>Sets the shim of alglib.pspline3build(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline3interpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3buildperiodicDoubleMdArray2Int32Int32Int32alglibpspline3interpolantOut">
            <summary>Sets the shim of alglib.pspline3buildperiodic(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline3interpolant&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3calcalglibpspline3interpolantDoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline3calc(pspline3interpolant p, Double t, Double&amp; x, Double&amp; y, Double&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3diff2alglibpspline3interpolantDoubleDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline3diff2(pspline3interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; d2x, Double&amp; y, Double&amp; dy, Double&amp; d2y, Double&amp; z, Double&amp; dz, Double&amp; d2z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3diffalglibpspline3interpolantDoubleDoubleOutDoubleOutDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline3diff(pspline3interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; y, Double&amp; dy, Double&amp; z, Double&amp; dz)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3parametervaluesalglibpspline3interpolantInt32OutDoubleArrayOut">
            <summary>Sets the shim of alglib.pspline3parametervalues(pspline3interpolant p, Int32&amp; n, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.pspline3tangentalglibpspline3interpolantDoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.pspline3tangent(pspline3interpolant p, Double t, Double&amp; x, Double&amp; y, Double&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdDoubleMdArray2RefInt32Int32DoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixbd(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tauq, Double[]&amp; taup)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdmultiplybypDoubleMdArray2Int32Int32DoubleArrayDoubleMdArray2RefInt32Int32BooleanBoolean">
            <summary>Sets the shim of alglib.rmatrixbdmultiplybyp(Double[,] qp, Int32 m, Int32 n, Double[] taup, Double[,]&amp; z, Int32 zrows, Int32 zcolumns, Boolean fromtheright, Boolean dotranspose)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdmultiplybyqDoubleMdArray2Int32Int32DoubleArrayDoubleMdArray2RefInt32Int32BooleanBoolean">
            <summary>Sets the shim of alglib.rmatrixbdmultiplybyq(Double[,] qp, Int32 m, Int32 n, Double[] tauq, Double[,]&amp; z, Int32 zrows, Int32 zcolumns, Boolean fromtheright, Boolean dotranspose)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdsvdDoubleArrayRefDoubleArrayInt32BooleanBooleanDoubleMdArray2RefInt32DoubleMdArray2RefInt32DoubleMdArray2RefInt32">
            <summary>Sets the shim of alglib.rmatrixbdsvd(Double[]&amp; d, Double[] e, Int32 n, Boolean isupper, Boolean isfractionalaccuracyrequired, Double[,]&amp; u, Int32 nru, Double[,]&amp; c, Int32 ncc, Double[,]&amp; vt, Int32 ncvt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdunpackdiagonalsDoubleMdArray2Int32Int32BooleanOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixbdunpackdiagonals(Double[,] b, Int32 m, Int32 n, Boolean&amp; isupper, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdunpackptDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixbdunpackpt(Double[,] qp, Int32 m, Int32 n, Double[] taup, Int32 ptrows, Double[,]&amp; pt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixbdunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixbdunpackq(Double[,] qp, Int32 m, Int32 n, Double[] tauq, Int32 qcolumns, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixcopyInt32Int32DoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixcopy(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Double[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixdetDoubleMdArray2">
            <summary>Sets the shim of alglib.rmatrixdet(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixdetDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.rmatrixdet(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixevdDoubleMdArray2Int32Int32DoubleArrayOutDoubleArrayOutDoubleMdArray2OutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixevd(Double[,] a, Int32 n, Int32 vneeded, Double[]&amp; wr, Double[]&amp; wi, Double[,]&amp; vl, Double[,]&amp; vr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixgemmInt32Int32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixgemm(Int32 m, Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double[,] b, Int32 ib, Int32 jb, Int32 optypeb, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixhessenbergDoubleMdArray2RefInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixhessenberg(Double[,]&amp; a, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixhessenbergunpackhDoubleMdArray2Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixhessenbergunpackh(Double[,] a, Int32 n, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixhessenbergunpackqDoubleMdArray2Int32DoubleArrayDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixhessenbergunpackq(Double[,] a, Int32 n, Double[] tau, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinverseDoubleMdArray2RefInt32Int32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixinverse(Double[,]&amp; a, Int32 n, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinverseDoubleMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixinverse(Double[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinvupdatecolumnDoubleMdArray2RefInt32Int32DoubleArray">
            <summary>Sets the shim of alglib.rmatrixinvupdatecolumn(Double[,]&amp; inva, Int32 n, Int32 updcolumn, Double[] u)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinvupdaterowDoubleMdArray2RefInt32Int32DoubleArray">
            <summary>Sets the shim of alglib.rmatrixinvupdaterow(Double[,]&amp; inva, Int32 n, Int32 updrow, Double[] v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinvupdatesimpleDoubleMdArray2RefInt32Int32Int32Double">
            <summary>Sets the shim of alglib.rmatrixinvupdatesimple(Double[,]&amp; inva, Int32 n, Int32 updrow, Int32 updcolumn, Double updval)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixinvupdateuvDoubleMdArray2RefInt32DoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.rmatrixinvupdateuv(Double[,]&amp; inva, Int32 n, Double[] u, Double[] v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlefttrsmInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixlefttrsm(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlqDoubleMdArray2RefInt32Int32DoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixlq(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlqunpacklDoubleMdArray2Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixlqunpackl(Double[,] a, Int32 m, Int32 n, Double[,]&amp; l)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlqunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixlqunpackq(Double[,] a, Int32 m, Int32 n, Double[] tau, Int32 qrows, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixluDoubleMdArray2RefInt32Int32Int32ArrayOut">
            <summary>Sets the shim of alglib.rmatrixlu(Double[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixludetDoubleMdArray2Int32Array">
            <summary>Sets the shim of alglib.rmatrixludet(Double[,] a, Int32[] pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixludetDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of alglib.rmatrixludet(Double[,] a, Int32[] pivots, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixluinverseDoubleMdArray2RefInt32ArrayInt32Int32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixluinverse(Double[,]&amp; a, Int32[] pivots, Int32 n, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixluinverseDoubleMdArray2RefInt32ArrayInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixluinverse(Double[,]&amp; a, Int32[] pivots, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlurcond1DoubleMdArray2Int32">
            <summary>Sets the shim of alglib.rmatrixlurcond1(Double[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlurcondinfDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.rmatrixlurcondinf(Double[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlusolveDoubleMdArray2Int32ArrayInt32DoubleArrayInt32OutalglibdensesolverreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixlusolve(Double[,] lua, Int32[] p, Int32 n, Double[] b, Int32&amp; info, densesolverreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixlusolvemDoubleMdArray2Int32ArrayInt32DoubleMdArray2Int32Int32OutalglibdensesolverreportOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixlusolvem(Double[,] lua, Int32[] p, Int32 n, Double[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixmixedsolveDoubleMdArray2DoubleMdArray2Int32ArrayInt32DoubleArrayInt32OutalglibdensesolverreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixmixedsolve(Double[,] a, Double[,] lua, Int32[] p, Int32 n, Double[] b, Int32&amp; info, densesolverreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixmixedsolvemDoubleMdArray2DoubleMdArray2Int32ArrayInt32DoubleMdArray2Int32Int32OutalglibdensesolverreportOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixmixedsolvem(Double[,] a, Double[,] lua, Int32[] p, Int32 n, Double[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixmvInt32Int32DoubleMdArray2Int32Int32Int32DoubleArrayInt32DoubleArrayRefInt32">
            <summary>Sets the shim of alglib.rmatrixmv(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Int32 opa, Double[] x, Int32 ix, Double[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixqrDoubleMdArray2RefInt32Int32DoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixqr(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixqrunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixqrunpackq(Double[,] a, Int32 m, Int32 n, Double[] tau, Int32 qcolumns, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixqrunpackrDoubleMdArray2Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixqrunpackr(Double[,] a, Int32 m, Int32 n, Double[,]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrank1Int32Int32DoubleMdArray2RefInt32Int32DoubleArrayRefInt32DoubleArrayRefInt32">
            <summary>Sets the shim of alglib.rmatrixrank1(Int32 m, Int32 n, Double[,]&amp; a, Int32 ia, Int32 ja, Double[]&amp; u, Int32 iu, Double[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrcond1DoubleMdArray2Int32">
            <summary>Sets the shim of alglib.rmatrixrcond1(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrcondinfDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.rmatrixrcondinf(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrighttrsmInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixrighttrsm(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrndcondInt32DoubleDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrndorthogonalInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixrndorthogonal(Int32 n, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrndorthogonalfromtheleftDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixrndorthogonalfromtheleft(Double[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixrndorthogonalfromtherightDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixrndorthogonalfromtheright(Double[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixschurDoubleMdArray2RefInt32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixschur(Double[,]&amp; a, Int32 n, Double[,]&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixsolveDoubleMdArray2Int32DoubleArrayInt32OutalglibdensesolverreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixsolve(Double[,] a, Int32 n, Double[] b, Int32&amp; info, densesolverreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixsolvelsDoubleMdArray2Int32Int32DoubleArrayDoubleInt32OutalglibdensesolverlsreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.rmatrixsolvels(Double[,] a, Int32 nrows, Int32 ncols, Double[] b, Double threshold, Int32&amp; info, densesolverlsreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixsolvemDoubleMdArray2Int32DoubleMdArray2Int32BooleanInt32OutalglibdensesolverreportOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixsolvem(Double[,] a, Int32 n, Double[,] b, Int32 m, Boolean rfs, Int32&amp; info, densesolverreport&amp; rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixsvdDoubleMdArray2Int32Int32Int32Int32Int32DoubleArrayOutDoubleMdArray2OutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.rmatrixsvd(Double[,] a, Int32 m, Int32 n, Int32 uneeded, Int32 vtneeded, Int32 additionalmemory, Double[]&amp; w, Double[,]&amp; u, Double[,]&amp; vt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixsyrkInt32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of alglib.rmatrixsyrk(Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixtransposeInt32Int32DoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of alglib.rmatrixtranspose(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Double[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixtrinverseDoubleMdArray2RefBooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixtrinverse(Double[,]&amp; a, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixtrinverseDoubleMdArray2RefInt32BooleanBooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.rmatrixtrinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Boolean isunit, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixtrrcond1DoubleMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of alglib.rmatrixtrrcond1(Double[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.rmatrixtrrcondinfDoubleMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of alglib.rmatrixtrrcondinf(Double[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.sampleadevDoubleArrayDoubleOut">
            <summary>Sets the shim of alglib.sampleadev(Double[] x, Double&amp; adev)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.sampleadevDoubleArrayInt32DoubleOut">
            <summary>Sets the shim of alglib.sampleadev(Double[] x, Int32 n, Double&amp; adev)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplemedianDoubleArrayDoubleOut">
            <summary>Sets the shim of alglib.samplemedian(Double[] x, Double&amp; median)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplemedianDoubleArrayInt32DoubleOut">
            <summary>Sets the shim of alglib.samplemedian(Double[] x, Int32 n, Double&amp; median)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplemomentsDoubleArrayDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.samplemoments(Double[] x, Double&amp; mean, Double&amp; variance, Double&amp; skewness, Double&amp; kurtosis)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplemomentsDoubleArrayInt32DoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.samplemoments(Double[] x, Int32 n, Double&amp; mean, Double&amp; variance, Double&amp; skewness, Double&amp; kurtosis)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplepercentileDoubleArrayDoubleDoubleOut">
            <summary>Sets the shim of alglib.samplepercentile(Double[] x, Double p, Double&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.samplepercentileDoubleArrayInt32DoubleDoubleOut">
            <summary>Sets the shim of alglib.samplepercentile(Double[] x, Int32 n, Double p, Double&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.sinecosineintegralsDoubleDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.sinecosineintegrals(Double x, Double&amp; si, Double&amp; ci)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixevdDoubleMdArray2Int32Int32BooleanDoubleArrayOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixevd(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double[]&amp; d, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixevdiDoubleMdArray2Int32Int32BooleanInt32Int32DoubleArrayOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixevdi(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Int32 i1, Int32 i2, Double[]&amp; w, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixevdrDoubleMdArray2Int32Int32BooleanDoubleDoubleInt32OutDoubleArrayOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixevdr(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double b1, Double b2, Int32&amp; m, Double[]&amp; w, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixgevdDoubleMdArray2Int32BooleanDoubleMdArray2BooleanInt32Int32DoubleArrayOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixgevd(Double[,] a, Int32 n, Boolean isuppera, Double[,] b, Boolean isupperb, Int32 zneeded, Int32 problemtype, Double[]&amp; d, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixgevdreduceDoubleMdArray2RefInt32BooleanDoubleMdArray2BooleanInt32DoubleMdArray2OutBooleanOut">
            <summary>Sets the shim of alglib.smatrixgevdreduce(Double[,]&amp; a, Int32 n, Boolean isuppera, Double[,] b, Boolean isupperb, Int32 problemtype, Double[,]&amp; r, Boolean&amp; isupperr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixrndcondInt32DoubleDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixrndmultiplyDoubleMdArray2RefInt32">
            <summary>Sets the shim of alglib.smatrixrndmultiply(Double[,]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixtdDoubleMdArray2RefInt32BooleanDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.smatrixtd(Double[,]&amp; a, Int32 n, Boolean isupper, Double[]&amp; tau, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixtdevdDoubleArrayRefDoubleArrayInt32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of alglib.smatrixtdevd(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixtdevdiDoubleArrayRefDoubleArrayInt32Int32Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of alglib.smatrixtdevdi(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Int32 i1, Int32 i2, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixtdevdrDoubleArrayRefDoubleArrayInt32Int32DoubleDoubleInt32OutDoubleMdArray2Ref">
            <summary>Sets the shim of alglib.smatrixtdevdr(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Double a, Double b, Int32&amp; m, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.smatrixtdunpackqDoubleMdArray2Int32BooleanDoubleArrayDoubleMdArray2Out">
            <summary>Sets the shim of alglib.smatrixtdunpackq(Double[,] a, Int32 n, Boolean isupper, Double[] tau, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskyDoubleMdArray2RefInt32Boolean">
            <summary>Sets the shim of alglib.spdmatrixcholesky(Double[,]&amp; a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskydetDoubleMdArray2">
            <summary>Sets the shim of alglib.spdmatrixcholeskydet(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskydetDoubleMdArray2Int32">
            <summary>Sets the shim of alglib.spdmatrixcholeskydet(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskyinverseDoubleMdArray2RefInt32BooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.spdmatrixcholeskyinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskyinverseDoubleMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.spdmatrixcholeskyinverse(Double[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskyrcondDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of alglib.spdmatrixcholeskyrcond(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskysolveDoubleMdArray2Int32BooleanDoubleArrayInt32OutalglibdensesolverreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spdmatrixcholeskysolve(Double[,] cha, Int32 n, Boolean isupper, Double[] b, Int32&amp; info, densesolverreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixcholeskysolvemDoubleMdArray2Int32BooleanDoubleMdArray2Int32Int32OutalglibdensesolverreportOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.spdmatrixcholeskysolvem(Double[,] cha, Int32 n, Boolean isupper, Double[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixdetDoubleMdArray2">
            <summary>Sets the shim of alglib.spdmatrixdet(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixdetDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of alglib.spdmatrixdet(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixinverseDoubleMdArray2RefInt32BooleanInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.spdmatrixinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixinverseDoubleMdArray2RefInt32OutalglibmatinvreportOut">
            <summary>Sets the shim of alglib.spdmatrixinverse(Double[,]&amp; a, Int32&amp; info, matinvreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixrcondDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of alglib.spdmatrixrcond(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixrndcondInt32DoubleDoubleMdArray2Out">
            <summary>Sets the shim of alglib.spdmatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixsolveDoubleMdArray2Int32BooleanDoubleArrayInt32OutalglibdensesolverreportOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spdmatrixsolve(Double[,] a, Int32 n, Boolean isupper, Double[] b, Int32&amp; info, densesolverreport&amp; rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spdmatrixsolvemDoubleMdArray2Int32BooleanDoubleMdArray2Int32Int32OutalglibdensesolverreportOutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.spdmatrixsolvem(Double[,] a, Int32 n, Boolean isupper, Double[,] b, Int32 m, Int32&amp; info, densesolverreport&amp; rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorr2DoubleArrayDoubleArray">
            <summary>Sets the shim of alglib.spearmancorr2(Double[] x, Double[] y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorr2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of alglib.spearmancorr2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorrm2DoubleMdArray2DoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.spearmancorrm2(Double[,] x, Double[,] y, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorrm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.spearmancorrm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorrmDoubleMdArray2DoubleMdArray2Out">
            <summary>Sets the shim of alglib.spearmancorrm(Double[,] x, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmancorrmDoubleMdArray2Int32Int32DoubleMdArray2Out">
            <summary>Sets the shim of alglib.spearmancorrm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmanrankcorrelationDoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of alglib.spearmanrankcorrelation(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spearmanrankcorrelationsignificanceDoubleInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.spearmanrankcorrelationsignificance(Double r, Int32 n, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildakimaDoubleArrayDoubleArrayInt32alglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildakima(Double[] x, Double[] y, Int32 n, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildakimaDoubleArrayDoubleArrayalglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildakima(Double[] x, Double[] y, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildcatmullromDoubleArrayDoubleArrayInt32Int32Doublealglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildcatmullrom(Double[] x, Double[] y, Int32 n, Int32 boundtype, Double tension, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildcatmullromDoubleArrayDoubleArrayalglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildcatmullrom(Double[] x, Double[] y, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32Doublealglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildcubicDoubleArrayDoubleArrayalglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildcubic(Double[] x, Double[] y, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildhermiteDoubleArrayDoubleArrayDoubleArrayInt32alglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildhermite(Double[] x, Double[] y, Double[] d, Int32 n, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildhermiteDoubleArrayDoubleArrayDoubleArrayalglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildhermite(Double[] x, Double[] y, Double[] d, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildlinearDoubleArrayDoubleArrayInt32alglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildlinear(Double[] x, Double[] y, Int32 n, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dbuildlinearDoubleArrayDoubleArrayalglibspline1dinterpolantOut">
            <summary>Sets the shim of alglib.spline1dbuildlinear(Double[] x, Double[] y, spline1dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dcalcalglibspline1dinterpolantDouble">
            <summary>Sets the shim of alglib.spline1dcalc(spline1dinterpolant c, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvcubicDoubleArrayDoubleArrayDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvcubic(Double[] x, Double[] y, Double[] x2, Double[]&amp; y2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvdiff2cubicDoubleArrayDoubleArrayDoubleArrayDoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvdiff2cubic(Double[] x, Double[] y, Double[] x2, Double[]&amp; y2, Double[]&amp; d2, Double[]&amp; dd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvdiff2cubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayOutDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvdiff2cubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2, Double[]&amp; d2, Double[]&amp; dd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvdiffcubicDoubleArrayDoubleArrayDoubleArrayDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvdiffcubic(Double[] x, Double[] y, Double[] x2, Double[]&amp; y2, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dconvdiffcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dconvdiffcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1ddiffalglibspline1dinterpolantDoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.spline1ddiff(spline1dinterpolant c, Double x, Double&amp; s, Double&amp; ds, Double&amp; d2s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitcubicDoubleArrayDoubleArrayInt32Int32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitcubic(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitcubicDoubleArrayDoubleArrayInt32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitcubic(Double[] x, Double[] y, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitcubicwcDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32ArrayInt32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitcubicwc(Double[] x, Double[] y, Double[] w, Double[] xc, Double[] yc, Int32[] dc, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitcubicwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitcubicwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfithermiteDoubleArrayDoubleArrayInt32Int32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfithermite(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfithermiteDoubleArrayDoubleArrayInt32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfithermite(Double[] x, Double[] y, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfithermitewcDoubleArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32ArrayInt32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfithermitewc(Double[] x, Double[] y, Double[] w, Double[] xc, Double[] yc, Int32[] dc, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfithermitewcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfithermitewc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitpenalizedDoubleArrayDoubleArrayInt32DoubleInt32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitpenalized(Double[] x, Double[] y, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitpenalizedDoubleArrayDoubleArrayInt32Int32DoubleInt32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitpenalized(Double[] x, Double[] y, Int32 n, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitpenalizedwDoubleArrayDoubleArrayDoubleArrayInt32DoubleInt32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitpenalizedw(Double[] x, Double[] y, Double[] w, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dfitpenalizedwDoubleArrayDoubleArrayDoubleArrayInt32Int32DoubleInt32Outalglibspline1dinterpolantOutalglibspline1dfitreportOut">
            <summary>Sets the shim of alglib.spline1dfitpenalizedw(Double[] x, Double[] y, Double[] w, Int32 n, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant&amp; s, spline1dfitreport&amp; rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dgriddiff2cubicDoubleArrayDoubleArrayDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dgriddiff2cubic(Double[] x, Double[] y, Double[]&amp; d1, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dgriddiff2cubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayOutDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dgriddiff2cubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[]&amp; d1, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dgriddiffcubicDoubleArrayDoubleArrayDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dgriddiffcubic(Double[] x, Double[] y, Double[]&amp; d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dgriddiffcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayOut">
            <summary>Sets the shim of alglib.spline1dgriddiffcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[]&amp; d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dintegratealglibspline1dinterpolantDouble">
            <summary>Sets the shim of alglib.spline1dintegrate(spline1dinterpolant c, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dlintransxalglibspline1dinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.spline1dlintransx(spline1dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dlintransyalglibspline1dinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.spline1dlintransy(spline1dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline1dunpackalglibspline1dinterpolantInt32OutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.spline1dunpack(spline1dinterpolant c, Int32&amp; n, Double[,]&amp; tbl)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dbuildbicubicDoubleArrayDoubleArrayDoubleMdArray2Int32Int32alglibspline2dinterpolantOut">
            <summary>Sets the shim of alglib.spline2dbuildbicubic(Double[] x, Double[] y, Double[,] f, Int32 m, Int32 n, spline2dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dbuildbilinearDoubleArrayDoubleArrayDoubleMdArray2Int32Int32alglibspline2dinterpolantOut">
            <summary>Sets the shim of alglib.spline2dbuildbilinear(Double[] x, Double[] y, Double[,] f, Int32 m, Int32 n, spline2dinterpolant&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dcalcalglibspline2dinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.spline2dcalc(spline2dinterpolant c, Double x, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2ddiffalglibspline2dinterpolantDoubleDoubleDoubleOutDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.spline2ddiff(spline2dinterpolant c, Double x, Double y, Double&amp; f, Double&amp; fx, Double&amp; fy, Double&amp; fxy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dlintransfalglibspline2dinterpolantDoubleDouble">
            <summary>Sets the shim of alglib.spline2dlintransf(spline2dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dlintransxyalglibspline2dinterpolantDoubleDoubleDoubleDouble">
            <summary>Sets the shim of alglib.spline2dlintransxy(spline2dinterpolant c, Double ax, Double bx, Double ay, Double by)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dresamplebicubicDoubleMdArray2Int32Int32DoubleMdArray2OutInt32Int32">
            <summary>Sets the shim of alglib.spline2dresamplebicubic(Double[,] a, Int32 oldheight, Int32 oldwidth, Double[,]&amp; b, Int32 newheight, Int32 newwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dresamplebilinearDoubleMdArray2Int32Int32DoubleMdArray2OutInt32Int32">
            <summary>Sets the shim of alglib.spline2dresamplebilinear(Double[,] a, Int32 oldheight, Int32 oldwidth, Double[,]&amp; b, Int32 newheight, Int32 newwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.spline2dunpackalglibspline2dinterpolantInt32OutInt32OutDoubleMdArray2Out">
            <summary>Sets the shim of alglib.spline2dunpack(spline2dinterpolant c, Int32&amp; m, Int32&amp; n, Double[,]&amp; tbl)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.studenttdistributionInt32Double">
            <summary>Sets the shim of alglib.studenttdistribution(Int32 k, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.studentttest1DoubleArrayInt32DoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.studentttest1(Double[] x, Int32 n, Double mean, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.studentttest2DoubleArrayInt32DoubleArrayInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.studentttest2(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.unequalvariancettestDoubleArrayInt32DoubleArrayInt32DoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.unequalvariancettest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.wilcoxonsignedranktestDoubleArrayInt32DoubleDoubleOutDoubleOutDoubleOut">
            <summary>Sets the shim of alglib.wilcoxonsignedranktest(Double[] x, Int32 n, Double e, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimablas">
            <summary>Shim type of alglib+ablas</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablas.#ctor(alglib.ablas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.Constructor">
            <summary>Sets the shim of ablas.ablas()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablasblocksizeDoubleMdArray2">
            <summary>Sets the shim of ablas.ablasblocksize(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablascomplexblocksizealglibcomplexMdArray2">
            <summary>Sets the shim of ablas.ablascomplexblocksize(complex[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablascomplexsplitlengthalglibcomplexMdArray2Int32Int32RefInt32Ref">
            <summary>Sets the shim of ablas.ablascomplexsplitlength(complex[,] a, Int32 n, Int32&amp; n1, Int32&amp; n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablasinternalsplitlengthInt32Int32Int32RefInt32Ref">
            <summary>Sets the shim of ablas.ablasinternalsplitlength(Int32 n, Int32 nb, Int32&amp; n1, Int32&amp; n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablasmicroblocksize">
            <summary>Sets the shim of ablas.ablasmicroblocksize()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.ablassplitlengthDoubleMdArray2Int32Int32RefInt32Ref">
            <summary>Sets the shim of ablas.ablassplitlength(Double[,] a, Int32 n, Int32&amp; n1, Int32&amp; n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixcopyInt32Int32alglibcomplexMdArray2Int32Int32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixcopy(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, complex[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixgemmInt32Int32Int32alglibcomplexalglibcomplexMdArray2Int32Int32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixgemm(Int32 m, Int32 n, Int32 k, complex alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, complex[,] b, Int32 ib, Int32 jb, Int32 optypeb, complex beta, complex[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixgemmkInt32Int32Int32alglibcomplexalglibcomplexMdArray2Int32Int32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixgemmk(Int32 m, Int32 n, Int32 k, complex alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, complex[,] b, Int32 ib, Int32 jb, Int32 optypeb, complex beta, complex[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixlefttrsm2Int32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixlefttrsm2(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixlefttrsmInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixlefttrsm(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixmvInt32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexArrayInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of ablas.cmatrixmv(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, Int32 opa, complex[] x, Int32 ix, complex[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixrank1Int32Int32alglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of ablas.cmatrixrank1(Int32 m, Int32 n, complex[,]&amp; a, Int32 ia, Int32 ja, complex[]&amp; u, Int32 iu, complex[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixrighttrsm2Int32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixrighttrsm2(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixrighttrsmInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixrighttrsm(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixsyrk2Int32Int32DoublealglibcomplexMdArray2Int32Int32Int32DoublealglibcomplexMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablas.cmatrixsyrk2(Int32 n, Int32 k, Double alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, complex[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixsyrkInt32Int32DoublealglibcomplexMdArray2Int32Int32Int32DoublealglibcomplexMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablas.cmatrixsyrk(Int32 n, Int32 k, Double alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, complex[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.cmatrixtransposeInt32Int32alglibcomplexMdArray2Int32Int32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.cmatrixtranspose(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, complex[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixcopyInt32Int32DoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixcopy(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Double[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixgemmInt32Int32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixgemm(Int32 m, Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double[,] b, Int32 ib, Int32 jb, Int32 optypeb, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixgemmkInt32Int32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixgemmk(Int32 m, Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double[,] b, Int32 ib, Int32 jb, Int32 optypeb, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixlefttrsm2Int32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixlefttrsm2(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixlefttrsmInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixlefttrsm(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixmvInt32Int32DoubleMdArray2Int32Int32Int32DoubleArrayInt32DoubleArrayRefInt32">
            <summary>Sets the shim of ablas.rmatrixmv(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Int32 opa, Double[] x, Int32 ix, Double[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixrank1Int32Int32DoubleMdArray2RefInt32Int32DoubleArrayRefInt32DoubleArrayRefInt32">
            <summary>Sets the shim of ablas.rmatrixrank1(Int32 m, Int32 n, Double[,]&amp; a, Int32 ia, Int32 ja, Double[]&amp; u, Int32 iu, Double[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixrighttrsm2Int32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixrighttrsm2(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixrighttrsmInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixrighttrsm(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixsyrk2Int32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablas.rmatrixsyrk2(Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixsyrkInt32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablas.rmatrixsyrk(Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablas.rmatrixtransposeInt32Int32DoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablas.rmatrixtranspose(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Double[,]&amp; b, Int32 ib, Int32 jb)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimablas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimablasf">
            <summary>Shim type of alglib+ablasf</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablasf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablasf.#ctor(alglib.ablasf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablasf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimablasf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.Constructor">
            <summary>Sets the shim of ablasf.ablasf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixgemmfInt32Int32Int32alglibcomplexalglibcomplexMdArray2Int32Int32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.cmatrixgemmf(Int32 m, Int32 n, Int32 k, complex alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, complex[,] b, Int32 ib, Int32 jb, Int32 optypeb, complex beta, complex[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixlefttrsmfInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.cmatrixlefttrsmf(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixmvfInt32Int32alglibcomplexMdArray2Int32Int32Int32alglibcomplexArrayInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of ablasf.cmatrixmvf(Int32 m, Int32 n, complex[,] a, Int32 ia, Int32 ja, Int32 opa, complex[] x, Int32 ix, complex[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixrank1fInt32Int32alglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefInt32alglibcomplexArrayRefInt32">
            <summary>Sets the shim of ablasf.cmatrixrank1f(Int32 m, Int32 n, complex[,]&amp; a, Int32 ia, Int32 ja, complex[]&amp; u, Int32 iu, complex[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixrighttrsmfInt32Int32alglibcomplexMdArray2Int32Int32BooleanBooleanInt32alglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.cmatrixrighttrsmf(Int32 m, Int32 n, complex[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, complex[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.cmatrixsyrkfInt32Int32DoublealglibcomplexMdArray2Int32Int32Int32DoublealglibcomplexMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablasf.cmatrixsyrkf(Int32 n, Int32 k, Double alpha, complex[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, complex[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixgemmfInt32Int32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.rmatrixgemmf(Int32 m, Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double[,] b, Int32 ib, Int32 jb, Int32 optypeb, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixlefttrsmfInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.rmatrixlefttrsmf(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixmvfInt32Int32DoubleMdArray2Int32Int32Int32DoubleArrayInt32DoubleArrayRefInt32">
            <summary>Sets the shim of ablasf.rmatrixmvf(Int32 m, Int32 n, Double[,] a, Int32 ia, Int32 ja, Int32 opa, Double[] x, Int32 ix, Double[]&amp; y, Int32 iy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixrank1fInt32Int32DoubleMdArray2RefInt32Int32DoubleArrayRefInt32DoubleArrayRefInt32">
            <summary>Sets the shim of ablasf.rmatrixrank1f(Int32 m, Int32 n, Double[,]&amp; a, Int32 ia, Int32 ja, Double[]&amp; u, Int32 iu, Double[]&amp; v, Int32 iv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixrighttrsmfInt32Int32DoubleMdArray2Int32Int32BooleanBooleanInt32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of ablasf.rmatrixrighttrsmf(Int32 m, Int32 n, Double[,] a, Int32 i1, Int32 j1, Boolean isupper, Boolean isunit, Int32 optype, Double[,]&amp; x, Int32 i2, Int32 j2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimablasf.rmatrixsyrkfInt32Int32DoubleDoubleMdArray2Int32Int32Int32DoubleDoubleMdArray2RefInt32Int32Boolean">
            <summary>Sets the shim of ablasf.rmatrixsyrkf(Int32 n, Int32 k, Double alpha, Double[,] a, Int32 ia, Int32 ja, Int32 optypea, Double beta, Double[,]&amp; c, Int32 ic, Int32 jc, Boolean isupper)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimablasf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimairyf">
            <summary>Shim type of alglib+airyf</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimairyf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimairyf.#ctor(alglib.airyf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimairyf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimairyf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimairyf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimairyf.Constructor">
            <summary>Sets the shim of airyf.airyf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimairyf.airyDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of airyf.airy(Double x, Double&amp; ai, Double&amp; aip, Double&amp; bi, Double&amp; bip)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimairyf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimalglibbasics">
            <summary>Shim type of alglib+alglibbasics</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibbasics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibbasics.#ctor(alglib.alglibbasics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibbasics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibbasics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimalglibbasics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimalglibbasics.Constructor">
            <summary>Sets the shim of alglibbasics.alglibbasics()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimalglibbasics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimalglibexception">
            <summary>Shim type of alglib+alglibexception</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibexception.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibexception.#ctor(alglib.alglibexception)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibexception.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibexception.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimalglibexception.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimalglibexception.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimalglibexception.ConstructorString">
            <summary>Sets the shim of alglibexception.alglibexception(String s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimalglibexception.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimap">
            <summary>Shim type of alglib+ap</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.#ctor(alglib.ap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.colsOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Sets the shim of ap.cols(!!0[,] a)</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.lenOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32})">
            <summary>Sets the shim of ap.len(!!0[] a)</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.rowsOf1M0MdArray2``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[0:,0:],System.Int32})">
            <summary>Sets the shim of ap.rows(!!0[,] a)</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimap.swapOf1M0RefM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefRefAction{``0,``0})">
            <summary>Sets the shim of ap.swap(!!0&amp; a, !!0&amp; b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.Constructor">
            <summary>Sets the shim of ap.ap()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.assertBoolean">
            <summary>Sets the shim of ap.assert(Boolean cond)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.assertBooleanString">
            <summary>Sets the shim of ap.assert(Boolean cond, String s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.forcehermitianalglibcomplexMdArray2">
            <summary>Sets the shim of ap.forcehermitian(complex[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.forcesymmetricDoubleMdArray2">
            <summary>Sets the shim of ap.forcesymmetric(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatBooleanArray">
            <summary>Sets the shim of ap.format(Boolean[] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatBooleanMdArray2">
            <summary>Sets the shim of ap.format(Boolean[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatDoubleArrayInt32">
            <summary>Sets the shim of ap.format(Double[] a, Int32 _dps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatDoubleMdArray2Int32">
            <summary>Sets the shim of ap.format(Double[,] a, Int32 dps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatInt32Array">
            <summary>Sets the shim of ap.format(Int32[] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatInt32MdArray2">
            <summary>Sets the shim of ap.format(Int32[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatalglibcomplexArrayInt32">
            <summary>Sets the shim of ap.format(complex[] a, Int32 _dps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatalglibcomplexInt32">
            <summary>Sets the shim of ap.format(complex a, Int32 _dps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.formatalglibcomplexMdArray2Int32">
            <summary>Sets the shim of ap.format(complex[,] a, Int32 dps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.ishermitianalglibcomplexMdArray2">
            <summary>Sets the shim of ap.ishermitian(complex[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.issymmetricDoubleMdArray2">
            <summary>Sets the shim of ap.issymmetric(Double[,] a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimap.threshold2dpsDouble">
            <summary>Sets the shim of ap.threshold2dps(Double threshold)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimapserv">
            <summary>Shim type of alglib+apserv</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.#ctor(alglib.apserv)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.Constructor">
            <summary>Sets the shim of apserv.apserv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.alloccomplexalglibserializeralglibcomplex">
            <summary>Sets the shim of apserv.alloccomplex(serializer s, complex v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.allocintegerarrayalglibserializerInt32ArrayInt32">
            <summary>Sets the shim of apserv.allocintegerarray(serializer s, Int32[] v, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.allocrealarrayalglibserializerDoubleArrayInt32">
            <summary>Sets the shim of apserv.allocrealarray(serializer s, Double[] v, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.allocrealmatrixalglibserializerDoubleMdArray2Int32Int32">
            <summary>Sets the shim of apserv.allocrealmatrix(serializer s, Double[,] v, Int32 n0, Int32 n1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.apperiodicmapDoubleRefDoubleDoubleDoubleRef">
            <summary>Sets the shim of apserv.apperiodicmap(Double&amp; x, Double a, Double b, Double&amp; k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.apservisfinitecmatrixalglibcomplexMdArray2Int32Int32">
            <summary>Sets the shim of apserv.apservisfinitecmatrix(complex[,] x, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.apservisfinitectrmatrixalglibcomplexMdArray2Int32Boolean">
            <summary>Sets the shim of apserv.apservisfinitectrmatrix(complex[,] x, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.apservisfinitematrixDoubleMdArray2Int32Int32">
            <summary>Sets the shim of apserv.apservisfinitematrix(Double[,] x, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.apservisfiniteornanmatrixDoubleMdArray2Int32Int32">
            <summary>Sets the shim of apserv.apservisfiniteornanmatrix(Double[,] x, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.aredistinctDoubleArrayInt32">
            <summary>Sets the shim of apserv.aredistinct(Double[] x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.boundvalDoubleDoubleDouble">
            <summary>Sets the shim of apserv.boundval(Double x, Double b1, Double b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.bvectorsetlengthatleastBooleanArrayRefInt32">
            <summary>Sets the shim of apserv.bvectorsetlengthatleast(Boolean[]&amp; x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.copyintegerarrayInt32ArrayInt32ArrayRef">
            <summary>Sets the shim of apserv.copyintegerarray(Int32[] src, Int32[]&amp; dst)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.copyrealarrayDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of apserv.copyrealarray(Double[] src, Double[]&amp; dst)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.copyrealmatrixDoubleMdArray2DoubleMdArray2Ref">
            <summary>Sets the shim of apserv.copyrealmatrix(Double[,] src, Double[,]&amp; dst)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.isfinitecvectoralglibcomplexArrayInt32">
            <summary>Sets the shim of apserv.isfinitecvector(complex[] z, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.isfinitertrmatrixDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of apserv.isfinitertrmatrix(Double[,] x, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.isfinitevectorDoubleArrayInt32">
            <summary>Sets the shim of apserv.isfinitevector(Double[] x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.ivectorsetlengthatleastInt32ArrayRefInt32">
            <summary>Sets the shim of apserv.ivectorsetlengthatleast(Int32[]&amp; x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.recsearchInt32ArrayRefInt32Int32Int32Int32Int32Array">
            <summary>Sets the shim of apserv.recsearch(Int32[]&amp; a, Int32 nrec, Int32 nheader, Int32 i0, Int32 i1, Int32[] b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.rmatrixresizeDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of apserv.rmatrixresize(Double[,]&amp; x, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.rmatrixsetlengthatleastDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of apserv.rmatrixsetlengthatleast(Double[,]&amp; x, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.rvectorsetlengthatleastDoubleArrayRefInt32">
            <summary>Sets the shim of apserv.rvectorsetlengthatleast(Double[]&amp; x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.safeminposrvDoubleDoubleDouble">
            <summary>Sets the shim of apserv.safeminposrv(Double x, Double y, Double v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.safepythag2DoubleDouble">
            <summary>Sets the shim of apserv.safepythag2(Double x, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.safepythag3DoubleDoubleDouble">
            <summary>Sets the shim of apserv.safepythag3(Double x, Double y, Double z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.saferdivDoubleDoubleDoubleRef">
            <summary>Sets the shim of apserv.saferdiv(Double x, Double y, Double&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.serializecomplexalglibserializeralglibcomplex">
            <summary>Sets the shim of apserv.serializecomplex(serializer s, complex v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.serializeintegerarrayalglibserializerInt32ArrayInt32">
            <summary>Sets the shim of apserv.serializeintegerarray(serializer s, Int32[] v, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.serializerealarrayalglibserializerDoubleArrayInt32">
            <summary>Sets the shim of apserv.serializerealarray(serializer s, Double[] v, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.serializerealmatrixalglibserializerDoubleMdArray2Int32Int32">
            <summary>Sets the shim of apserv.serializerealmatrix(serializer s, Double[,] v, Int32 n0, Int32 n1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.taskgenint1dDoubleDoubleInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of apserv.taskgenint1d(Double a, Double b, Int32 n, Double[]&amp; x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.taskgenint1dcheb1DoubleDoubleInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of apserv.taskgenint1dcheb1(Double a, Double b, Int32 n, Double[]&amp; x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.taskgenint1dcheb2DoubleDoubleInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of apserv.taskgenint1dcheb2(Double a, Double b, Int32 n, Double[]&amp; x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.taskgenint1dequidistDoubleDoubleInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of apserv.taskgenint1dequidist(Double a, Double b, Int32 n, Double[]&amp; x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.unserializecomplexalglibserializer">
            <summary>Sets the shim of apserv.unserializecomplex(serializer s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.unserializeintegerarrayalglibserializerInt32ArrayRef">
            <summary>Sets the shim of apserv.unserializeintegerarray(serializer s, Int32[]&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.unserializerealarrayalglibserializerDoubleArrayRef">
            <summary>Sets the shim of apserv.unserializerealarray(serializer s, Double[]&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.unserializerealmatrixalglibserializerDoubleMdArray2Ref">
            <summary>Sets the shim of apserv.unserializerealmatrix(serializer s, Double[,]&amp; v)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimapserv.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers">
            <summary>Shim type of alglib+apserv+apbuffers</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.#ctor(alglib.apserv.apbuffers)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.Constructor">
            <summary>Sets the shim of apbuffers.apbuffers()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimapserv.Shimapbuffers.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk">
            <summary>Shim type of alglib+autogk</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.#ctor(alglib.autogk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Constructor">
            <summary>Sets the shim of autogk.autogk()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogkinternaliterationautogkalglibautogkinternalstate">
            <summary>Sets the shim of autogk.autogkinternaliteration(autogkinternalstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogkinternalprepareDoubleDoubleDoubleDoubleautogkalglibautogkinternalstate">
            <summary>Sets the shim of autogk.autogkinternalprepare(Double a, Double b, Double eps, Double xwidth, autogkinternalstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogkiterationautogkalglibautogkstate">
            <summary>Sets the shim of autogk.autogkiteration(autogkstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogkresultsautogkalglibautogkstateDoubleRefautogkalglibautogkreport">
            <summary>Sets the shim of autogk.autogkresults(autogkstate state, Double&amp; v, autogkreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogksingularDoubleDoubleDoubleDoubleautogkalglibautogkstate">
            <summary>Sets the shim of autogk.autogksingular(Double a, Double b, Double alpha, Double beta, autogkstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogksmoothDoubleDoubleautogkalglibautogkstate">
            <summary>Sets the shim of autogk.autogksmooth(Double a, Double b, autogkstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.autogksmoothwDoubleDoubleDoubleautogkalglibautogkstate">
            <summary>Sets the shim of autogk.autogksmoothw(Double a, Double b, Double xwidth, autogkstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.mheappopDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of autogk.mheappop(Double[,]&amp; heap, Int32 heapsize, Int32 heapwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.mheappushDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of autogk.mheappush(Double[,]&amp; heap, Int32 heapsize, Int32 heapwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.mheapresizeDoubleMdArray2RefInt32RefInt32Int32">
            <summary>Sets the shim of autogk.mheapresize(Double[,]&amp; heap, Int32&amp; heapsize, Int32 newheapsize, Int32 heapwidth)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate">
            <summary>Shim type of alglib+autogk+autogkinternalstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.#ctor(alglib.autogk.autogkinternalstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.Constructor">
            <summary>Sets the shim of autogkinternalstate.autogkinternalstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkinternalstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport">
            <summary>Shim type of alglib+autogk+autogkreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.#ctor(alglib.autogk.autogkreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.Constructor">
            <summary>Sets the shim of autogkreport.autogkreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate">
            <summary>Shim type of alglib+autogk+autogkstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.#ctor(alglib.autogk.autogkstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.Constructor">
            <summary>Sets the shim of autogkstate.autogkstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogk.Shimautogkstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogkreport">
            <summary>Shim type of alglib+autogkreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkreport.#ctor(alglib.autogkreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.Constructor">
            <summary>Sets the shim of autogkreport.autogkreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.Constructorautogkalglibautogkreport">
            <summary>Sets the shim of autogkreport.autogkreport(autogkreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.innerobjGet">
            <summary>Sets the shim of autogkreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.nfevGet">
            <summary>Sets the shim of autogkreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.nfevSetInt32">
            <summary>Sets the shim of autogkreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.nintervalsGet">
            <summary>Sets the shim of autogkreport.get_nintervals()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.nintervalsSetInt32">
            <summary>Sets the shim of autogkreport.set_nintervals(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.terminationtypeGet">
            <summary>Sets the shim of autogkreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.terminationtypeSetInt32">
            <summary>Sets the shim of autogkreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.innerobjGet">
            <summary>Sets the shim of autogkreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.nfevGet">
            <summary>Sets the shim of autogkreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of autogkreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.nintervalsGet">
            <summary>Sets the shim of autogkreport.get_nintervals()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.nintervalsSetInt32">
            <summary>Sets the shim of autogkreport.set_nintervals(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of autogkreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of autogkreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogkstate">
            <summary>Shim type of alglib+autogkstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkstate.#ctor(alglib.autogkstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimautogkstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.Constructor">
            <summary>Sets the shim of autogkstate.autogkstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.Constructorautogkalglibautogkstate">
            <summary>Sets the shim of autogkstate.autogkstate(autogkstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.bminusxGet">
            <summary>Sets the shim of autogkstate.get_bminusx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.bminusxSetDouble">
            <summary>Sets the shim of autogkstate.set_bminusx(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.fGet">
            <summary>Sets the shim of autogkstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.fSetDouble">
            <summary>Sets the shim of autogkstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.innerobjGet">
            <summary>Sets the shim of autogkstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.needfGet">
            <summary>Sets the shim of autogkstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.needfSetBoolean">
            <summary>Sets the shim of autogkstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.xGet">
            <summary>Sets the shim of autogkstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.xSetDouble">
            <summary>Sets the shim of autogkstate.set_x(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.xminusaGet">
            <summary>Sets the shim of autogkstate.get_xminusa()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.xminusaSetDouble">
            <summary>Sets the shim of autogkstate.set_xminusa(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.bminusxGet">
            <summary>Sets the shim of autogkstate.get_bminusx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.bminusxSetDouble">
            <summary>Sets the shim of autogkstate.set_bminusx(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.fGet">
            <summary>Sets the shim of autogkstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.fSetDouble">
            <summary>Sets the shim of autogkstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.innerobjGet">
            <summary>Sets the shim of autogkstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.needfGet">
            <summary>Sets the shim of autogkstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of autogkstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.xGet">
            <summary>Sets the shim of autogkstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.xSetDouble">
            <summary>Sets the shim of autogkstate.set_x(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.xminusaGet">
            <summary>Sets the shim of autogkstate.get_xminusa()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimautogkstate.AllInstances.xminusaSetDouble">
            <summary>Sets the shim of autogkstate.set_xminusa(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbarycentricfitreport">
            <summary>Shim type of alglib+barycentricfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricfitreport.#ctor(alglib.barycentricfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.Constructor">
            <summary>Sets the shim of barycentricfitreport.barycentricfitreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.Constructorlsfitalglibbarycentricfitreport">
            <summary>Sets the shim of barycentricfitreport.barycentricfitreport(barycentricfitreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.avgerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.avgerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.avgrelerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.avgrelerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.dbestGet">
            <summary>Sets the shim of barycentricfitreport.get_dbest()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.dbestSetInt32">
            <summary>Sets the shim of barycentricfitreport.set_dbest(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.innerobjGet">
            <summary>Sets the shim of barycentricfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.maxerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.maxerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.rmserrorGet">
            <summary>Sets the shim of barycentricfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.rmserrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.taskrcondGet">
            <summary>Sets the shim of barycentricfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.taskrcondSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.dbestGet">
            <summary>Sets the shim of barycentricfitreport.get_dbest()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.dbestSetInt32">
            <summary>Sets the shim of barycentricfitreport.set_dbest(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.innerobjGet">
            <summary>Sets the shim of barycentricfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.maxerrorGet">
            <summary>Sets the shim of barycentricfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.maxerrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of barycentricfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.taskrcondGet">
            <summary>Sets the shim of barycentricfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricfitreport.AllInstances.taskrcondSetDouble">
            <summary>Sets the shim of barycentricfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbarycentricinterpolant">
            <summary>Shim type of alglib+barycentricinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.#ctor(alglib.barycentricinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.Constructor">
            <summary>Sets the shim of barycentricinterpolant.barycentricinterpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.Constructorratintalglibbarycentricinterpolant">
            <summary>Sets the shim of barycentricinterpolant.barycentricinterpolant(barycentricinterpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.innerobjGet">
            <summary>Sets the shim of barycentricinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbarycentricinterpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of barycentricinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbasestat">
            <summary>Shim type of alglib+basestat</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasestat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasestat.#ctor(alglib.basestat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasestat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasestat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.Constructor">
            <summary>Sets the shim of basestat.basestat()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.cov2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of basestat.cov2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.covm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.covm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.covmDoubleMdArray2Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.covm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.pearsoncorr2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of basestat.pearsoncorr2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.pearsoncorrelationDoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of basestat.pearsoncorrelation(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.pearsoncorrm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.pearsoncorrm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.pearsoncorrmDoubleMdArray2Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.pearsoncorrm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.sampleadevDoubleArrayInt32DoubleRef">
            <summary>Sets the shim of basestat.sampleadev(Double[] x, Int32 n, Double&amp; adev)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.samplemedianDoubleArrayInt32DoubleRef">
            <summary>Sets the shim of basestat.samplemedian(Double[] x, Int32 n, Double&amp; median)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.samplemomentsDoubleArrayInt32DoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of basestat.samplemoments(Double[] x, Int32 n, Double&amp; mean, Double&amp; variance, Double&amp; skewness, Double&amp; kurtosis)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.samplepercentileDoubleArrayInt32DoubleDoubleRef">
            <summary>Sets the shim of basestat.samplepercentile(Double[] x, Int32 n, Double p, Double&amp; v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.spearmancorr2DoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of basestat.spearmancorr2(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.spearmancorrm2DoubleMdArray2DoubleMdArray2Int32Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.spearmancorrm2(Double[,] x, Double[,] y, Int32 n, Int32 m1, Int32 m2, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.spearmancorrmDoubleMdArray2Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of basestat.spearmancorrm(Double[,] x, Int32 n, Int32 m, Double[,]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasestat.spearmanrankcorrelationDoubleArrayDoubleArrayInt32">
            <summary>Sets the shim of basestat.spearmanrankcorrelation(Double[] x, Double[] y, Int32 n)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbasestat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbasicstatops">
            <summary>Shim type of alglib+basicstatops</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasicstatops.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasicstatops.#ctor(alglib.basicstatops)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasicstatops.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbasicstatops.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasicstatops.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasicstatops.Constructor">
            <summary>Sets the shim of basicstatops.basicstatops()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbasicstatops.rankxDoubleArrayRefInt32apservalglibapbuffers">
            <summary>Sets the shim of basicstatops.rankx(Double[]&amp; x, Int32 n, apbuffers buf)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbasicstatops.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdss">
            <summary>Shim type of alglib+bdss</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.#ctor(alglib.bdss)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.Constructor">
            <summary>Sets the shim of bdss.bdss()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dserraccumulateDoubleArrayRefDoubleArrayDoubleArray">
            <summary>Sets the shim of bdss.dserraccumulate(Double[]&amp; buf, Double[] y, Double[] desiredy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dserrallocateInt32DoubleArrayRef">
            <summary>Sets the shim of bdss.dserrallocate(Int32 nclasses, Double[]&amp; buf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dserrfinishDoubleArrayRef">
            <summary>Sets the shim of bdss.dserrfinish(Double[]&amp; buf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsgetmeanmindistanceDoubleMdArray2Int32Int32">
            <summary>Sets the shim of bdss.dsgetmeanmindistance(Double[,] xy, Int32 npoints, Int32 nvars)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsnormalizeDoubleMdArray2RefInt32Int32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of bdss.dsnormalize(Double[,]&amp; xy, Int32 npoints, Int32 nvars, Int32&amp; info, Double[]&amp; means, Double[]&amp; sigmas)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsnormalizecDoubleMdArray2Int32Int32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of bdss.dsnormalizec(Double[,] xy, Int32 npoints, Int32 nvars, Int32&amp; info, Double[]&amp; means, Double[]&amp; sigmas)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsoptimalsplit2DoubleArrayInt32ArrayInt32Int32RefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bdss.dsoptimalsplit2(Double[] a, Int32[] c, Int32 n, Int32&amp; info, Double&amp; threshold, Double&amp; pal, Double&amp; pbl, Double&amp; par, Double&amp; pbr, Double&amp; cve)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsoptimalsplit2fastDoubleArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefDoubleArrayRefInt32ArrayRefInt32Int32DoubleInt32RefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bdss.dsoptimalsplit2fast(Double[]&amp; a, Int32[]&amp; c, Int32[]&amp; tiesbuf, Int32[]&amp; cntbuf, Double[]&amp; bufr, Int32[]&amp; bufi, Int32 n, Int32 nc, Double alpha, Int32&amp; info, Double&amp; threshold, Double&amp; rms, Double&amp; cvrms)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dsoptimalsplitkDoubleArrayInt32ArrayInt32Int32Int32Int32RefDoubleArrayRefInt32RefDoubleRef">
            <summary>Sets the shim of bdss.dsoptimalsplitk(Double[] a, Int32[] c, Int32 n, Int32 nc, Int32 kmax, Int32&amp; info, Double[]&amp; thresholds, Int32&amp; ni, Double&amp; cve)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dssplitkDoubleArrayInt32ArrayInt32Int32Int32Int32RefDoubleArrayRefInt32RefDoubleRef">
            <summary>Sets the shim of bdss.dssplitk(Double[] a, Int32[] c, Int32 n, Int32 nc, Int32 kmax, Int32&amp; info, Double[]&amp; thresholds, Int32&amp; ni, Double&amp; cve)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dstieDoubleArrayRefInt32Int32ArrayRefInt32RefInt32ArrayRefInt32ArrayRef">
            <summary>Sets the shim of bdss.dstie(Double[]&amp; a, Int32 n, Int32[]&amp; ties, Int32&amp; tiecount, Int32[]&amp; p1, Int32[]&amp; p2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.dstiefastiDoubleArrayRefInt32ArrayRefInt32Int32ArrayRefInt32RefDoubleArrayRefInt32ArrayRef">
            <summary>Sets the shim of bdss.dstiefasti(Double[]&amp; a, Int32[]&amp; b, Int32 n, Int32[]&amp; ties, Int32&amp; tiecount, Double[]&amp; bufr, Int32[]&amp; bufi)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.getcvInt32ArrayInt32">
            <summary>Sets the shim of bdss.getcv(Int32[] cnt, Int32 nc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.tieaddcInt32ArrayInt32ArrayInt32Int32Int32ArrayRef">
            <summary>Sets the shim of bdss.tieaddc(Int32[] c, Int32[] ties, Int32 ntie, Int32 nc, Int32[]&amp; cnt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.tiesubcInt32ArrayInt32ArrayInt32Int32Int32ArrayRef">
            <summary>Sets the shim of bdss.tiesubc(Int32[] c, Int32[] ties, Int32 ntie, Int32 nc, Int32[]&amp; cnt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.xlnyDoubleDouble">
            <summary>Sets the shim of bdss.xlny(Double x, Double y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdss.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport">
            <summary>Shim type of alglib+bdss+cvreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.#ctor(alglib.bdss.cvreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.Constructor">
            <summary>Sets the shim of cvreport.cvreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdss.Shimcvreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdsvd">
            <summary>Shim type of alglib+bdsvd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdsvd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdsvd.#ctor(alglib.bdsvd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdsvd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbdsvd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.Constructor">
            <summary>Sets the shim of bdsvd.bdsvd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.bidiagonalsvddecompositionDoubleArrayRefDoubleArrayInt32BooleanBooleanDoubleMdArray2RefInt32DoubleMdArray2RefInt32DoubleMdArray2RefInt32">
            <summary>Sets the shim of bdsvd.bidiagonalsvddecomposition(Double[]&amp; d, Double[] e, Int32 n, Boolean isupper, Boolean isfractionalaccuracyrequired, Double[,]&amp; u, Int32 nru, Double[,]&amp; c, Int32 ncc, Double[,]&amp; vt, Int32 ncvt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.bidiagonalsvddecompositioninternalDoubleArrayRefDoubleArrayInt32BooleanBooleanDoubleMdArray2RefInt32Int32DoubleMdArray2RefInt32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of bdsvd.bidiagonalsvddecompositioninternal(Double[]&amp; d, Double[] e, Int32 n, Boolean isupper, Boolean isfractionalaccuracyrequired, Double[,]&amp; u, Int32 ustart, Int32 nru, Double[,]&amp; c, Int32 cstart, Int32 ncc, Double[,]&amp; vt, Int32 vstart, Int32 ncvt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.extsignbdsqrDoubleDouble">
            <summary>Sets the shim of bdsvd.extsignbdsqr(Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.rmatrixbdsvdDoubleArrayRefDoubleArrayInt32BooleanBooleanDoubleMdArray2RefInt32DoubleMdArray2RefInt32DoubleMdArray2RefInt32">
            <summary>Sets the shim of bdsvd.rmatrixbdsvd(Double[]&amp; d, Double[] e, Int32 n, Boolean isupper, Boolean isfractionalaccuracyrequired, Double[,]&amp; u, Int32 nru, Double[,]&amp; c, Int32 ncc, Double[,]&amp; vt, Int32 ncvt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.svd2x2DoubleDoubleDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of bdsvd.svd2x2(Double f, Double g, Double h, Double&amp; ssmin, Double&amp; ssmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbdsvd.svdv2x2DoubleDoubleDoubleDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bdsvd.svdv2x2(Double f, Double g, Double h, Double&amp; ssmin, Double&amp; ssmax, Double&amp; snr, Double&amp; csr, Double&amp; snl, Double&amp; csl)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbdsvd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbessel">
            <summary>Shim type of alglib+bessel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbessel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbessel.#ctor(alglib.bessel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbessel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbessel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.Constructor">
            <summary>Sets the shim of bessel.bessel()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselasympt0DoubleDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselasympt0(Double x, Double&amp; pzero, Double&amp; qzero)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselasympt1DoubleDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselasympt1(Double x, Double&amp; pzero, Double&amp; qzero)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besseli0Double">
            <summary>Sets the shim of bessel.besseli0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besseli1Double">
            <summary>Sets the shim of bessel.besseli1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselj0Double">
            <summary>Sets the shim of bessel.besselj0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselj1Double">
            <summary>Sets the shim of bessel.besselj1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besseljnInt32Double">
            <summary>Sets the shim of bessel.besseljn(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselk0Double">
            <summary>Sets the shim of bessel.besselk0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselk1Double">
            <summary>Sets the shim of bessel.besselk1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselknInt32Double">
            <summary>Sets the shim of bessel.besselkn(Int32 nn, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselm1firstchebDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselm1firstcheb(Double c, Double&amp; b0, Double&amp; b1, Double&amp; b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselm1nextchebDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselm1nextcheb(Double x, Double c, Double&amp; b0, Double&amp; b1, Double&amp; b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselmfirstchebDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselmfirstcheb(Double c, Double&amp; b0, Double&amp; b1, Double&amp; b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselmnextchebDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of bessel.besselmnextcheb(Double x, Double c, Double&amp; b0, Double&amp; b1, Double&amp; b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.bessely0Double">
            <summary>Sets the shim of bessel.bessely0(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.bessely1Double">
            <summary>Sets the shim of bessel.bessely1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbessel.besselynInt32Double">
            <summary>Sets the shim of bessel.besselyn(Int32 n, Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbessel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbetaf">
            <summary>Shim type of alglib+betaf</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbetaf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbetaf.#ctor(alglib.betaf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbetaf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbetaf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbetaf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbetaf.Constructor">
            <summary>Sets the shim of betaf.betaf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbetaf.betaDoubleDouble">
            <summary>Sets the shim of betaf.beta(Double a, Double b)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbetaf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbinomialdistr">
            <summary>Shim type of alglib+binomialdistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbinomialdistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbinomialdistr.#ctor(alglib.binomialdistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbinomialdistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimbinomialdistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbinomialdistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbinomialdistr.Constructor">
            <summary>Sets the shim of binomialdistr.binomialdistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbinomialdistr.binomialcdistributionInt32Int32Double">
            <summary>Sets the shim of binomialdistr.binomialcdistribution(Int32 k, Int32 n, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbinomialdistr.binomialdistributionInt32Int32Double">
            <summary>Sets the shim of binomialdistr.binomialdistribution(Int32 k, Int32 n, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimbinomialdistr.invbinomialdistributionInt32Int32Double">
            <summary>Sets the shim of binomialdistr.invbinomialdistribution(Int32 k, Int32 n, Double y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimbinomialdistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimblas">
            <summary>Shim type of alglib+blas</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimblas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimblas.#ctor(alglib.blas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimblas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimblas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.Constructor">
            <summary>Sets the shim of blas.blas()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.columnidxabsmaxDoubleMdArray2Int32Int32Int32">
            <summary>Sets the shim of blas.columnidxabsmax(Double[,] x, Int32 i1, Int32 i2, Int32 j)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.copyandtransposeDoubleMdArray2Int32Int32Int32Int32DoubleMdArray2RefInt32Int32Int32Int32">
            <summary>Sets the shim of blas.copyandtranspose(Double[,] a, Int32 is1, Int32 is2, Int32 js1, Int32 js2, Double[,]&amp; b, Int32 id1, Int32 id2, Int32 jd1, Int32 jd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.copymatrixDoubleMdArray2Int32Int32Int32Int32DoubleMdArray2RefInt32Int32Int32Int32">
            <summary>Sets the shim of blas.copymatrix(Double[,] a, Int32 is1, Int32 is2, Int32 js1, Int32 js2, Double[,]&amp; b, Int32 id1, Int32 id2, Int32 jd1, Int32 jd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.inplacetransposeDoubleMdArray2RefInt32Int32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of blas.inplacetranspose(Double[,]&amp; a, Int32 i1, Int32 i2, Int32 j1, Int32 j2, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.matrixmatrixmultiplyDoubleMdArray2Int32Int32Int32Int32BooleanDoubleMdArray2Int32Int32Int32Int32BooleanDoubleDoubleMdArray2RefInt32Int32Int32Int32DoubleDoubleArrayRef">
            <summary>Sets the shim of blas.matrixmatrixmultiply(Double[,] a, Int32 ai1, Int32 ai2, Int32 aj1, Int32 aj2, Boolean transa, Double[,] b, Int32 bi1, Int32 bi2, Int32 bj1, Int32 bj2, Boolean transb, Double alpha, Double[,]&amp; c, Int32 ci1, Int32 ci2, Int32 cj1, Int32 cj2, Double beta, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.matrixvectormultiplyDoubleMdArray2Int32Int32Int32Int32BooleanDoubleArrayInt32Int32DoubleDoubleArrayRefInt32Int32Double">
            <summary>Sets the shim of blas.matrixvectormultiply(Double[,] a, Int32 i1, Int32 i2, Int32 j1, Int32 j2, Boolean trans, Double[] x, Int32 ix1, Int32 ix2, Double alpha, Double[]&amp; y, Int32 iy1, Int32 iy2, Double beta)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.pythag2DoubleDouble">
            <summary>Sets the shim of blas.pythag2(Double x, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.rowidxabsmaxDoubleMdArray2Int32Int32Int32">
            <summary>Sets the shim of blas.rowidxabsmax(Double[,] x, Int32 j1, Int32 j2, Int32 i)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.upperhessenberg1normDoubleMdArray2Int32Int32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of blas.upperhessenberg1norm(Double[,] a, Int32 i1, Int32 i2, Int32 j1, Int32 j2, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.vectoridxabsmaxDoubleArrayInt32Int32">
            <summary>Sets the shim of blas.vectoridxabsmax(Double[] x, Int32 i1, Int32 i2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimblas.vectornorm2DoubleArrayInt32Int32">
            <summary>Sets the shim of blas.vectornorm2(Double[] x, Int32 i1, Int32 i2)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimblas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimchebyshev">
            <summary>Shim type of alglib+chebyshev</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchebyshev.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchebyshev.#ctor(alglib.chebyshev)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchebyshev.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchebyshev.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.Constructor">
            <summary>Sets the shim of chebyshev.chebyshev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.chebyshevcalculateInt32Int32Double">
            <summary>Sets the shim of chebyshev.chebyshevcalculate(Int32 r, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.chebyshevcoefficientsInt32DoubleArrayRef">
            <summary>Sets the shim of chebyshev.chebyshevcoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.chebyshevsumDoubleArrayInt32Int32Double">
            <summary>Sets the shim of chebyshev.chebyshevsum(Double[] c, Int32 r, Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchebyshev.fromchebyshevDoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of chebyshev.fromchebyshev(Double[] a, Int32 n, Double[]&amp; b)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimchebyshev.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimchisquaredistr">
            <summary>Shim type of alglib+chisquaredistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchisquaredistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchisquaredistr.#ctor(alglib.chisquaredistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchisquaredistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimchisquaredistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchisquaredistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchisquaredistr.Constructor">
            <summary>Sets the shim of chisquaredistr.chisquaredistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchisquaredistr.chisquarecdistributionDoubleDouble">
            <summary>Sets the shim of chisquaredistr.chisquarecdistribution(Double v, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchisquaredistr.chisquaredistributionDoubleDouble">
            <summary>Sets the shim of chisquaredistr.chisquaredistribution(Double v, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimchisquaredistr.invchisquaredistributionDoubleDouble">
            <summary>Sets the shim of chisquaredistr.invchisquaredistribution(Double v, Double y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimchisquaredistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcomplex">
            <summary>Shim type of alglib+complex</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcomplex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcomplex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcomplex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.AdditionOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Addition(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.DivisionOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Division(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.EqualityOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Equality(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.ImplicitOpDoublealglibcomplex">
            <summary>Sets the shim of complex.op_Implicit(Double _x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.InequalityOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Inequality(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.MultiplyOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Multiply(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.SubtractionOpalglibcomplexalglibcomplex">
            <summary>Sets the shim of complex.op_Subtraction(complex lhs, complex rhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.UnaryNegationOpalglibcomplex">
            <summary>Sets the shim of complex.op_UnaryNegation(complex lhs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcomplex.UnaryPlusOpalglibcomplex">
            <summary>Sets the shim of complex.op_UnaryPlus(complex lhs)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcomplex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimconv">
            <summary>Shim type of alglib+conv</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimconv.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimconv.#ctor(alglib.conv)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimconv.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimconv.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.Constructor">
            <summary>Sets the shim of conv.conv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convc1dalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of conv.convc1d(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convc1dcircularalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of conv.convc1dcircular(complex[] s, Int32 m, complex[] r, Int32 n, complex[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convc1dcircularinvalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of conv.convc1dcircularinv(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convc1dinvalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of conv.convc1dinv(complex[] a, Int32 m, complex[] b, Int32 n, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convc1dxalglibcomplexArrayInt32alglibcomplexArrayInt32BooleanInt32Int32alglibcomplexArrayRef">
            <summary>Sets the shim of conv.convc1dx(complex[] a, Int32 m, complex[] b, Int32 n, Boolean circular, Int32 alg, Int32 q, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convr1dDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of conv.convr1d(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convr1dcircularDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of conv.convr1dcircular(Double[] s, Int32 m, Double[] r, Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convr1dcircularinvDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of conv.convr1dcircularinv(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convr1dinvDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of conv.convr1dinv(Double[] a, Int32 m, Double[] b, Int32 n, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimconv.convr1dxDoubleArrayInt32DoubleArrayInt32BooleanInt32Int32DoubleArrayRef">
            <summary>Sets the shim of conv.convr1dx(Double[] a, Int32 m, Double[] b, Int32 n, Boolean circular, Int32 alg, Int32 q, Double[]&amp; r)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimconv.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcorr">
            <summary>Shim type of alglib+corr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorr.#ctor(alglib.corr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.Constructor">
            <summary>Sets the shim of corr.corr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.corrc1dalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of corr.corrc1d(complex[] signal, Int32 n, complex[] pattern, Int32 m, complex[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.corrc1dcircularalglibcomplexArrayInt32alglibcomplexArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of corr.corrc1dcircular(complex[] signal, Int32 m, complex[] pattern, Int32 n, complex[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.corrr1dDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of corr.corrr1d(Double[] signal, Int32 n, Double[] pattern, Int32 m, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorr.corrr1dcircularDoubleArrayInt32DoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of corr.corrr1dcircular(Double[] signal, Int32 m, Double[] pattern, Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcorr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcorrelationtests">
            <summary>Shim type of alglib+correlationtests</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorrelationtests.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorrelationtests.#ctor(alglib.correlationtests)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorrelationtests.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcorrelationtests.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.Constructor">
            <summary>Sets the shim of correlationtests.correlationtests()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.pearsoncorrelationsignificanceDoubleInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of correlationtests.pearsoncorrelationsignificance(Double r, Int32 n, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmanrankcorrelationsignificanceDoubleInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of correlationtests.spearmanrankcorrelationsignificance(Double r, Int32 n, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantail5Double">
            <summary>Sets the shim of correlationtests.spearmantail5(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantail6Double">
            <summary>Sets the shim of correlationtests.spearmantail6(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantail7Double">
            <summary>Sets the shim of correlationtests.spearmantail7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantail8Double">
            <summary>Sets the shim of correlationtests.spearmantail8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantail9Double">
            <summary>Sets the shim of correlationtests.spearmantail9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcorrelationtests.spearmantailDoubleInt32">
            <summary>Sets the shim of correlationtests.spearmantail(Double t, Int32 n)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcorrelationtests.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcreflections">
            <summary>Shim type of alglib+creflections</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcreflections.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcreflections.#ctor(alglib.creflections)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcreflections.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimcreflections.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcreflections.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcreflections.Constructor">
            <summary>Sets the shim of creflections.creflections()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcreflections.complexapplyreflectionfromtheleftalglibcomplexMdArray2RefalglibcomplexalglibcomplexArrayInt32Int32Int32Int32alglibcomplexArrayRef">
            <summary>Sets the shim of creflections.complexapplyreflectionfromtheleft(complex[,]&amp; c, complex tau, complex[] v, Int32 m1, Int32 m2, Int32 n1, Int32 n2, complex[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcreflections.complexapplyreflectionfromtherightalglibcomplexMdArray2RefalglibcomplexalglibcomplexArrayRefInt32Int32Int32Int32alglibcomplexArrayRef">
            <summary>Sets the shim of creflections.complexapplyreflectionfromtheright(complex[,]&amp; c, complex tau, complex[]&amp; v, Int32 m1, Int32 m2, Int32 n1, Int32 n2, complex[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimcreflections.complexgeneratereflectionalglibcomplexArrayRefInt32alglibcomplexRef">
            <summary>Sets the shim of creflections.complexgeneratereflection(complex[]&amp; x, Int32 n, complex&amp; tau)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimcreflections.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdawson">
            <summary>Shim type of alglib+dawson</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdawson.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdawson.#ctor(alglib.dawson)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdawson.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdawson.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdawson.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdawson.Constructor">
            <summary>Sets the shim of dawson.dawson()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdawson.dawsonintegralDouble">
            <summary>Sets the shim of dawson.dawsonintegral(Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdawson.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdecisionforest">
            <summary>Shim type of alglib+decisionforest</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdecisionforest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdecisionforest.#ctor(alglib.decisionforest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdecisionforest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdecisionforest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdecisionforest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdecisionforest.Constructor">
            <summary>Sets the shim of decisionforest.decisionforest()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdecisionforest.Constructordforestalglibdecisionforest">
            <summary>Sets the shim of decisionforest.decisionforest(decisionforest obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdecisionforest.innerobjGet">
            <summary>Sets the shim of decisionforest.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdecisionforest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdecisionforest.AllInstances.innerobjGet">
            <summary>Sets the shim of decisionforest.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver">
            <summary>Shim type of alglib+densesolver</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.#ctor(alglib.densesolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Constructor">
            <summary>Sets the shim of densesolver.densesolver()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cbasiclusolvealglibcomplexMdArray2Int32ArrayDoubleInt32alglibcomplexArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.cbasiclusolve(complex[,] lua, Int32[] p, Double scalea, Int32 n, complex[]&amp; xb, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixlusolvealglibcomplexMdArray2Int32ArrayInt32alglibcomplexArrayInt32RefdensesolveralglibdensesolverreportalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.cmatrixlusolve(complex[,] lua, Int32[] p, Int32 n, complex[] b, Int32&amp; info, densesolverreport rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixlusolveinternalalglibcomplexMdArray2Int32ArrayDoubleInt32alglibcomplexMdArray2BooleanalglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.cmatrixlusolveinternal(complex[,] lua, Int32[] p, Double scalea, Int32 n, complex[,] a, Boolean havea, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixlusolvemalglibcomplexMdArray2Int32ArrayInt32alglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.cmatrixlusolvem(complex[,] lua, Int32[] p, Int32 n, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixmixedsolvealglibcomplexMdArray2alglibcomplexMdArray2Int32ArrayInt32alglibcomplexArrayInt32RefdensesolveralglibdensesolverreportalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.cmatrixmixedsolve(complex[,] a, complex[,] lua, Int32[] p, Int32 n, complex[] b, Int32&amp; info, densesolverreport rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixmixedsolvemalglibcomplexMdArray2alglibcomplexMdArray2Int32ArrayInt32alglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.cmatrixmixedsolvem(complex[,] a, complex[,] lua, Int32[] p, Int32 n, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixsolvealglibcomplexMdArray2Int32alglibcomplexArrayInt32RefdensesolveralglibdensesolverreportalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.cmatrixsolve(complex[,] a, Int32 n, complex[] b, Int32&amp; info, densesolverreport rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.cmatrixsolvemalglibcomplexMdArray2Int32alglibcomplexMdArray2Int32BooleanInt32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.cmatrixsolvem(complex[,] a, Int32 n, complex[,] b, Int32 m, Boolean rfs, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.densesolverrfsmaxInt32DoubleDouble">
            <summary>Sets the shim of densesolver.densesolverrfsmax(Int32 n, Double r1, Double rinf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.densesolverrfsmaxv2Int32Double">
            <summary>Sets the shim of densesolver.densesolverrfsmaxv2(Int32 n, Double r2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdbasiccholeskysolvealglibcomplexMdArray2DoubleInt32BooleanalglibcomplexArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.hpdbasiccholeskysolve(complex[,] cha, Double sqrtscalea, Int32 n, Boolean isupper, complex[]&amp; xb, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdmatrixcholeskysolvealglibcomplexMdArray2Int32BooleanalglibcomplexArrayInt32RefdensesolveralglibdensesolverreportalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.hpdmatrixcholeskysolve(complex[,] cha, Int32 n, Boolean isupper, complex[] b, Int32&amp; info, densesolverreport rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdmatrixcholeskysolveinternalalglibcomplexMdArray2DoubleInt32BooleanalglibcomplexMdArray2BooleanalglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.hpdmatrixcholeskysolveinternal(complex[,] cha, Double sqrtscalea, Int32 n, Boolean isupper, complex[,] a, Boolean havea, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdmatrixcholeskysolvemalglibcomplexMdArray2Int32BooleanalglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.hpdmatrixcholeskysolvem(complex[,] cha, Int32 n, Boolean isupper, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdmatrixsolvealglibcomplexMdArray2Int32BooleanalglibcomplexArrayInt32RefdensesolveralglibdensesolverreportalglibcomplexArrayRef">
            <summary>Sets the shim of densesolver.hpdmatrixsolve(complex[,] a, Int32 n, Boolean isupper, complex[] b, Int32&amp; info, densesolverreport rep, complex[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.hpdmatrixsolvemalglibcomplexMdArray2Int32BooleanalglibcomplexMdArray2Int32Int32RefdensesolveralglibdensesolverreportalglibcomplexMdArray2Ref">
            <summary>Sets the shim of densesolver.hpdmatrixsolvem(complex[,] a, Int32 n, Boolean isupper, complex[,] b, Int32 m, Int32&amp; info, densesolverreport rep, complex[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rbasiclusolveDoubleMdArray2Int32ArrayDoubleInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of densesolver.rbasiclusolve(Double[,] lua, Int32[] p, Double scalea, Int32 n, Double[]&amp; xb, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixlusolveDoubleMdArray2Int32ArrayInt32DoubleArrayInt32RefdensesolveralglibdensesolverreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.rmatrixlusolve(Double[,] lua, Int32[] p, Int32 n, Double[] b, Int32&amp; info, densesolverreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixlusolveinternalDoubleMdArray2Int32ArrayDoubleInt32DoubleMdArray2BooleanDoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.rmatrixlusolveinternal(Double[,] lua, Int32[] p, Double scalea, Int32 n, Double[,] a, Boolean havea, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixlusolvemDoubleMdArray2Int32ArrayInt32DoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.rmatrixlusolvem(Double[,] lua, Int32[] p, Int32 n, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixmixedsolveDoubleMdArray2DoubleMdArray2Int32ArrayInt32DoubleArrayInt32RefdensesolveralglibdensesolverreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.rmatrixmixedsolve(Double[,] a, Double[,] lua, Int32[] p, Int32 n, Double[] b, Int32&amp; info, densesolverreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixmixedsolvemDoubleMdArray2DoubleMdArray2Int32ArrayInt32DoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.rmatrixmixedsolvem(Double[,] a, Double[,] lua, Int32[] p, Int32 n, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixsolveDoubleMdArray2Int32DoubleArrayInt32RefdensesolveralglibdensesolverreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.rmatrixsolve(Double[,] a, Int32 n, Double[] b, Int32&amp; info, densesolverreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixsolvelsDoubleMdArray2Int32Int32DoubleArrayDoubleInt32RefdensesolveralglibdensesolverlsreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.rmatrixsolvels(Double[,] a, Int32 nrows, Int32 ncols, Double[] b, Double threshold, Int32&amp; info, densesolverlsreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.rmatrixsolvemDoubleMdArray2Int32DoubleMdArray2Int32BooleanInt32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.rmatrixsolvem(Double[,] a, Int32 n, Double[,] b, Int32 m, Boolean rfs, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdbasiccholeskysolveDoubleMdArray2DoubleInt32BooleanDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of densesolver.spdbasiccholeskysolve(Double[,] cha, Double sqrtscalea, Int32 n, Boolean isupper, Double[]&amp; xb, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdmatrixcholeskysolveDoubleMdArray2Int32BooleanDoubleArrayInt32RefdensesolveralglibdensesolverreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.spdmatrixcholeskysolve(Double[,] cha, Int32 n, Boolean isupper, Double[] b, Int32&amp; info, densesolverreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdmatrixcholeskysolveinternalDoubleMdArray2DoubleInt32BooleanDoubleMdArray2BooleanDoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.spdmatrixcholeskysolveinternal(Double[,] cha, Double sqrtscalea, Int32 n, Boolean isupper, Double[,] a, Boolean havea, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdmatrixcholeskysolvemDoubleMdArray2Int32BooleanDoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.spdmatrixcholeskysolvem(Double[,] cha, Int32 n, Boolean isupper, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdmatrixsolveDoubleMdArray2Int32BooleanDoubleArrayInt32RefdensesolveralglibdensesolverreportDoubleArrayRef">
            <summary>Sets the shim of densesolver.spdmatrixsolve(Double[,] a, Int32 n, Boolean isupper, Double[] b, Int32&amp; info, densesolverreport rep, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.spdmatrixsolvemDoubleMdArray2Int32BooleanDoubleMdArray2Int32Int32RefdensesolveralglibdensesolverreportDoubleMdArray2Ref">
            <summary>Sets the shim of densesolver.spdmatrixsolvem(Double[,] a, Int32 n, Boolean isupper, Double[,] b, Int32 m, Int32&amp; info, densesolverreport rep, Double[,]&amp; x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport">
            <summary>Shim type of alglib+densesolver+densesolverlsreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.#ctor(alglib.densesolver.densesolverlsreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.Constructor">
            <summary>Sets the shim of densesolverlsreport.densesolverlsreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverlsreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport">
            <summary>Shim type of alglib+densesolver+densesolverreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.#ctor(alglib.densesolver.densesolverreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.Constructor">
            <summary>Sets the shim of densesolverreport.densesolverreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolver.Shimdensesolverreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolverlsreport">
            <summary>Shim type of alglib+densesolverlsreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverlsreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverlsreport.#ctor(alglib.densesolverlsreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverlsreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverlsreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.Constructor">
            <summary>Sets the shim of densesolverlsreport.densesolverlsreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.Constructordensesolveralglibdensesolverlsreport">
            <summary>Sets the shim of densesolverlsreport.densesolverlsreport(densesolverlsreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.cxGet">
            <summary>Sets the shim of densesolverlsreport.get_cx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.cxSetDoubleMdArray2">
            <summary>Sets the shim of densesolverlsreport.set_cx(Double[,] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.innerobjGet">
            <summary>Sets the shim of densesolverlsreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.kGet">
            <summary>Sets the shim of densesolverlsreport.get_k()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.kSetInt32">
            <summary>Sets the shim of densesolverlsreport.set_k(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.nGet">
            <summary>Sets the shim of densesolverlsreport.get_n()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.nSetInt32">
            <summary>Sets the shim of densesolverlsreport.set_n(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.r2Get">
            <summary>Sets the shim of densesolverlsreport.get_r2()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.r2SetDouble">
            <summary>Sets the shim of densesolverlsreport.set_r2(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.cxGet">
            <summary>Sets the shim of densesolverlsreport.get_cx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.cxSetDoubleMdArray2">
            <summary>Sets the shim of densesolverlsreport.set_cx(Double[,] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.innerobjGet">
            <summary>Sets the shim of densesolverlsreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.kGet">
            <summary>Sets the shim of densesolverlsreport.get_k()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.kSetInt32">
            <summary>Sets the shim of densesolverlsreport.set_k(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.nGet">
            <summary>Sets the shim of densesolverlsreport.get_n()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.nSetInt32">
            <summary>Sets the shim of densesolverlsreport.set_n(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.r2Get">
            <summary>Sets the shim of densesolverlsreport.get_r2()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverlsreport.AllInstances.r2SetDouble">
            <summary>Sets the shim of densesolverlsreport.set_r2(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolverreport">
            <summary>Shim type of alglib+densesolverreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverreport.#ctor(alglib.densesolverreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdensesolverreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.Constructor">
            <summary>Sets the shim of densesolverreport.densesolverreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.Constructordensesolveralglibdensesolverreport">
            <summary>Sets the shim of densesolverreport.densesolverreport(densesolverreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.innerobjGet">
            <summary>Sets the shim of densesolverreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.r1Get">
            <summary>Sets the shim of densesolverreport.get_r1()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.r1SetDouble">
            <summary>Sets the shim of densesolverreport.set_r1(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.rinfGet">
            <summary>Sets the shim of densesolverreport.get_rinf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.rinfSetDouble">
            <summary>Sets the shim of densesolverreport.set_rinf(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances.innerobjGet">
            <summary>Sets the shim of densesolverreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances.r1Get">
            <summary>Sets the shim of densesolverreport.get_r1()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances.r1SetDouble">
            <summary>Sets the shim of densesolverreport.set_r1(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances.rinfGet">
            <summary>Sets the shim of densesolverreport.get_rinf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdensesolverreport.AllInstances.rinfSetDouble">
            <summary>Sets the shim of densesolverreport.set_rinf(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest">
            <summary>Shim type of alglib+dforest</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.#ctor(alglib.dforest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Constructor">
            <summary>Sets the shim of dforest.dforest()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfallocalglibserializerdforestalglibdecisionforest">
            <summary>Sets the shim of dforest.dfalloc(serializer s, decisionforest forest)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfavgcedforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfavgce(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfavgerrordforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfavgerror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfavgrelerrordforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfavgrelerror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfbuildinternalDoubleMdArray2Int32Int32Int32Int32Int32Int32Int32Int32Refdforestalglibdecisionforestdforestalglibdfreport">
            <summary>Sets the shim of dforest.dfbuildinternal(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 ntrees, Int32 samplesize, Int32 nfeatures, Int32 flags, Int32&amp; info, decisionforest df, dfreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfbuildrandomdecisionforestDoubleMdArray2Int32Int32Int32Int32DoubleInt32Refdforestalglibdecisionforestdforestalglibdfreport">
            <summary>Sets the shim of dforest.dfbuildrandomdecisionforest(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 ntrees, Double r, Int32&amp; info, decisionforest df, dfreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfbuildrandomdecisionforestx1DoubleMdArray2Int32Int32Int32Int32Int32DoubleInt32Refdforestalglibdecisionforestdforestalglibdfreport">
            <summary>Sets the shim of dforest.dfbuildrandomdecisionforestx1(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 ntrees, Int32 nrndvars, Double r, Int32&amp; info, decisionforest df, dfreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfbuildtreeDoubleMdArray2Int32Int32Int32Int32Int32Int32dforestalglibdfinternalbuffers">
            <summary>Sets the shim of dforest.dfbuildtree(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 nfeatures, Int32 nvarsinpool, Int32 flags, dfinternalbuffers bufs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfbuildtreerecDoubleMdArray2Int32Int32Int32Int32Int32Int32Int32RefInt32Int32dforestalglibdfinternalbuffers">
            <summary>Sets the shim of dforest.dfbuildtreerec(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32 nfeatures, Int32 nvarsinpool, Int32 flags, Int32&amp; numprocessed, Int32 idx1, Int32 idx2, dfinternalbuffers bufs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfclserrordforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfclserror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfcopydforestalglibdecisionforestdforestalglibdecisionforest">
            <summary>Sets the shim of dforest.dfcopy(decisionforest df1, decisionforest df2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfprocessdforestalglibdecisionforestDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of dforest.dfprocess(decisionforest df, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfprocessidforestalglibdecisionforestDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of dforest.dfprocessi(decisionforest df, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfprocessinternaldforestalglibdecisionforestInt32DoubleArrayDoubleArrayRef">
            <summary>Sets the shim of dforest.dfprocessinternal(decisionforest df, Int32 offs, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfrelclserrordforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfrelclserror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfrmserrordforestalglibdecisionforestDoubleMdArray2Int32">
            <summary>Sets the shim of dforest.dfrmserror(decisionforest df, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfserializealglibserializerdforestalglibdecisionforest">
            <summary>Sets the shim of dforest.dfserialize(serializer s, decisionforest forest)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfsplitcDoubleArrayRefInt32ArrayRefInt32ArrayRefInt32Int32Int32Int32RefDoubleRefDoubleRefDoubleArrayRefInt32ArrayRef">
            <summary>Sets the shim of dforest.dfsplitc(Double[]&amp; x, Int32[]&amp; c, Int32[]&amp; cntbuf, Int32 n, Int32 nc, Int32 flags, Int32&amp; info, Double&amp; threshold, Double&amp; e, Double[]&amp; sortrbuf, Int32[]&amp; sortibuf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfsplitrDoubleArrayRefDoubleArrayRefInt32Int32Int32RefDoubleRefDoubleRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of dforest.dfsplitr(Double[]&amp; x, Double[]&amp; y, Int32 n, Int32 flags, Int32&amp; info, Double&amp; threshold, Double&amp; e, Double[]&amp; sortrbuf, Double[]&amp; sortrbuf2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.dfunserializealglibserializerdforestalglibdecisionforest">
            <summary>Sets the shim of dforest.dfunserialize(serializer s, decisionforest forest)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest">
            <summary>Shim type of alglib+dforest+decisionforest</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.#ctor(alglib.dforest.decisionforest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.Constructor">
            <summary>Sets the shim of decisionforest.decisionforest()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdecisionforest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers">
            <summary>Shim type of alglib+dforest+dfinternalbuffers</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.#ctor(alglib.dforest.dfinternalbuffers)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.Constructor">
            <summary>Sets the shim of dfinternalbuffers.dfinternalbuffers()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdfinternalbuffers.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport">
            <summary>Shim type of alglib+dforest+dfreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.#ctor(alglib.dforest.dfreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.Constructor">
            <summary>Sets the shim of dfreport.dfreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdforest.Shimdfreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdfreport">
            <summary>Shim type of alglib+dfreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdfreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdfreport.#ctor(alglib.dfreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdfreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimdfreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.Constructor">
            <summary>Sets the shim of dfreport.dfreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.Constructordforestalglibdfreport">
            <summary>Sets the shim of dfreport.dfreport(dfreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgceGet">
            <summary>Sets the shim of dfreport.get_avgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgceSetDouble">
            <summary>Sets the shim of dfreport.set_avgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgerrorGet">
            <summary>Sets the shim of dfreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgerrorSetDouble">
            <summary>Sets the shim of dfreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgrelerrorGet">
            <summary>Sets the shim of dfreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.avgrelerrorSetDouble">
            <summary>Sets the shim of dfreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.innerobjGet">
            <summary>Sets the shim of dfreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgceGet">
            <summary>Sets the shim of dfreport.get_oobavgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgceSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgerrorGet">
            <summary>Sets the shim of dfreport.get_oobavgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgerrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgrelerrorGet">
            <summary>Sets the shim of dfreport.get_oobavgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobavgrelerrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobrelclserrorGet">
            <summary>Sets the shim of dfreport.get_oobrelclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobrelclserrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobrelclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobrmserrorGet">
            <summary>Sets the shim of dfreport.get_oobrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.oobrmserrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobrmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.relclserrorGet">
            <summary>Sets the shim of dfreport.get_relclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.relclserrorSetDouble">
            <summary>Sets the shim of dfreport.set_relclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.rmserrorGet">
            <summary>Sets the shim of dfreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.rmserrorSetDouble">
            <summary>Sets the shim of dfreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimdfreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgceGet">
            <summary>Sets the shim of dfreport.get_avgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgceSetDouble">
            <summary>Sets the shim of dfreport.set_avgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of dfreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of dfreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of dfreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of dfreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.innerobjGet">
            <summary>Sets the shim of dfreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgceGet">
            <summary>Sets the shim of dfreport.get_oobavgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgceSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgerrorGet">
            <summary>Sets the shim of dfreport.get_oobavgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgerrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgrelerrorGet">
            <summary>Sets the shim of dfreport.get_oobavgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobavgrelerrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobavgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobrelclserrorGet">
            <summary>Sets the shim of dfreport.get_oobrelclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobrelclserrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobrelclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobrmserrorGet">
            <summary>Sets the shim of dfreport.get_oobrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.oobrmserrorSetDouble">
            <summary>Sets the shim of dfreport.set_oobrmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.relclserrorGet">
            <summary>Sets the shim of dfreport.get_relclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.relclserrorSetDouble">
            <summary>Sets the shim of dfreport.set_relclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of dfreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimdfreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of dfreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimelliptic">
            <summary>Shim type of alglib+elliptic</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimelliptic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimelliptic.#ctor(alglib.elliptic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimelliptic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimelliptic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.Constructor">
            <summary>Sets the shim of elliptic.elliptic()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.ellipticintegraleDouble">
            <summary>Sets the shim of elliptic.ellipticintegrale(Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.ellipticintegralkDouble">
            <summary>Sets the shim of elliptic.ellipticintegralk(Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.ellipticintegralkhighprecisionDouble">
            <summary>Sets the shim of elliptic.ellipticintegralkhighprecision(Double m1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.incompleteellipticintegraleDoubleDouble">
            <summary>Sets the shim of elliptic.incompleteellipticintegrale(Double phi, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimelliptic.incompleteellipticintegralkDoubleDouble">
            <summary>Sets the shim of elliptic.incompleteellipticintegralk(Double phi, Double m)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimelliptic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimevd">
            <summary>Shim type of alglib+evd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimevd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimevd.#ctor(alglib.evd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimevd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimevd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.Constructor">
            <summary>Sets the shim of evd.evd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.hmatrixevdalglibcomplexMdArray2Int32Int32BooleanDoubleArrayRefalglibcomplexMdArray2Ref">
            <summary>Sets the shim of evd.hmatrixevd(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double[]&amp; d, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.hmatrixevdialglibcomplexMdArray2Int32Int32BooleanInt32Int32DoubleArrayRefalglibcomplexMdArray2Ref">
            <summary>Sets the shim of evd.hmatrixevdi(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Int32 i1, Int32 i2, Double[]&amp; w, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.hmatrixevdralglibcomplexMdArray2Int32Int32BooleanDoubleDoubleInt32RefDoubleArrayRefalglibcomplexMdArray2Ref">
            <summary>Sets the shim of evd.hmatrixevdr(complex[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double b1, Double b2, Int32&amp; m, Double[]&amp; w, complex[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internalbisectioneigenvaluesDoubleArrayDoubleArrayInt32Int32Int32DoubleDoubleInt32Int32DoubleDoubleArrayRefInt32RefInt32RefInt32ArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of evd.internalbisectioneigenvalues(Double[] d, Double[] e, Int32 n, Int32 irange, Int32 iorder, Double vl, Double vu, Int32 il, Int32 iu, Double abstol, Double[]&amp; w, Int32&amp; m, Int32&amp; nsplit, Int32[]&amp; iblock, Int32[]&amp; isplit, Int32&amp; errorcode)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internaldlaebzInt32Int32Int32Int32Int32DoubleDoubleDoubleDoubleArrayDoubleArrayDoubleArrayInt32ArrayRefDoubleMdArray2RefDoubleArrayRefInt32RefInt32MdArray2RefDoubleArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of evd.internaldlaebz(Int32 ijob, Int32 nitmax, Int32 n, Int32 mmax, Int32 minp, Double abstol, Double reltol, Double pivmin, Double[] d, Double[] e, Double[] e2, Int32[]&amp; nval, Double[,]&amp; ab, Double[]&amp; c, Int32&amp; mout, Int32[,]&amp; nab, Double[]&amp; work, Int32[]&amp; iwork, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internaldsteinInt32DoubleArrayDoubleArrayInt32DoubleArrayInt32ArrayInt32ArrayDoubleMdArray2RefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of evd.internaldstein(Int32 n, Double[] d, Double[] e, Int32 m, Double[] w, Int32[] iblock, Int32[] isplit, Double[,]&amp; z, Int32[]&amp; ifail, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internalhsevdladivDoubleDoubleDoubleDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of evd.internalhsevdladiv(Double a, Double b, Double c, Double d, Double&amp; p, Double&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internalhsevdlaln2BooleanInt32Int32DoubleDoubleDoubleMdArray2DoubleDoubleDoubleMdArray2DoubleDoubleBooleanArrayRefBooleanArrayRefInt32MdArray2RefDoubleArrayRefDoubleArrayRefDoubleMdArray2RefDoubleRefDoubleRefInt32Ref">
            <summary>Sets the shim of evd.internalhsevdlaln2(Boolean ltrans, Int32 na, Int32 nw, Double smin, Double ca, Double[,] a, Double d1, Double d2, Double[,] b, Double wr, Double wi, Boolean[]&amp; rswap4, Boolean[]&amp; zswap4, Int32[,]&amp; ipivot44, Double[]&amp; civ4, Double[]&amp; crv4, Double[,]&amp; x, Double&amp; scl, Double&amp; xnorm, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.internaltrevcDoubleMdArray2Int32Int32Int32BooleanArrayDoubleMdArray2RefDoubleMdArray2RefInt32RefInt32Ref">
            <summary>Sets the shim of evd.internaltrevc(Double[,] t, Int32 n, Int32 side, Int32 howmny, Boolean[] vselect, Double[,]&amp; vl, Double[,]&amp; vr, Int32&amp; m, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.nonsymmetricevdDoubleMdArray2Int32Int32DoubleArrayRefDoubleArrayRefDoubleMdArray2RefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.nonsymmetricevd(Double[,] a, Int32 n, Int32 vneeded, Double[]&amp; wr, Double[]&amp; wi, Double[,]&amp; vl, Double[,]&amp; vr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.rmatrixevdDoubleMdArray2Int32Int32DoubleArrayRefDoubleArrayRefDoubleMdArray2RefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.rmatrixevd(Double[,] a, Int32 n, Int32 vneeded, Double[]&amp; wr, Double[]&amp; wi, Double[,]&amp; vl, Double[,]&amp; vr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixevdDoubleMdArray2Int32Int32BooleanDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixevd(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double[]&amp; d, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixevdiDoubleMdArray2Int32Int32BooleanInt32Int32DoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixevdi(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Int32 i1, Int32 i2, Double[]&amp; w, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixevdrDoubleMdArray2Int32Int32BooleanDoubleDoubleInt32RefDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixevdr(Double[,] a, Int32 n, Int32 zneeded, Boolean isupper, Double b1, Double b2, Int32&amp; m, Double[]&amp; w, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixtdevdDoubleArrayRefDoubleArrayInt32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixtdevd(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixtdevdiDoubleArrayRefDoubleArrayInt32Int32Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixtdevdi(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Int32 i1, Int32 i2, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.smatrixtdevdrDoubleArrayRefDoubleArrayInt32Int32DoubleDoubleInt32RefDoubleMdArray2Ref">
            <summary>Sets the shim of evd.smatrixtdevdr(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Double a, Double b, Int32&amp; m, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdevde2DoubleDoubleDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of evd.tdevde2(Double a, Double b, Double c, Double&amp; rt1, Double&amp; rt2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdevdev2DoubleDoubleDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of evd.tdevdev2(Double a, Double b, Double c, Double&amp; rt1, Double&amp; rt2, Double&amp; cs1, Double&amp; sn1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdevdextsignDoubleDouble">
            <summary>Sets the shim of evd.tdevdextsign(Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdevdpythagDoubleDouble">
            <summary>Sets the shim of evd.tdevdpythag(Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdininternaldlagtfInt32DoubleArrayRefDoubleDoubleArrayRefDoubleArrayRefDoubleDoubleArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of evd.tdininternaldlagtf(Int32 n, Double[]&amp; a, Double lambdav, Double[]&amp; b, Double[]&amp; c, Double tol, Double[]&amp; d, Int32[]&amp; iin, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tdininternaldlagtsInt32DoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32ArrayDoubleArrayRefDoubleRefInt32Ref">
            <summary>Sets the shim of evd.tdininternaldlagts(Int32 n, Double[] a, Double[] b, Double[] c, Double[] d, Int32[] iin, Double[]&amp; y, Double&amp; tol, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.toupperhessenbergDoubleMdArray2RefInt32DoubleArrayRef">
            <summary>Sets the shim of evd.toupperhessenberg(Double[,]&amp; a, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.tridiagonalevdDoubleArrayRefDoubleArrayInt32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of evd.tridiagonalevd(Double[]&amp; d, Double[] e, Int32 n, Int32 zneeded, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimevd.unpackqfromupperhessenbergDoubleMdArray2Int32DoubleArrayDoubleMdArray2Ref">
            <summary>Sets the shim of evd.unpackqfromupperhessenberg(Double[,] a, Int32 n, Double[] tau, Double[,]&amp; q)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimevd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimexpintegrals">
            <summary>Shim type of alglib+expintegrals</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimexpintegrals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimexpintegrals.#ctor(alglib.expintegrals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimexpintegrals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimexpintegrals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimexpintegrals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimexpintegrals.Constructor">
            <summary>Sets the shim of expintegrals.expintegrals()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimexpintegrals.exponentialintegraleiDouble">
            <summary>Sets the shim of expintegrals.exponentialintegralei(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimexpintegrals.exponentialintegralenDoubleInt32">
            <summary>Sets the shim of expintegrals.exponentialintegralen(Double x, Int32 n)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimexpintegrals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfbls">
            <summary>Shim type of alglib+fbls</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.#ctor(alglib.fbls)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.Constructor">
            <summary>Sets the shim of fbls.fbls()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.fblscgcreateDoubleArrayDoubleArrayInt32fblsalglibfblslincgstate">
            <summary>Sets the shim of fbls.fblscgcreate(Double[] x, Double[] b, Int32 n, fblslincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.fblscgiterationfblsalglibfblslincgstate">
            <summary>Sets the shim of fbls.fblscgiteration(fblslincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.fblscholeskysolveDoubleMdArray2DoubleInt32BooleanDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of fbls.fblscholeskysolve(Double[,] cha, Double sqrtscalea, Int32 n, Boolean isupper, Double[]&amp; xb, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.fblssolvecgxDoubleMdArray2Int32Int32DoubleDoubleArrayDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of fbls.fblssolvecgx(Double[,] a, Int32 m, Int32 n, Double alpha, Double[] b, Double[]&amp; x, Double[]&amp; buf)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfbls.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate">
            <summary>Shim type of alglib+fbls+fblslincgstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.#ctor(alglib.fbls.fblslincgstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.Constructor">
            <summary>Sets the shim of fblslincgstate.fblslincgstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfbls.Shimfblslincgstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfdistr">
            <summary>Shim type of alglib+fdistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfdistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfdistr.#ctor(alglib.fdistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfdistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfdistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfdistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfdistr.Constructor">
            <summary>Sets the shim of fdistr.fdistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfdistr.fcdistributionInt32Int32Double">
            <summary>Sets the shim of fdistr.fcdistribution(Int32 a, Int32 b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfdistr.fdistributionInt32Int32Double">
            <summary>Sets the shim of fdistr.fdistribution(Int32 a, Int32 b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfdistr.invfdistributionInt32Int32Double">
            <summary>Sets the shim of fdistr.invfdistribution(Int32 a, Int32 b, Double y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfdistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfft">
            <summary>Shim type of alglib+fft</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfft.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfft.#ctor(alglib.fft)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfft.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfft.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.Constructor">
            <summary>Sets the shim of fft.fft()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftc1dalglibcomplexArrayRefInt32">
            <summary>Sets the shim of fft.fftc1d(complex[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftc1dinvalglibcomplexArrayRefInt32">
            <summary>Sets the shim of fft.fftc1dinv(complex[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftr1dDoubleArrayInt32alglibcomplexArrayRef">
            <summary>Sets the shim of fft.fftr1d(Double[] a, Int32 n, complex[]&amp; f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftr1dinternalevenDoubleArrayRefInt32DoubleArrayRefftbasealglibftplan">
            <summary>Sets the shim of fft.fftr1dinternaleven(Double[]&amp; a, Int32 n, Double[]&amp; buf, ftplan plan)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftr1dinvalglibcomplexArrayInt32DoubleArrayRef">
            <summary>Sets the shim of fft.fftr1dinv(complex[] f, Int32 n, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfft.fftr1dinvinternalevenDoubleArrayRefInt32DoubleArrayRefftbasealglibftplan">
            <summary>Sets the shim of fft.fftr1dinvinternaleven(Double[]&amp; a, Int32 n, Double[]&amp; buf, ftplan plan)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfft.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfht">
            <summary>Shim type of alglib+fht</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfht.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfht.#ctor(alglib.fht)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfht.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfht.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfht.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfht.Constructor">
            <summary>Sets the shim of fht.fht()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfht.fhtr1dDoubleArrayRefInt32">
            <summary>Sets the shim of fht.fhtr1d(Double[]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfht.fhtr1dinvDoubleArrayRefInt32">
            <summary>Sets the shim of fht.fhtr1dinv(Double[]&amp; a, Int32 n)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfht.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfresnel">
            <summary>Shim type of alglib+fresnel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfresnel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfresnel.#ctor(alglib.fresnel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfresnel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimfresnel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfresnel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfresnel.Constructor">
            <summary>Sets the shim of fresnel.fresnel()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimfresnel.fresnelintegralDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of fresnel.fresnelintegral(Double x, Double&amp; c, Double&amp; s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimfresnel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimftbase">
            <summary>Shim type of alglib+ftbase</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.#ctor(alglib.ftbase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.Constructor">
            <summary>Sets the shim of ftbase.ftbase()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.fftarrayresizeInt32ArrayRefInt32RefInt32">
            <summary>Sets the shim of ftbase.fftarrayresize(Int32[]&amp; a, Int32&amp; asize, Int32 newasize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ffticltrecDoubleArrayRefInt32Int32DoubleArrayRefInt32Int32Int32Int32">
            <summary>Sets the shim of ftbase.ffticltrec(Double[]&amp; a, Int32 astart, Int32 astride, Double[]&amp; b, Int32 bstart, Int32 bstride, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.fftirltrecDoubleArrayRefInt32Int32DoubleArrayRefInt32Int32Int32Int32">
            <summary>Sets the shim of ftbase.fftirltrec(Double[]&amp; a, Int32 astart, Int32 astride, Double[]&amp; b, Int32 bstart, Int32 bstride, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ffttwcalcDoubleArrayRefInt32Int32Int32">
            <summary>Sets the shim of ftbase.ffttwcalc(Double[]&amp; a, Int32 aoffset, Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbaseexecuteplanDoubleArrayRefInt32Int32ftbasealglibftplan">
            <summary>Sets the shim of ftbase.ftbaseexecuteplan(Double[]&amp; a, Int32 aoffset, Int32 n, ftplan plan)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbaseexecuteplanrecDoubleArrayRefInt32ftbasealglibftplanInt32Int32">
            <summary>Sets the shim of ftbase.ftbaseexecuteplanrec(Double[]&amp; a, Int32 aoffset, ftplan plan, Int32 entryoffset, Int32 stackptr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasefactorizeInt32Int32Int32RefInt32Ref">
            <summary>Sets the shim of ftbase.ftbasefactorize(Int32 n, Int32 tasktype, Int32&amp; n1, Int32&amp; n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasefindsmoothInt32">
            <summary>Sets the shim of ftbase.ftbasefindsmooth(Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasefindsmoothevenInt32">
            <summary>Sets the shim of ftbase.ftbasefindsmootheven(Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasefindsmoothrecInt32Int32Int32Int32Ref">
            <summary>Sets the shim of ftbase.ftbasefindsmoothrec(Int32 n, Int32 seed, Int32 leastfactor, Int32&amp; best)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasegeneratecomplexfftplanInt32ftbasealglibftplan">
            <summary>Sets the shim of ftbase.ftbasegeneratecomplexfftplan(Int32 n, ftplan plan)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasegenerateplanrecInt32Int32ftbasealglibftplanInt32RefInt32RefInt32RefInt32RefInt32RefInt32">
            <summary>Sets the shim of ftbase.ftbasegenerateplanrec(Int32 n, Int32 tasktype, ftplan plan, Int32&amp; plansize, Int32&amp; precomputedsize, Int32&amp; planarraysize, Int32&amp; tmpmemsize, Int32&amp; stackmemsize, Int32 stackptr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasegeneraterealfftplanInt32ftbasealglibftplan">
            <summary>Sets the shim of ftbase.ftbasegeneraterealfftplan(Int32 n, ftplan plan)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasegeneraterealfhtplanInt32ftbasealglibftplan">
            <summary>Sets the shim of ftbase.ftbasegeneraterealfhtplan(Int32 n, ftplan plan)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbasegetflopestimateInt32">
            <summary>Sets the shim of ftbase.ftbasegetflopestimate(Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbaseissmoothInt32">
            <summary>Sets the shim of ftbase.ftbaseissmooth(Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.ftbaseprecomputeplanrecftbasealglibftplanInt32Int32">
            <summary>Sets the shim of ftbase.ftbaseprecomputeplanrec(ftplan plan, Int32 entryoffset, Int32 stackptr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.internalcomplexlintransposeDoubleArrayRefInt32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of ftbase.internalcomplexlintranspose(Double[]&amp; a, Int32 m, Int32 n, Int32 astart, Double[]&amp; buf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.internalreallintransposeDoubleArrayRefInt32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of ftbase.internalreallintranspose(Double[]&amp; a, Int32 m, Int32 n, Int32 astart, Double[]&amp; buf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.reffhtDoubleArrayRefInt32Int32">
            <summary>Sets the shim of ftbase.reffht(Double[]&amp; a, Int32 n, Int32 offs)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimftbase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimftbase.Shimftplan">
            <summary>Shim type of alglib+ftbase+ftplan</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.#ctor(alglib.ftbase.ftplan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.Constructor">
            <summary>Sets the shim of ftplan.ftplan()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimftbase.Shimftplan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgammafunc">
            <summary>Shim type of alglib+gammafunc</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgammafunc.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgammafunc.#ctor(alglib.gammafunc)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgammafunc.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgammafunc.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgammafunc.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgammafunc.Constructor">
            <summary>Sets the shim of gammafunc.gammafunc()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgammafunc.gammafunctionDouble">
            <summary>Sets the shim of gammafunc.gammafunction(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgammafunc.gammastirfDouble">
            <summary>Sets the shim of gammafunc.gammastirf(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgammafunc.lngammaDoubleDoubleRef">
            <summary>Sets the shim of gammafunc.lngamma(Double x, Double&amp; sgngam)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgammafunc.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgkq">
            <summary>Shim type of alglib+gkq</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgkq.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgkq.#ctor(alglib.gkq)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgkq.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgkq.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.Constructor">
            <summary>Sets the shim of gkq.gkq()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.gkqgenerategaussjacobiInt32DoubleDoubleInt32RefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gkq.gkqgenerategaussjacobi(Int32 n, Double alpha, Double beta, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.gkqgenerategausslegendreInt32Int32RefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gkq.gkqgenerategausslegendre(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.gkqgeneraterecDoubleArrayDoubleArrayDoubleInt32Int32RefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gkq.gkqgeneraterec(Double[] alpha, Double[] beta, Double mu0, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.gkqlegendrecalcInt32Int32RefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gkq.gkqlegendrecalc(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgkq.gkqlegendretblInt32DoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleRef">
            <summary>Sets the shim of gkq.gkqlegendretbl(Int32 n, Double[]&amp; x, Double[]&amp; wkronrod, Double[]&amp; wgauss, Double&amp; eps)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgkq.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgq">
            <summary>Shim type of alglib+gq</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgq.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgq.#ctor(alglib.gq)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgq.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimgq.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.Constructor">
            <summary>Sets the shim of gq.gq()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategausshermiteInt32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategausshermite(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategaussjacobiInt32DoubleDoubleInt32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategaussjacobi(Int32 n, Double alpha, Double beta, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategausslaguerreInt32DoubleInt32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategausslaguerre(Int32 n, Double alpha, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategausslegendreInt32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategausslegendre(Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategausslobattorecDoubleArrayDoubleArrayDoubleDoubleDoubleInt32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategausslobattorec(Double[] alpha, Double[] beta, Double mu0, Double a, Double b, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgenerategaussradaurecDoubleArrayDoubleArrayDoubleDoubleInt32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgenerategaussradaurec(Double[] alpha, Double[] beta, Double mu0, Double a, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimgq.gqgeneraterecDoubleArrayDoubleArrayDoubleInt32Int32RefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of gq.gqgeneraterec(Double[] alpha, Double[] beta, Double mu0, Int32 n, Int32&amp; info, Double[]&amp; x, Double[]&amp; w)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimgq.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhblas">
            <summary>Shim type of alglib+hblas</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhblas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhblas.#ctor(alglib.hblas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhblas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhblas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhblas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhblas.Constructor">
            <summary>Sets the shim of hblas.hblas()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhblas.hermitianmatrixvectormultiplyalglibcomplexMdArray2BooleanInt32Int32alglibcomplexArrayalglibcomplexalglibcomplexArrayRef">
            <summary>Sets the shim of hblas.hermitianmatrixvectormultiply(complex[,] a, Boolean isupper, Int32 i1, Int32 i2, complex[] x, complex alpha, complex[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhblas.hermitianrank2updatealglibcomplexMdArray2RefBooleanInt32Int32alglibcomplexArrayalglibcomplexArrayalglibcomplexArrayRefalglibcomplex">
            <summary>Sets the shim of hblas.hermitianrank2update(complex[,]&amp; a, Boolean isupper, Int32 i1, Int32 i2, complex[] x, complex[] y, complex[]&amp; t, complex alpha)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhblas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhermite">
            <summary>Shim type of alglib+hermite</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhermite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhermite.#ctor(alglib.hermite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhermite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhermite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhermite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhermite.Constructor">
            <summary>Sets the shim of hermite.hermite()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhermite.hermitecalculateInt32Double">
            <summary>Sets the shim of hermite.hermitecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhermite.hermitecoefficientsInt32DoubleArrayRef">
            <summary>Sets the shim of hermite.hermitecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhermite.hermitesumDoubleArrayInt32Double">
            <summary>Sets the shim of hermite.hermitesum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhermite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrnd">
            <summary>Shim type of alglib+hqrnd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.#ctor(alglib.hqrnd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.Constructor">
            <summary>Sets the shim of hqrnd.hqrnd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndexponentialhqrndalglibhqrndstateDouble">
            <summary>Sets the shim of hqrnd.hqrndexponential(hqrndstate state, Double lambdav)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndintegerbasehqrndalglibhqrndstate">
            <summary>Sets the shim of hqrnd.hqrndintegerbase(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndnormal2hqrndalglibhqrndstateDoubleRefDoubleRef">
            <summary>Sets the shim of hqrnd.hqrndnormal2(hqrndstate state, Double&amp; x1, Double&amp; x2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndnormalhqrndalglibhqrndstate">
            <summary>Sets the shim of hqrnd.hqrndnormal(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndrandomizehqrndalglibhqrndstate">
            <summary>Sets the shim of hqrnd.hqrndrandomize(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndseedInt32Int32hqrndalglibhqrndstate">
            <summary>Sets the shim of hqrnd.hqrndseed(Int32 s1, Int32 s2, hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrnduniformihqrndalglibhqrndstateInt32">
            <summary>Sets the shim of hqrnd.hqrnduniformi(hqrndstate state, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrnduniformrhqrndalglibhqrndstate">
            <summary>Sets the shim of hqrnd.hqrnduniformr(hqrndstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.hqrndunit2hqrndalglibhqrndstateDoubleRefDoubleRef">
            <summary>Sets the shim of hqrnd.hqrndunit2(hqrndstate state, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate">
            <summary>Shim type of alglib+hqrnd+hqrndstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.#ctor(alglib.hqrnd.hqrndstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.Constructor">
            <summary>Sets the shim of hqrndstate.hqrndstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrnd.Shimhqrndstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrndstate">
            <summary>Shim type of alglib+hqrndstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrndstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrndstate.#ctor(alglib.hqrndstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrndstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhqrndstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrndstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrndstate.Constructor">
            <summary>Sets the shim of hqrndstate.hqrndstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrndstate.Constructorhqrndalglibhqrndstate">
            <summary>Sets the shim of hqrndstate.hqrndstate(hqrndstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrndstate.innerobjGet">
            <summary>Sets the shim of hqrndstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhqrndstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhqrndstate.AllInstances.innerobjGet">
            <summary>Sets the shim of hqrndstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhsschur">
            <summary>Shim type of alglib+hsschur</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhsschur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhsschur.#ctor(alglib.hsschur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhsschur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimhsschur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.Constructor">
            <summary>Sets the shim of hsschur.hsschur()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.aux2x2schurDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of hsschur.aux2x2schur(Double&amp; a, Double&amp; b, Double&amp; c, Double&amp; d, Double&amp; rt1r, Double&amp; rt1i, Double&amp; rt2r, Double&amp; rt2i, Double&amp; cs, Double&amp; sn)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.extschursignDoubleDouble">
            <summary>Sets the shim of hsschur.extschursign(Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.extschursigntooneDouble">
            <summary>Sets the shim of hsschur.extschursigntoone(Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.internalauxschurBooleanBooleanInt32Int32Int32DoubleMdArray2RefDoubleArrayRefDoubleArrayRefInt32Int32DoubleMdArray2RefDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRefInt32Ref">
            <summary>Sets the shim of hsschur.internalauxschur(Boolean wantt, Boolean wantz, Int32 n, Int32 ilo, Int32 ihi, Double[,]&amp; h, Double[]&amp; wr, Double[]&amp; wi, Int32 iloz, Int32 ihiz, Double[,]&amp; z, Double[]&amp; work, Double[]&amp; workv3, Double[]&amp; workc1, Double[]&amp; works1, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.internalschurdecompositionDoubleMdArray2RefInt32Int32Int32DoubleArrayRefDoubleArrayRefDoubleMdArray2RefInt32Ref">
            <summary>Sets the shim of hsschur.internalschurdecomposition(Double[,]&amp; h, Int32 n, Int32 tneeded, Int32 zneeded, Double[]&amp; wr, Double[]&amp; wi, Double[,]&amp; z, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimhsschur.upperhessenbergschurdecompositionDoubleMdArray2RefInt32DoubleMdArray2Ref">
            <summary>Sets the shim of hsschur.upperhessenbergschurdecomposition(Double[,]&amp; h, Int32 n, Double[,]&amp; s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimhsschur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimibetaf">
            <summary>Shim type of alglib+ibetaf</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimibetaf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimibetaf.#ctor(alglib.ibetaf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimibetaf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimibetaf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.Constructor">
            <summary>Sets the shim of ibetaf.ibetaf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.incompletebetaDoubleDoubleDouble">
            <summary>Sets the shim of ibetaf.incompletebeta(Double a, Double b, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.incompletebetafe2DoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of ibetaf.incompletebetafe2(Double a, Double b, Double x, Double big, Double biginv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.incompletebetafeDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of ibetaf.incompletebetafe(Double a, Double b, Double x, Double big, Double biginv)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.incompletebetapsDoubleDoubleDoubleDouble">
            <summary>Sets the shim of ibetaf.incompletebetaps(Double a, Double b, Double x, Double maxgam)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimibetaf.invincompletebetaDoubleDoubleDouble">
            <summary>Sets the shim of ibetaf.invincompletebeta(Double a, Double b, Double y)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimibetaf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwint">
            <summary>Shim type of alglib+idwint</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.#ctor(alglib.idwint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.Constructor">
            <summary>Sets the shim of idwint.idwint()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwbuildmodifiedshepardDoubleMdArray2Int32Int32Int32Int32Int32idwintalglibidwinterpolant">
            <summary>Sets the shim of idwint.idwbuildmodifiedshepard(Double[,] xy, Int32 n, Int32 nx, Int32 d, Int32 nq, Int32 nw, idwinterpolant z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwbuildmodifiedshepardrDoubleMdArray2Int32Int32Doubleidwintalglibidwinterpolant">
            <summary>Sets the shim of idwint.idwbuildmodifiedshepardr(Double[,] xy, Int32 n, Int32 nx, Double r, idwinterpolant z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwbuildnoisyDoubleMdArray2Int32Int32Int32Int32Int32idwintalglibidwinterpolant">
            <summary>Sets the shim of idwint.idwbuildnoisy(Double[,] xy, Int32 n, Int32 nx, Int32 d, Int32 nq, Int32 nw, idwinterpolant z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwcalcidwintalglibidwinterpolantDoubleArray">
            <summary>Sets the shim of idwint.idwcalc(idwinterpolant z, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwcalcqidwintalglibidwinterpolantDoubleArrayInt32">
            <summary>Sets the shim of idwint.idwcalcq(idwinterpolant z, Double[] x, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwinit1Int32Int32Int32Int32Int32idwintalglibidwinterpolant">
            <summary>Sets the shim of idwint.idwinit1(Int32 n, Int32 nx, Int32 d, Int32 nq, Int32 nw, idwinterpolant z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.idwinternalsolverDoubleArrayRefDoubleArrayRefDoubleMdArray2RefDoubleArrayRefInt32Int32Int32RefDoubleArrayRefDoubleRef">
            <summary>Sets the shim of idwint.idwinternalsolver(Double[]&amp; y, Double[]&amp; w, Double[,]&amp; fmatrix, Double[]&amp; temp, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; x, Double&amp; taskrcond)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant">
            <summary>Shim type of alglib+idwint+idwinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.#ctor(alglib.idwint.idwinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.Constructor">
            <summary>Sets the shim of idwinterpolant.idwinterpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwint.Shimidwinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwinterpolant">
            <summary>Shim type of alglib+idwinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwinterpolant.#ctor(alglib.idwinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimidwinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwinterpolant.Constructor">
            <summary>Sets the shim of idwinterpolant.idwinterpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwinterpolant.Constructoridwintalglibidwinterpolant">
            <summary>Sets the shim of idwinterpolant.idwinterpolant(idwinterpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwinterpolant.innerobjGet">
            <summary>Sets the shim of idwinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimidwinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimidwinterpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of idwinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimigammaf">
            <summary>Shim type of alglib+igammaf</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimigammaf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimigammaf.#ctor(alglib.igammaf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimigammaf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimigammaf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimigammaf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimigammaf.Constructor">
            <summary>Sets the shim of igammaf.igammaf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimigammaf.incompletegammaDoubleDouble">
            <summary>Sets the shim of igammaf.incompletegamma(Double a, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimigammaf.incompletegammacDoubleDouble">
            <summary>Sets the shim of igammaf.incompletegammac(Double a, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimigammaf.invincompletegammacDoubleDouble">
            <summary>Sets the shim of igammaf.invincompletegammac(Double a, Double y0)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimigammaf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shiminverseupdate">
            <summary>Shim type of alglib+inverseupdate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shiminverseupdate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shiminverseupdate.#ctor(alglib.inverseupdate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shiminverseupdate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shiminverseupdate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.Constructor">
            <summary>Sets the shim of inverseupdate.inverseupdate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.rmatrixinvupdatecolumnDoubleMdArray2RefInt32Int32DoubleArray">
            <summary>Sets the shim of inverseupdate.rmatrixinvupdatecolumn(Double[,]&amp; inva, Int32 n, Int32 updcolumn, Double[] u)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.rmatrixinvupdaterowDoubleMdArray2RefInt32Int32DoubleArray">
            <summary>Sets the shim of inverseupdate.rmatrixinvupdaterow(Double[,]&amp; inva, Int32 n, Int32 updrow, Double[] v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.rmatrixinvupdatesimpleDoubleMdArray2RefInt32Int32Int32Double">
            <summary>Sets the shim of inverseupdate.rmatrixinvupdatesimple(Double[,]&amp; inva, Int32 n, Int32 updrow, Int32 updcolumn, Double updval)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shiminverseupdate.rmatrixinvupdateuvDoubleMdArray2RefInt32DoubleArrayDoubleArray">
            <summary>Sets the shim of inverseupdate.rmatrixinvupdateuv(Double[,]&amp; inva, Int32 n, Double[] u, Double[] v)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shiminverseupdate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimjacobianelliptic">
            <summary>Shim type of alglib+jacobianelliptic</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjacobianelliptic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjacobianelliptic.#ctor(alglib.jacobianelliptic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjacobianelliptic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjacobianelliptic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjacobianelliptic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjacobianelliptic.Constructor">
            <summary>Sets the shim of jacobianelliptic.jacobianelliptic()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjacobianelliptic.jacobianellipticfunctionsDoubleDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of jacobianelliptic.jacobianellipticfunctions(Double u, Double m, Double&amp; sn, Double&amp; cn, Double&amp; dn, Double&amp; ph)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimjacobianelliptic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimjarquebera">
            <summary>Shim type of alglib+jarquebera</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjarquebera.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjarquebera.#ctor(alglib.jarquebera)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjarquebera.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimjarquebera.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.Constructor">
            <summary>Sets the shim of jarquebera.jarquebera()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jarqueberaapproxInt32Double">
            <summary>Sets the shim of jarquebera.jarqueberaapprox(Int32 n, Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jarqueberastatisticDoubleArrayInt32DoubleRef">
            <summary>Sets the shim of jarquebera.jarqueberastatistic(Double[] x, Int32 n, Double&amp; s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jarqueberatestDoubleArrayInt32DoubleRef">
            <summary>Sets the shim of jarquebera.jarqueberatest(Double[] x, Int32 n, Double&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbchebDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of jarquebera.jbcheb(Double x, Double c, Double&amp; tj, Double&amp; tj1, Double&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl100Double">
            <summary>Sets the shim of jarquebera.jbtbl100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl10Double">
            <summary>Sets the shim of jarquebera.jbtbl10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl11Double">
            <summary>Sets the shim of jarquebera.jbtbl11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl12Double">
            <summary>Sets the shim of jarquebera.jbtbl12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl130Double">
            <summary>Sets the shim of jarquebera.jbtbl130(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl13Double">
            <summary>Sets the shim of jarquebera.jbtbl13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl1401Double">
            <summary>Sets the shim of jarquebera.jbtbl1401(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl14Double">
            <summary>Sets the shim of jarquebera.jbtbl14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl15Double">
            <summary>Sets the shim of jarquebera.jbtbl15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl16Double">
            <summary>Sets the shim of jarquebera.jbtbl16(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl17Double">
            <summary>Sets the shim of jarquebera.jbtbl17(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl18Double">
            <summary>Sets the shim of jarquebera.jbtbl18(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl19Double">
            <summary>Sets the shim of jarquebera.jbtbl19(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl200Double">
            <summary>Sets the shim of jarquebera.jbtbl200(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl20Double">
            <summary>Sets the shim of jarquebera.jbtbl20(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl301Double">
            <summary>Sets the shim of jarquebera.jbtbl301(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl30Double">
            <summary>Sets the shim of jarquebera.jbtbl30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl501Double">
            <summary>Sets the shim of jarquebera.jbtbl501(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl50Double">
            <summary>Sets the shim of jarquebera.jbtbl50(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl5Double">
            <summary>Sets the shim of jarquebera.jbtbl5(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl65Double">
            <summary>Sets the shim of jarquebera.jbtbl65(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl6Double">
            <summary>Sets the shim of jarquebera.jbtbl6(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl701Double">
            <summary>Sets the shim of jarquebera.jbtbl701(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl7Double">
            <summary>Sets the shim of jarquebera.jbtbl7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl8Double">
            <summary>Sets the shim of jarquebera.jbtbl8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimjarquebera.jbtbl9Double">
            <summary>Sets the shim of jarquebera.jbtbl9(Double s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimjarquebera.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimkdtree">
            <summary>Shim type of alglib+kdtree</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkdtree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkdtree.#ctor(alglib.kdtree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkdtree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkdtree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkdtree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkdtree.Constructor">
            <summary>Sets the shim of kdtree.kdtree()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkdtree.Constructornearestneighboralglibkdtree">
            <summary>Sets the shim of kdtree.kdtree(kdtree obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkdtree.innerobjGet">
            <summary>Sets the shim of kdtree.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimkdtree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkdtree.AllInstances.innerobjGet">
            <summary>Sets the shim of kdtree.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimkmeans">
            <summary>Shim type of alglib+kmeans</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkmeans.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkmeans.#ctor(alglib.kmeans)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkmeans.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimkmeans.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkmeans.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkmeans.Constructor">
            <summary>Sets the shim of kmeans.kmeans()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkmeans.kmeansgenerateDoubleMdArray2Int32Int32Int32Int32Int32RefDoubleMdArray2RefInt32ArrayRef">
            <summary>Sets the shim of kmeans.kmeansgenerate(Double[,] xy, Int32 npoints, Int32 nvars, Int32 k, Int32 restarts, Int32&amp; info, Double[,]&amp; c, Int32[]&amp; xyc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimkmeans.selectcenterppDoubleMdArray2Int32Int32DoubleMdArray2RefBooleanArrayInt32DoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of kmeans.selectcenterpp(Double[,] xy, Int32 npoints, Int32 nvars, Double[,]&amp; centers, Boolean[] busycenters, Int32 ccnt, Double[]&amp; d2, Double[]&amp; p, Double[]&amp; tmp)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimkmeans.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlaguerre">
            <summary>Shim type of alglib+laguerre</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlaguerre.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlaguerre.#ctor(alglib.laguerre)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlaguerre.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlaguerre.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlaguerre.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlaguerre.Constructor">
            <summary>Sets the shim of laguerre.laguerre()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlaguerre.laguerrecalculateInt32Double">
            <summary>Sets the shim of laguerre.laguerrecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlaguerre.laguerrecoefficientsInt32DoubleArrayRef">
            <summary>Sets the shim of laguerre.laguerrecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlaguerre.laguerresumDoubleArrayInt32Double">
            <summary>Sets the shim of laguerre.laguerresum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlaguerre.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlda">
            <summary>Shim type of alglib+lda</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlda.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlda.#ctor(alglib.lda)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlda.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlda.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlda.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlda.Constructor">
            <summary>Sets the shim of lda.lda()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlda.fisherldaDoubleMdArray2Int32Int32Int32Int32RefDoubleArrayRef">
            <summary>Sets the shim of lda.fisherlda(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, Double[]&amp; w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlda.fisherldanDoubleMdArray2Int32Int32Int32Int32RefDoubleMdArray2Ref">
            <summary>Sets the shim of lda.fisherldan(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, Double[,]&amp; w)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlda.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlegendre">
            <summary>Shim type of alglib+legendre</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlegendre.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlegendre.#ctor(alglib.legendre)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlegendre.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlegendre.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlegendre.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlegendre.Constructor">
            <summary>Sets the shim of legendre.legendre()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlegendre.legendrecalculateInt32Double">
            <summary>Sets the shim of legendre.legendrecalculate(Int32 n, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlegendre.legendrecoefficientsInt32DoubleArrayRef">
            <summary>Sets the shim of legendre.legendrecoefficients(Int32 n, Double[]&amp; c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlegendre.legendresumDoubleArrayInt32Double">
            <summary>Sets the shim of legendre.legendresum(Double[] c, Int32 n, Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlegendre.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinearmodel">
            <summary>Shim type of alglib+linearmodel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinearmodel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinearmodel.#ctor(alglib.linearmodel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinearmodel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinearmodel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinearmodel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinearmodel.Constructor">
            <summary>Sets the shim of linearmodel.linearmodel()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinearmodel.Constructorlinregalgliblinearmodel">
            <summary>Sets the shim of linearmodel.linearmodel(linearmodel obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinearmodel.innerobjGet">
            <summary>Sets the shim of linearmodel.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinearmodel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinearmodel.AllInstances.innerobjGet">
            <summary>Sets the shim of linearmodel.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin">
            <summary>Shim type of alglib+linmin</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.#ctor(alglib.linmin)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Constructor">
            <summary>Sets the shim of linmin.linmin()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.armijocreateInt32DoubleArrayDoubleDoubleArrayDoubleDoubleInt32linminalglibarmijostate">
            <summary>Sets the shim of linmin.armijocreate(Int32 n, Double[] x, Double f, Double[] s, Double stp, Double stpmax, Int32 fmax, armijostate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.armijoiterationlinminalglibarmijostate">
            <summary>Sets the shim of linmin.armijoiteration(armijostate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.armijoresultslinminalglibarmijostateInt32RefDoubleRefDoubleRef">
            <summary>Sets the shim of linmin.armijoresults(armijostate state, Int32&amp; info, Double&amp; stp, Double&amp; f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.linminnormalizedDoubleArrayRefDoubleRefInt32">
            <summary>Sets the shim of linmin.linminnormalized(Double[]&amp; d, Double&amp; stp, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.mcsrchInt32DoubleArrayRefDoubleRefDoubleArrayRefDoubleArrayDoubleRefDoubleDoubleInt32RefInt32RefDoubleArrayReflinminalgliblinminstateInt32Ref">
            <summary>Sets the shim of linmin.mcsrch(Int32 n, Double[]&amp; x, Double&amp; f, Double[]&amp; g, Double[] s, Double&amp; stp, Double stpmax, Double gtol, Int32&amp; info, Int32&amp; nfev, Double[]&amp; wa, linminstate state, Int32&amp; stage)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.mcstepDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleDoubleBooleanRefDoubleDoubleInt32Ref">
            <summary>Sets the shim of linmin.mcstep(Double&amp; stx, Double&amp; fx, Double&amp; dx, Double&amp; sty, Double&amp; fy, Double&amp; dy, Double&amp; stp, Double fp, Double dp, Boolean&amp; brackt, Double stmin, Double stmax, Int32&amp; info)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate">
            <summary>Shim type of alglib+linmin+armijostate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.#ctor(alglib.linmin.armijostate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.Constructor">
            <summary>Sets the shim of armijostate.armijostate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin.Shimarmijostate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate">
            <summary>Shim type of alglib+linmin+linminstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.#ctor(alglib.linmin.linminstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.Constructor">
            <summary>Sets the shim of linminstate.linminstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinmin.Shimlinminstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg">
            <summary>Shim type of alglib+linreg</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.#ctor(alglib.linreg)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Constructor">
            <summary>Sets the shim of linreg.linreg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lravgerrorlinregalgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of linreg.lravgerror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lravgrelerrorlinregalgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of linreg.lravgrelerror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrbuildDoubleMdArray2Int32Int32Int32Reflinregalgliblinearmodellinregalgliblrreport">
            <summary>Sets the shim of linreg.lrbuild(Double[,] xy, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel lm, lrreport ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrbuildsDoubleMdArray2DoubleArrayInt32Int32Int32Reflinregalgliblinearmodellinregalgliblrreport">
            <summary>Sets the shim of linreg.lrbuilds(Double[,] xy, Double[] s, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel lm, lrreport ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrbuildzDoubleMdArray2Int32Int32Int32Reflinregalgliblinearmodellinregalgliblrreport">
            <summary>Sets the shim of linreg.lrbuildz(Double[,] xy, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel lm, lrreport ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrbuildzsDoubleMdArray2DoubleArrayInt32Int32Int32Reflinregalgliblinearmodellinregalgliblrreport">
            <summary>Sets the shim of linreg.lrbuildzs(Double[,] xy, Double[] s, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel lm, lrreport ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrcopylinregalgliblinearmodellinregalgliblinearmodel">
            <summary>Sets the shim of linreg.lrcopy(linearmodel lm1, linearmodel lm2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrinternalDoubleMdArray2DoubleArrayInt32Int32Int32Reflinregalgliblinearmodellinregalgliblrreport">
            <summary>Sets the shim of linreg.lrinternal(Double[,] xy, Double[] s, Int32 npoints, Int32 nvars, Int32&amp; info, linearmodel lm, lrreport ar)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrlineDoubleMdArray2Int32Int32RefDoubleRefDoubleRef">
            <summary>Sets the shim of linreg.lrline(Double[,] xy, Int32 n, Int32&amp; info, Double&amp; a, Double&amp; b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrlinesDoubleMdArray2DoubleArrayInt32Int32RefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of linreg.lrlines(Double[,] xy, Double[] s, Int32 n, Int32&amp; info, Double&amp; a, Double&amp; b, Double&amp; vara, Double&amp; varb, Double&amp; covab, Double&amp; corrab, Double&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrpackDoubleArrayInt32linregalgliblinearmodel">
            <summary>Sets the shim of linreg.lrpack(Double[] v, Int32 nvars, linearmodel lm)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrprocesslinregalgliblinearmodelDoubleArray">
            <summary>Sets the shim of linreg.lrprocess(linearmodel lm, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrrmserrorlinregalgliblinearmodelDoubleMdArray2Int32">
            <summary>Sets the shim of linreg.lrrmserror(linearmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.lrunpacklinregalgliblinearmodelDoubleArrayRefInt32Ref">
            <summary>Sets the shim of linreg.lrunpack(linearmodel lm, Double[]&amp; v, Int32&amp; nvars)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel">
            <summary>Shim type of alglib+linreg+linearmodel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.#ctor(alglib.linreg.linearmodel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.Constructor">
            <summary>Sets the shim of linearmodel.linearmodel()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg.Shimlinearmodel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport">
            <summary>Shim type of alglib+linreg+lrreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.#ctor(alglib.linreg.lrreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.Constructor">
            <summary>Sets the shim of lrreport.lrreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlinreg.Shimlrreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit">
            <summary>Shim type of alglib+logit</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.#ctor(alglib.logit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Constructor">
            <summary>Sets the shim of logit.logit()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlallerrorslogitalgliblogitmodelDoubleMdArray2Int32DoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of logit.mnlallerrors(logitmodel lm, Double[,] xy, Int32 npoints, Double&amp; relcls, Double&amp; avgce, Double&amp; rms, Double&amp; avg, Double&amp; avgrel)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlavgcelogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlavgce(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlavgerrorlogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlavgerror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlavgrelerrorlogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlavgrelerror(logitmodel lm, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlclserrorlogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlclserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlcopylogitalgliblogitmodellogitalgliblogitmodel">
            <summary>Sets the shim of logit.mnlcopy(logitmodel lm1, logitmodel lm2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnliexpDoubleArrayRefDoubleArray">
            <summary>Sets the shim of logit.mnliexp(Double[]&amp; w, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlmcsrchInt32DoubleArrayRefDoubleRefDoubleArrayRefDoubleArrayDoubleRefInt32RefInt32RefDoubleArrayReflogitalgliblogitmcstateInt32Ref">
            <summary>Sets the shim of logit.mnlmcsrch(Int32 n, Double[]&amp; x, Double&amp; f, Double[]&amp; g, Double[] s, Double&amp; stp, Int32&amp; info, Int32&amp; nfev, Double[]&amp; wa, logitmcstate state, Int32&amp; stage)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlmcstepDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleDoubleBooleanRefDoubleDoubleInt32Ref">
            <summary>Sets the shim of logit.mnlmcstep(Double&amp; stx, Double&amp; fx, Double&amp; dx, Double&amp; sty, Double&amp; fy, Double&amp; dy, Double&amp; stp, Double fp, Double dp, Boolean&amp; brackt, Double stmin, Double stmax, Int32&amp; info)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlpackDoubleMdArray2Int32Int32logitalgliblogitmodel">
            <summary>Sets the shim of logit.mnlpack(Double[,] a, Int32 nvars, Int32 nclasses, logitmodel lm)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlprocessilogitalgliblogitmodelDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of logit.mnlprocessi(logitmodel lm, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlprocesslogitalgliblogitmodelDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of logit.mnlprocess(logitmodel lm, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlrelclserrorlogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlrelclserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlrmserrorlogitalgliblogitmodelDoubleMdArray2Int32">
            <summary>Sets the shim of logit.mnlrmserror(logitmodel lm, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnltrainhDoubleMdArray2Int32Int32Int32Int32Reflogitalgliblogitmodellogitalglibmnlreport">
            <summary>Sets the shim of logit.mnltrainh(Double[,] xy, Int32 npoints, Int32 nvars, Int32 nclasses, Int32&amp; info, logitmodel lm, mnlreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.mnlunpacklogitalgliblogitmodelDoubleMdArray2RefInt32RefInt32Ref">
            <summary>Sets the shim of logit.mnlunpack(logitmodel lm, Double[,]&amp; a, Int32&amp; nvars, Int32&amp; nclasses)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate">
            <summary>Shim type of alglib+logit+logitmcstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.#ctor(alglib.logit.logitmcstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.Constructor">
            <summary>Sets the shim of logitmcstate.logitmcstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmcstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel">
            <summary>Shim type of alglib+logit+logitmodel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.#ctor(alglib.logit.logitmodel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.Constructor">
            <summary>Sets the shim of logitmodel.logitmodel()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimlogitmodel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport">
            <summary>Shim type of alglib+logit+mnlreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.#ctor(alglib.logit.mnlreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.Constructor">
            <summary>Sets the shim of mnlreport.mnlreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogit.Shimmnlreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogitmodel">
            <summary>Shim type of alglib+logitmodel</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogitmodel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogitmodel.#ctor(alglib.logitmodel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogitmodel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlogitmodel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogitmodel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogitmodel.Constructor">
            <summary>Sets the shim of logitmodel.logitmodel()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogitmodel.Constructorlogitalgliblogitmodel">
            <summary>Sets the shim of logitmodel.logitmodel(logitmodel obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogitmodel.innerobjGet">
            <summary>Sets the shim of logitmodel.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlogitmodel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlogitmodel.AllInstances.innerobjGet">
            <summary>Sets the shim of logitmodel.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlrreport">
            <summary>Shim type of alglib+lrreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlrreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlrreport.#ctor(alglib.lrreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlrreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlrreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.Constructor">
            <summary>Sets the shim of lrreport.lrreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.Constructorlinregalgliblrreport">
            <summary>Sets the shim of lrreport.lrreport(lrreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.avgerrorGet">
            <summary>Sets the shim of lrreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.avgerrorSetDouble">
            <summary>Sets the shim of lrreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.avgrelerrorGet">
            <summary>Sets the shim of lrreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.avgrelerrorSetDouble">
            <summary>Sets the shim of lrreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cGet">
            <summary>Sets the shim of lrreport.get_c()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cSetDoubleMdArray2">
            <summary>Sets the shim of lrreport.set_c(Double[,] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvavgerrorGet">
            <summary>Sets the shim of lrreport.get_cvavgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvavgerrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvavgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvavgrelerrorGet">
            <summary>Sets the shim of lrreport.get_cvavgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvavgrelerrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvavgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvdefectsGet">
            <summary>Sets the shim of lrreport.get_cvdefects()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvdefectsSetInt32Array">
            <summary>Sets the shim of lrreport.set_cvdefects(Int32[] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvrmserrorGet">
            <summary>Sets the shim of lrreport.get_cvrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.cvrmserrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvrmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.innerobjGet">
            <summary>Sets the shim of lrreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.ncvdefectsGet">
            <summary>Sets the shim of lrreport.get_ncvdefects()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.ncvdefectsSetInt32">
            <summary>Sets the shim of lrreport.set_ncvdefects(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.rmserrorGet">
            <summary>Sets the shim of lrreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.rmserrorSetDouble">
            <summary>Sets the shim of lrreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlrreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of lrreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of lrreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of lrreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of lrreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cGet">
            <summary>Sets the shim of lrreport.get_c()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cSetDoubleMdArray2">
            <summary>Sets the shim of lrreport.set_c(Double[,] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvavgerrorGet">
            <summary>Sets the shim of lrreport.get_cvavgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvavgerrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvavgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvavgrelerrorGet">
            <summary>Sets the shim of lrreport.get_cvavgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvavgrelerrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvavgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvdefectsGet">
            <summary>Sets the shim of lrreport.get_cvdefects()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvdefectsSetInt32Array">
            <summary>Sets the shim of lrreport.set_cvdefects(Int32[] value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvrmserrorGet">
            <summary>Sets the shim of lrreport.get_cvrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.cvrmserrorSetDouble">
            <summary>Sets the shim of lrreport.set_cvrmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.innerobjGet">
            <summary>Sets the shim of lrreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.ncvdefectsGet">
            <summary>Sets the shim of lrreport.get_ncvdefects()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.ncvdefectsSetInt32">
            <summary>Sets the shim of lrreport.set_ncvdefects(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of lrreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlrreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of lrreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit">
            <summary>Shim type of alglib+lsfit</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.#ctor(alglib.lsfit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Constructor">
            <summary>Sets the shim of lsfit.lsfit()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.barycentriccalcbasisratintalglibbarycentricinterpolantDoubleDoubleArrayRef">
            <summary>Sets the shim of lsfit.barycentriccalcbasis(barycentricinterpolant b, Double t, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.barycentricfitfloaterhormannDoubleArrayDoubleArrayInt32Int32Int32Refratintalglibbarycentricinterpolantlsfitalglibbarycentricfitreport">
            <summary>Sets the shim of lsfit.barycentricfitfloaterhormann(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, barycentricinterpolant b, barycentricfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.barycentricfitfloaterhormannwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Refratintalglibbarycentricinterpolantlsfitalglibbarycentricfitreport">
            <summary>Sets the shim of lsfit.barycentricfitfloaterhormannwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, barycentricinterpolant b, barycentricfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.barycentricfitwcfixeddDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Int32Refratintalglibbarycentricinterpolantlsfitalglibbarycentricfitreport">
            <summary>Sets the shim of lsfit.barycentricfitwcfixedd(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32 d, Int32&amp; info, barycentricinterpolant b, barycentricfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.internalchebyshevfitDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.internalchebyshevfit(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitclearrequestfieldslsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitclearrequestfields(lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatefDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32Doublelsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatef(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, Double diffstep, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatefgDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32Booleanlsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatefg(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, Boolean cheapfg, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatefghDoubleMdArray2DoubleArrayDoubleArrayInt32Int32Int32lsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatefgh(Double[,] x, Double[] y, Double[] c, Int32 n, Int32 m, Int32 k, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatewfDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32Doublelsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatewf(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, Double diffstep, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatewfgDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32Booleanlsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatewfg(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, Boolean cheapfg, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitcreatewfghDoubleMdArray2DoubleArrayDoubleArrayDoubleArrayInt32Int32Int32lsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfitcreatewfgh(Double[,] x, Double[] y, Double[] w, Double[] c, Int32 n, Int32 m, Int32 k, lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfititerationlsfitalgliblsfitstate">
            <summary>Sets the shim of lsfit.lsfititeration(lsfitstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitlinearDoubleArrayDoubleMdArray2Int32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitlinear(Double[] y, Double[,] fmatrix, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitlinearcDoubleArrayDoubleMdArray2DoubleMdArray2Int32Int32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitlinearc(Double[] y, Double[,] fmatrix, Double[,] cmatrix, Int32 n, Int32 m, Int32 k, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitlinearinternalDoubleArrayDoubleArrayDoubleMdArray2Int32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitlinearinternal(Double[] y, Double[] w, Double[,] fmatrix, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitlinearwDoubleArrayDoubleArrayDoubleMdArray2Int32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitlinearw(Double[] y, Double[] w, Double[,] fmatrix, Int32 n, Int32 m, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitlinearwcDoubleArrayDoubleArrayDoubleMdArray2DoubleMdArray2Int32Int32Int32Int32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitlinearwc(Double[] y, Double[] w, Double[,] fmatrix, Double[,] cmatrix, Int32 n, Int32 m, Int32 k, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitresultslsfitalgliblsfitstateInt32RefDoubleArrayReflsfitalgliblsfitreport">
            <summary>Sets the shim of lsfit.lsfitresults(lsfitstate state, Int32&amp; info, Double[]&amp; c, lsfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitscalexyDoubleArrayRefDoubleArrayRefDoubleArrayRefInt32DoubleArrayRefDoubleArrayRefInt32ArrayInt32DoubleRefDoubleRefDoubleRefDoubleRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of lsfit.lsfitscalexy(Double[]&amp; x, Double[]&amp; y, Double[]&amp; w, Int32 n, Double[]&amp; xc, Double[]&amp; yc, Int32[] dc, Int32 k, Double&amp; xa, Double&amp; xb, Double&amp; sa, Double&amp; sb, Double[]&amp; xoriginal, Double[]&amp; yoriginal)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitsetbclsfitalgliblsfitstateDoubleArrayDoubleArray">
            <summary>Sets the shim of lsfit.lsfitsetbc(lsfitstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitsetcondlsfitalgliblsfitstateDoubleDoubleInt32">
            <summary>Sets the shim of lsfit.lsfitsetcond(lsfitstate state, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitsetscalelsfitalgliblsfitstateDoubleArray">
            <summary>Sets the shim of lsfit.lsfitsetscale(lsfitstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitsetstpmaxlsfitalgliblsfitstateDouble">
            <summary>Sets the shim of lsfit.lsfitsetstpmax(lsfitstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.lsfitsetxreplsfitalgliblsfitstateBoolean">
            <summary>Sets the shim of lsfit.lsfitsetxrep(lsfitstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.polynomialfitDoubleArrayDoubleArrayInt32Int32Int32Refratintalglibbarycentricinterpolantlsfitalglibpolynomialfitreport">
            <summary>Sets the shim of lsfit.polynomialfit(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, barycentricinterpolant p, polynomialfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.polynomialfitwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Refratintalglibbarycentricinterpolantlsfitalglibpolynomialfitreport">
            <summary>Sets the shim of lsfit.polynomialfitwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, barycentricinterpolant p, polynomialfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfitcubicDoubleArrayDoubleArrayInt32Int32Int32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfitcubic(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfitcubicwcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfitcubicwc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfithermiteDoubleArrayDoubleArrayInt32Int32Int32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfithermite(Double[] x, Double[] y, Int32 n, Int32 m, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfithermitewcDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfithermitewc(Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfitinternalInt32DoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayDoubleArrayInt32ArrayInt32Int32Int32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfitinternal(Int32 st, Double[] x, Double[] y, Double[] w, Int32 n, Double[] xc, Double[] yc, Int32[] dc, Int32 k, Int32 m, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfitpenalizedDoubleArrayDoubleArrayInt32Int32DoubleInt32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfitpenalized(Double[] x, Double[] y, Int32 n, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.spline1dfitpenalizedwDoubleArrayDoubleArrayDoubleArrayInt32Int32DoubleInt32Refspline1dalglibspline1dinterpolantlsfitalglibspline1dfitreport">
            <summary>Sets the shim of lsfit.spline1dfitpenalizedw(Double[] x, Double[] y, Double[] w, Int32 n, Int32 m, Double rho, Int32&amp; info, spline1dinterpolant s, spline1dfitreport rep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport">
            <summary>Shim type of alglib+lsfit+barycentricfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.#ctor(alglib.lsfit.barycentricfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.Constructor">
            <summary>Sets the shim of barycentricfitreport.barycentricfitreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimbarycentricfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport">
            <summary>Shim type of alglib+lsfit+lsfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.#ctor(alglib.lsfit.lsfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.Constructor">
            <summary>Sets the shim of lsfitreport.lsfitreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate">
            <summary>Shim type of alglib+lsfit+lsfitstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.#ctor(alglib.lsfit.lsfitstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.Constructor">
            <summary>Sets the shim of lsfitstate.lsfitstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimlsfitstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport">
            <summary>Shim type of alglib+lsfit+polynomialfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.#ctor(alglib.lsfit.polynomialfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.Constructor">
            <summary>Sets the shim of polynomialfitreport.polynomialfitreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimpolynomialfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport">
            <summary>Shim type of alglib+lsfit+spline1dfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.#ctor(alglib.lsfit.spline1dfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.Constructor">
            <summary>Sets the shim of spline1dfitreport.spline1dfitreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfit.Shimspline1dfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfitreport">
            <summary>Shim type of alglib+lsfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitreport.#ctor(alglib.lsfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.Constructor">
            <summary>Sets the shim of lsfitreport.lsfitreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.Constructorlsfitalgliblsfitreport">
            <summary>Sets the shim of lsfitreport.lsfitreport(lsfitreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.avgerrorGet">
            <summary>Sets the shim of lsfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.avgerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.avgrelerrorGet">
            <summary>Sets the shim of lsfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.avgrelerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.innerobjGet">
            <summary>Sets the shim of lsfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.iterationscountGet">
            <summary>Sets the shim of lsfitreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.iterationscountSetInt32">
            <summary>Sets the shim of lsfitreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.maxerrorGet">
            <summary>Sets the shim of lsfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.maxerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.rmserrorGet">
            <summary>Sets the shim of lsfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.rmserrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.taskrcondGet">
            <summary>Sets the shim of lsfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.taskrcondSetDouble">
            <summary>Sets the shim of lsfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.wrmserrorGet">
            <summary>Sets the shim of lsfitreport.get_wrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.wrmserrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_wrmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of lsfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of lsfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.innerobjGet">
            <summary>Sets the shim of lsfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.iterationscountGet">
            <summary>Sets the shim of lsfitreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of lsfitreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.maxerrorGet">
            <summary>Sets the shim of lsfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.maxerrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of lsfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.taskrcondGet">
            <summary>Sets the shim of lsfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.taskrcondSetDouble">
            <summary>Sets the shim of lsfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.wrmserrorGet">
            <summary>Sets the shim of lsfitreport.get_wrmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitreport.AllInstances.wrmserrorSetDouble">
            <summary>Sets the shim of lsfitreport.set_wrmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfitstate">
            <summary>Shim type of alglib+lsfitstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitstate.#ctor(alglib.lsfitstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimlsfitstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.Constructor">
            <summary>Sets the shim of lsfitstate.lsfitstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.Constructorlsfitalgliblsfitstate">
            <summary>Sets the shim of lsfitstate.lsfitstate(lsfitstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.cGet">
            <summary>Sets the shim of lsfitstate.get_c()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.fGet">
            <summary>Sets the shim of lsfitstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.fSetDouble">
            <summary>Sets the shim of lsfitstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.gGet">
            <summary>Sets the shim of lsfitstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.hGet">
            <summary>Sets the shim of lsfitstate.get_h()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.innerobjGet">
            <summary>Sets the shim of lsfitstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfGet">
            <summary>Sets the shim of lsfitstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfgGet">
            <summary>Sets the shim of lsfitstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfgSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfghGet">
            <summary>Sets the shim of lsfitstate.get_needfgh()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.needfghSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needfgh(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.xGet">
            <summary>Sets the shim of lsfitstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.xupdatedGet">
            <summary>Sets the shim of lsfitstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.xupdatedSetBoolean">
            <summary>Sets the shim of lsfitstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.cGet">
            <summary>Sets the shim of lsfitstate.get_c()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.fGet">
            <summary>Sets the shim of lsfitstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.fSetDouble">
            <summary>Sets the shim of lsfitstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.gGet">
            <summary>Sets the shim of lsfitstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.hGet">
            <summary>Sets the shim of lsfitstate.get_h()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.innerobjGet">
            <summary>Sets the shim of lsfitstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfGet">
            <summary>Sets the shim of lsfitstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfgGet">
            <summary>Sets the shim of lsfitstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfghGet">
            <summary>Sets the shim of lsfitstate.get_needfgh()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.needfghSetBoolean">
            <summary>Sets the shim of lsfitstate.set_needfgh(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.xGet">
            <summary>Sets the shim of lsfitstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of lsfitstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimlsfitstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of lsfitstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmannwhitneyu">
            <summary>Shim type of alglib+mannwhitneyu</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmannwhitneyu.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmannwhitneyu.#ctor(alglib.mannwhitneyu)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmannwhitneyu.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmannwhitneyu.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.Constructor">
            <summary>Sets the shim of mannwhitneyu.mannwhitneyu()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.mannwhitneyutestDoubleArrayInt32DoubleArrayInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of mannwhitneyu.mannwhitneyutest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.uchebDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of mannwhitneyu.ucheb(Double x, Double c, Double&amp; tj, Double&amp; tj1, Double&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.uninterpolateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of mannwhitneyu.uninterpolate(Double p1, Double p2, Double p3, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma000Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma000(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma075Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma075(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma150Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma150(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma225Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma225(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma300Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma300(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma333Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma333(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma367Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma367(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigma400Int32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma400(Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.usigmaDoubleInt32Int32">
            <summary>Sets the shim of mannwhitneyu.usigma(Double s, Int32 n1, Int32 n2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln10n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln10n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln11n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln11n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln12n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln12n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln13n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln13n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln13n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln13n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln13n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln13n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln13n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln13n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln13n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln13n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln14n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln14n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln14n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln14n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln14n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln14n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln14n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln14n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n16Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n16(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n17Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n17(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n18Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n18(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n19Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n19(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n20Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n20(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n21Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n21(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n22Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n22(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n23Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n23(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n24Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n24(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n25Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n25(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n26Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n26(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n27Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n27(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n28Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n28(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n29Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n29(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n5Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n5(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n6Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n6(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n7Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n8Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln5n9Double">
            <summary>Sets the shim of mannwhitneyu.utbln5n9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n6Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n6(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n7Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n8Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln6n9Double">
            <summary>Sets the shim of mannwhitneyu.utbln6n9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n7Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n8Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln7n9Double">
            <summary>Sets the shim of mannwhitneyu.utbln7n9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n8Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln8n9Double">
            <summary>Sets the shim of mannwhitneyu.utbln8n9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n100Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n100(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n10Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n11Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n12Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n13Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n14Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n15Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n30Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmannwhitneyu.utbln9n9Double">
            <summary>Sets the shim of mannwhitneyu.utbln9n9(Double s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmannwhitneyu.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatdet">
            <summary>Shim type of alglib+matdet</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatdet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatdet.#ctor(alglib.matdet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatdet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatdet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.Constructor">
            <summary>Sets the shim of matdet.matdet()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.cmatrixdetalglibcomplexMdArray2Int32">
            <summary>Sets the shim of matdet.cmatrixdet(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.cmatrixludetalglibcomplexMdArray2Int32ArrayInt32">
            <summary>Sets the shim of matdet.cmatrixludet(complex[,] a, Int32[] pivots, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.rmatrixdetDoubleMdArray2Int32">
            <summary>Sets the shim of matdet.rmatrixdet(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.rmatrixludetDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of matdet.rmatrixludet(Double[,] a, Int32[] pivots, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.spdmatrixcholeskydetDoubleMdArray2Int32">
            <summary>Sets the shim of matdet.spdmatrixcholeskydet(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatdet.spdmatrixdetDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of matdet.spdmatrixdet(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatdet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatgen">
            <summary>Shim type of alglib+matgen</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatgen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatgen.#ctor(alglib.matgen)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatgen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatgen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.Constructor">
            <summary>Sets the shim of matgen.matgen()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.cmatrixrndcondInt32DoublealglibcomplexMdArray2Ref">
            <summary>Sets the shim of matgen.cmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.cmatrixrndorthogonalInt32alglibcomplexMdArray2Ref">
            <summary>Sets the shim of matgen.cmatrixrndorthogonal(Int32 n, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.cmatrixrndorthogonalfromtheleftalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of matgen.cmatrixrndorthogonalfromtheleft(complex[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.cmatrixrndorthogonalfromtherightalglibcomplexMdArray2RefInt32Int32">
            <summary>Sets the shim of matgen.cmatrixrndorthogonalfromtheright(complex[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.hmatrixrndcondInt32DoublealglibcomplexMdArray2Ref">
            <summary>Sets the shim of matgen.hmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.hmatrixrndmultiplyalglibcomplexMdArray2RefInt32">
            <summary>Sets the shim of matgen.hmatrixrndmultiply(complex[,]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.hpdmatrixrndcondInt32DoublealglibcomplexMdArray2Ref">
            <summary>Sets the shim of matgen.hpdmatrixrndcond(Int32 n, Double c, complex[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.rmatrixrndcondInt32DoubleDoubleMdArray2Ref">
            <summary>Sets the shim of matgen.rmatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.rmatrixrndorthogonalInt32DoubleMdArray2Ref">
            <summary>Sets the shim of matgen.rmatrixrndorthogonal(Int32 n, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.rmatrixrndorthogonalfromtheleftDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of matgen.rmatrixrndorthogonalfromtheleft(Double[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.rmatrixrndorthogonalfromtherightDoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of matgen.rmatrixrndorthogonalfromtheright(Double[,]&amp; a, Int32 m, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.smatrixrndcondInt32DoubleDoubleMdArray2Ref">
            <summary>Sets the shim of matgen.smatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.smatrixrndmultiplyDoubleMdArray2RefInt32">
            <summary>Sets the shim of matgen.smatrixrndmultiply(Double[,]&amp; a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatgen.spdmatrixrndcondInt32DoubleDoubleMdArray2Ref">
            <summary>Sets the shim of matgen.spdmatrixrndcond(Int32 n, Double c, Double[,]&amp; a)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatgen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmath">
            <summary>Shim type of alglib+math</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmath.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmath.#ctor(alglib.math)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmath.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmath.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.Constructor">
            <summary>Sets the shim of math.math()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.StaticConstructor">
            <summary>Sets the shim of math.math()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.abscomplexalglibcomplex">
            <summary>Sets the shim of math.abscomplex(complex z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.conjalglibcomplex">
            <summary>Sets the shim of math.conj(complex z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.csqralglibcomplex">
            <summary>Sets the shim of math.csqr(complex z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.isfiniteDouble">
            <summary>Sets the shim of math.isfinite(Double d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.randomintegerInt32">
            <summary>Sets the shim of math.randominteger(Int32 N)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.randomreal">
            <summary>Sets the shim of math.randomreal()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmath.sqrDouble">
            <summary>Sets the shim of math.sqr(Double X)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmath.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinv">
            <summary>Shim type of alglib+matinv</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.#ctor(alglib.matinv)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.Constructor">
            <summary>Sets the shim of matinv.matinv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.cmatrixinversealglibcomplexMdArray2RefInt32Int32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.cmatrixinverse(complex[,]&amp; a, Int32 n, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.cmatrixluinversealglibcomplexMdArray2RefInt32ArrayInt32Int32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.cmatrixluinverse(complex[,]&amp; a, Int32[] pivots, Int32 n, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.cmatrixluinverserecalglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.cmatrixluinverserec(complex[,]&amp; a, Int32 offs, Int32 n, complex[]&amp; work, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.cmatrixtrinversealglibcomplexMdArray2RefInt32BooleanBooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.cmatrixtrinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Boolean isunit, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.cmatrixtrinverserecalglibcomplexMdArray2RefInt32Int32BooleanBooleanalglibcomplexArrayRefInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.cmatrixtrinverserec(complex[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, Boolean isunit, complex[]&amp; tmp, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.hpdmatrixcholeskyinversealglibcomplexMdArray2RefInt32BooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.hpdmatrixcholeskyinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.hpdmatrixcholeskyinverserecalglibcomplexMdArray2RefInt32Int32BooleanalglibcomplexArrayRef">
            <summary>Sets the shim of matinv.hpdmatrixcholeskyinverserec(complex[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.hpdmatrixinversealglibcomplexMdArray2RefInt32BooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.hpdmatrixinverse(complex[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.rmatrixinverseDoubleMdArray2RefInt32Int32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.rmatrixinverse(Double[,]&amp; a, Int32 n, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.rmatrixluinverseDoubleMdArray2RefInt32ArrayInt32Int32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.rmatrixluinverse(Double[,]&amp; a, Int32[] pivots, Int32 n, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.rmatrixluinverserecDoubleMdArray2RefInt32Int32DoubleArrayRefInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.rmatrixluinverserec(Double[,]&amp; a, Int32 offs, Int32 n, Double[]&amp; work, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.rmatrixtrinverseDoubleMdArray2RefInt32BooleanBooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.rmatrixtrinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Boolean isunit, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.rmatrixtrinverserecDoubleMdArray2RefInt32Int32BooleanBooleanDoubleArrayRefInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.rmatrixtrinverserec(Double[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, Boolean isunit, Double[]&amp; tmp, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.spdmatrixcholeskyinverseDoubleMdArray2RefInt32BooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.spdmatrixcholeskyinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.spdmatrixcholeskyinverserecDoubleMdArray2RefInt32Int32BooleanDoubleArrayRef">
            <summary>Sets the shim of matinv.spdmatrixcholeskyinverserec(Double[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.spdmatrixinverseDoubleMdArray2RefInt32BooleanInt32Refmatinvalglibmatinvreport">
            <summary>Sets the shim of matinv.spdmatrixinverse(Double[,]&amp; a, Int32 n, Boolean isupper, Int32&amp; info, matinvreport rep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinv.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport">
            <summary>Shim type of alglib+matinv+matinvreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.#ctor(alglib.matinv.matinvreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.Constructor">
            <summary>Sets the shim of matinvreport.matinvreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinv.Shimmatinvreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinvreport">
            <summary>Shim type of alglib+matinvreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinvreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinvreport.#ctor(alglib.matinvreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinvreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmatinvreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.Constructor">
            <summary>Sets the shim of matinvreport.matinvreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.Constructormatinvalglibmatinvreport">
            <summary>Sets the shim of matinvreport.matinvreport(matinvreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.innerobjGet">
            <summary>Sets the shim of matinvreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.r1Get">
            <summary>Sets the shim of matinvreport.get_r1()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.r1SetDouble">
            <summary>Sets the shim of matinvreport.set_r1(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.rinfGet">
            <summary>Sets the shim of matinvreport.get_rinf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.rinfSetDouble">
            <summary>Sets the shim of matinvreport.set_rinf(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances.innerobjGet">
            <summary>Sets the shim of matinvreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances.r1Get">
            <summary>Sets the shim of matinvreport.get_r1()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances.r1SetDouble">
            <summary>Sets the shim of matinvreport.set_r1(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances.rinfGet">
            <summary>Sets the shim of matinvreport.get_rinf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmatinvreport.AllInstances.rinfSetDouble">
            <summary>Sets the shim of matinvreport.set_rinf(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd">
            <summary>Shim type of alglib+mcpd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.#ctor(alglib.mcpd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Constructor">
            <summary>Sets the shim of mcpd.mcpd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdaddbcmcpdalglibmcpdstateInt32Int32DoubleDouble">
            <summary>Sets the shim of mcpd.mcpdaddbc(mcpdstate s, Int32 i, Int32 j, Double bndl, Double bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdaddecmcpdalglibmcpdstateInt32Int32Double">
            <summary>Sets the shim of mcpd.mcpdaddec(mcpdstate s, Int32 i, Int32 j, Double c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdaddtrackmcpdalglibmcpdstateDoubleMdArray2Int32">
            <summary>Sets the shim of mcpd.mcpdaddtrack(mcpdstate s, Double[,] xy, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdcreateInt32mcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdcreate(Int32 n, mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdcreateentryInt32Int32mcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdcreateentry(Int32 n, Int32 entrystate, mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdcreateentryexitInt32Int32Int32mcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdcreateentryexit(Int32 n, Int32 entrystate, Int32 exitstate, mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdcreateexitInt32Int32mcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdcreateexit(Int32 n, Int32 exitstate, mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdinitInt32Int32Int32mcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdinit(Int32 n, Int32 entrystate, Int32 exitstate, mcpdstate s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdresultsmcpdalglibmcpdstateDoubleMdArray2Refmcpdalglibmcpdreport">
            <summary>Sets the shim of mcpd.mcpdresults(mcpdstate s, Double[,]&amp; p, mcpdreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsetbcmcpdalglibmcpdstateDoubleMdArray2DoubleMdArray2">
            <summary>Sets the shim of mcpd.mcpdsetbc(mcpdstate s, Double[,] bndl, Double[,] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsetecmcpdalglibmcpdstateDoubleMdArray2">
            <summary>Sets the shim of mcpd.mcpdsetec(mcpdstate s, Double[,] ec)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsetlcmcpdalglibmcpdstateDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of mcpd.mcpdsetlc(mcpdstate s, Double[,] c, Int32[] ct, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsetpredictionweightsmcpdalglibmcpdstateDoubleArray">
            <summary>Sets the shim of mcpd.mcpdsetpredictionweights(mcpdstate s, Double[] pw)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsetpriormcpdalglibmcpdstateDoubleMdArray2">
            <summary>Sets the shim of mcpd.mcpdsetprior(mcpdstate s, Double[,] pp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsettikhonovregularizermcpdalglibmcpdstateDouble">
            <summary>Sets the shim of mcpd.mcpdsettikhonovregularizer(mcpdstate s, Double v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.mcpdsolvemcpdalglibmcpdstate">
            <summary>Sets the shim of mcpd.mcpdsolve(mcpdstate s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport">
            <summary>Shim type of alglib+mcpd+mcpdreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.#ctor(alglib.mcpd.mcpdreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.Constructor">
            <summary>Sets the shim of mcpdreport.mcpdreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate">
            <summary>Shim type of alglib+mcpd+mcpdstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.#ctor(alglib.mcpd.mcpdstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.Constructor">
            <summary>Sets the shim of mcpdstate.mcpdstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpd.Shimmcpdstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpdreport">
            <summary>Shim type of alglib+mcpdreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdreport.#ctor(alglib.mcpdreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.Constructor">
            <summary>Sets the shim of mcpdreport.mcpdreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.Constructormcpdalglibmcpdreport">
            <summary>Sets the shim of mcpdreport.mcpdreport(mcpdreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.inneriterationscountGet">
            <summary>Sets the shim of mcpdreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.inneriterationscountSetInt32">
            <summary>Sets the shim of mcpdreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.innerobjGet">
            <summary>Sets the shim of mcpdreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.nfevGet">
            <summary>Sets the shim of mcpdreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.nfevSetInt32">
            <summary>Sets the shim of mcpdreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.outeriterationscountGet">
            <summary>Sets the shim of mcpdreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.outeriterationscountSetInt32">
            <summary>Sets the shim of mcpdreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.terminationtypeGet">
            <summary>Sets the shim of mcpdreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.terminationtypeSetInt32">
            <summary>Sets the shim of mcpdreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.inneriterationscountGet">
            <summary>Sets the shim of mcpdreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.inneriterationscountSetInt32">
            <summary>Sets the shim of mcpdreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.innerobjGet">
            <summary>Sets the shim of mcpdreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.nfevGet">
            <summary>Sets the shim of mcpdreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of mcpdreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.outeriterationscountGet">
            <summary>Sets the shim of mcpdreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.outeriterationscountSetInt32">
            <summary>Sets the shim of mcpdreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of mcpdreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of mcpdreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpdstate">
            <summary>Shim type of alglib+mcpdstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdstate.#ctor(alglib.mcpdstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmcpdstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdstate.Constructor">
            <summary>Sets the shim of mcpdstate.mcpdstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdstate.Constructormcpdalglibmcpdstate">
            <summary>Sets the shim of mcpdstate.mcpdstate(mcpdstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdstate.innerobjGet">
            <summary>Sets the shim of mcpdstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmcpdstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmcpdstate.AllInstances.innerobjGet">
            <summary>Sets the shim of mcpdstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminasareport">
            <summary>Shim type of alglib+minasareport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasareport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasareport.#ctor(alglib.minasareport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasareport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasareport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.Constructor">
            <summary>Sets the shim of minasareport.minasareport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.Constructormincompalglibminasareport">
            <summary>Sets the shim of minasareport.minasareport(minasareport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.activeconstraintsGet">
            <summary>Sets the shim of minasareport.get_activeconstraints()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.activeconstraintsSetInt32">
            <summary>Sets the shim of minasareport.set_activeconstraints(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.innerobjGet">
            <summary>Sets the shim of minasareport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.iterationscountGet">
            <summary>Sets the shim of minasareport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.iterationscountSetInt32">
            <summary>Sets the shim of minasareport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.nfevGet">
            <summary>Sets the shim of minasareport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.nfevSetInt32">
            <summary>Sets the shim of minasareport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.terminationtypeGet">
            <summary>Sets the shim of minasareport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.terminationtypeSetInt32">
            <summary>Sets the shim of minasareport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminasareport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.activeconstraintsGet">
            <summary>Sets the shim of minasareport.get_activeconstraints()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.activeconstraintsSetInt32">
            <summary>Sets the shim of minasareport.set_activeconstraints(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.innerobjGet">
            <summary>Sets the shim of minasareport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.iterationscountGet">
            <summary>Sets the shim of minasareport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of minasareport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.nfevGet">
            <summary>Sets the shim of minasareport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of minasareport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of minasareport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasareport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of minasareport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminasastate">
            <summary>Shim type of alglib+minasastate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasastate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasastate.#ctor(alglib.minasastate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasastate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminasastate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.Constructor">
            <summary>Sets the shim of minasastate.minasastate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.Constructormincompalglibminasastate">
            <summary>Sets the shim of minasastate.minasastate(minasastate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.fGet">
            <summary>Sets the shim of minasastate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.fSetDouble">
            <summary>Sets the shim of minasastate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.gGet">
            <summary>Sets the shim of minasastate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.innerobjGet">
            <summary>Sets the shim of minasastate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.needfgGet">
            <summary>Sets the shim of minasastate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.needfgSetBoolean">
            <summary>Sets the shim of minasastate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.xGet">
            <summary>Sets the shim of minasastate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.xupdatedGet">
            <summary>Sets the shim of minasastate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.xupdatedSetBoolean">
            <summary>Sets the shim of minasastate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminasastate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.fGet">
            <summary>Sets the shim of minasastate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.fSetDouble">
            <summary>Sets the shim of minasastate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.gGet">
            <summary>Sets the shim of minasastate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.innerobjGet">
            <summary>Sets the shim of minasastate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.needfgGet">
            <summary>Sets the shim of minasastate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of minasastate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.xGet">
            <summary>Sets the shim of minasastate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.xupdatedGet">
            <summary>Sets the shim of minasastate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminasastate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of minasastate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic">
            <summary>Shim type of alglib+minbleic</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.#ctor(alglib.minbleic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Constructor">
            <summary>Sets the shim of minbleic.minbleic()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.additionalcheckforconstraintsminbleicalglibminbleicstateDoubleArray">
            <summary>Sets the shim of minbleic.additionalcheckforconstraints(minbleicstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.clearrequestfieldsminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.clearrequestfields(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.makegradientprojectionminbleicalglibminbleicstateDoubleArrayRef">
            <summary>Sets the shim of minbleic.makegradientprojection(minbleicstate state, Double[]&amp; pg)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleiccreateInt32DoubleArrayminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleiccreate(Int32 n, Double[] x, minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleiccreatefInt32DoubleArrayDoubleminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleiccreatef(Int32 n, Double[] x, Double diffstep, minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicinitinternalInt32DoubleArrayDoubleminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleicinitinternal(Int32 n, Double[] x, Double diffstep, minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleiciterationminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleiciteration(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicrestartfromminbleicalglibminbleicstateDoubleArray">
            <summary>Sets the shim of minbleic.minbleicrestartfrom(minbleicstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicresultsbufminbleicalglibminbleicstateDoubleArrayRefminbleicalglibminbleicreport">
            <summary>Sets the shim of minbleic.minbleicresultsbuf(minbleicstate state, Double[]&amp; x, minbleicreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicresultsminbleicalglibminbleicstateDoubleArrayRefminbleicalglibminbleicreport">
            <summary>Sets the shim of minbleic.minbleicresults(minbleicstate state, Double[]&amp; x, minbleicreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetbcminbleicalglibminbleicstateDoubleArrayDoubleArray">
            <summary>Sets the shim of minbleic.minbleicsetbc(minbleicstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetinnercondminbleicalglibminbleicstateDoubleDoubleDouble">
            <summary>Sets the shim of minbleic.minbleicsetinnercond(minbleicstate state, Double epsg, Double epsf, Double epsx)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetlcminbleicalglibminbleicstateDoubleMdArray2Int32ArrayInt32">
            <summary>Sets the shim of minbleic.minbleicsetlc(minbleicstate state, Double[,] c, Int32[] ct, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetmaxitsminbleicalglibminbleicstateInt32">
            <summary>Sets the shim of minbleic.minbleicsetmaxits(minbleicstate state, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetoutercondminbleicalglibminbleicstateDoubleDouble">
            <summary>Sets the shim of minbleic.minbleicsetoutercond(minbleicstate state, Double epsx, Double epsi)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetprecdefaultminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleicsetprecdefault(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetprecdiagminbleicalglibminbleicstateDoubleArray">
            <summary>Sets the shim of minbleic.minbleicsetprecdiag(minbleicstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetprecscaleminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.minbleicsetprecscale(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetscaleminbleicalglibminbleicstateDoubleArray">
            <summary>Sets the shim of minbleic.minbleicsetscale(minbleicstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetstpmaxminbleicalglibminbleicstateDouble">
            <summary>Sets the shim of minbleic.minbleicsetstpmax(minbleicstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.minbleicsetxrepminbleicalglibminbleicstateBoolean">
            <summary>Sets the shim of minbleic.minbleicsetxrep(minbleicstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.modifytargetfunctionminbleicalglibminbleicstateDoubleArrayDoubleArrayDoubleDoubleRefDoubleArrayRefDoubleRefDoubleRef">
            <summary>Sets the shim of minbleic.modifytargetfunction(minbleicstate state, Double[] x, Double[] r, Double rnorm2, Double&amp; f, Double[]&amp; g, Double&amp; gnorm, Double&amp; mpgnorm)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.prepareconstraintmatrixminbleicalglibminbleicstateDoubleArrayDoubleArrayDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of minbleic.prepareconstraintmatrix(minbleicstate state, Double[] x, Double[] g, Double[]&amp; px, Double[]&amp; pg)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.projectpointandunscaleminbleicalglibminbleicstateDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleRef">
            <summary>Sets the shim of minbleic.projectpointandunscale(minbleicstate state, Double[]&amp; xscaled, Double[]&amp; xunscaled, Double[]&amp; rscaled, Double&amp; rnorm2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.rebuildcexeminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleic.rebuildcexe(minbleicstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.scalegradientandexpandminbleicalglibminbleicstateDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of minbleic.scalegradientandexpand(minbleicstate state, Double[] gunscaled, Double[]&amp; gscaled)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.unscalepointminbleicalglibminbleicstateDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of minbleic.unscalepoint(minbleicstate state, Double[] xscaled, Double[]&amp; xunscaled)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport">
            <summary>Shim type of alglib+minbleic+minbleicreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.#ctor(alglib.minbleic.minbleicreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.Constructor">
            <summary>Sets the shim of minbleicreport.minbleicreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate">
            <summary>Shim type of alglib+minbleic+minbleicstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.#ctor(alglib.minbleic.minbleicstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.Constructor">
            <summary>Sets the shim of minbleicstate.minbleicstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleic.Shimminbleicstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleicreport">
            <summary>Shim type of alglib+minbleicreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicreport.#ctor(alglib.minbleicreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.Constructor">
            <summary>Sets the shim of minbleicreport.minbleicreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.Constructorminbleicalglibminbleicreport">
            <summary>Sets the shim of minbleicreport.minbleicreport(minbleicreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugdxGet">
            <summary>Sets the shim of minbleicreport.get_debugdx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugdxSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugdx(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugeqerrGet">
            <summary>Sets the shim of minbleicreport.get_debugeqerr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugeqerrSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugeqerr(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugffGet">
            <summary>Sets the shim of minbleicreport.get_debugff()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugffSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugff(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugfsGet">
            <summary>Sets the shim of minbleicreport.get_debugfs()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.debugfsSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugfs(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.inneriterationscountGet">
            <summary>Sets the shim of minbleicreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.inneriterationscountSetInt32">
            <summary>Sets the shim of minbleicreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.innerobjGet">
            <summary>Sets the shim of minbleicreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.nfevGet">
            <summary>Sets the shim of minbleicreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.nfevSetInt32">
            <summary>Sets the shim of minbleicreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.outeriterationscountGet">
            <summary>Sets the shim of minbleicreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.outeriterationscountSetInt32">
            <summary>Sets the shim of minbleicreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.terminationtypeGet">
            <summary>Sets the shim of minbleicreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.terminationtypeSetInt32">
            <summary>Sets the shim of minbleicreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugdxGet">
            <summary>Sets the shim of minbleicreport.get_debugdx()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugdxSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugdx(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugeqerrGet">
            <summary>Sets the shim of minbleicreport.get_debugeqerr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugeqerrSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugeqerr(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugffGet">
            <summary>Sets the shim of minbleicreport.get_debugff()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugffSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugff(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugfsGet">
            <summary>Sets the shim of minbleicreport.get_debugfs()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.debugfsSetDouble">
            <summary>Sets the shim of minbleicreport.set_debugfs(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.inneriterationscountGet">
            <summary>Sets the shim of minbleicreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.inneriterationscountSetInt32">
            <summary>Sets the shim of minbleicreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.innerobjGet">
            <summary>Sets the shim of minbleicreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.nfevGet">
            <summary>Sets the shim of minbleicreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of minbleicreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.outeriterationscountGet">
            <summary>Sets the shim of minbleicreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.outeriterationscountSetInt32">
            <summary>Sets the shim of minbleicreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of minbleicreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of minbleicreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleicstate">
            <summary>Shim type of alglib+minbleicstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicstate.#ctor(alglib.minbleicstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminbleicstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.Constructor">
            <summary>Sets the shim of minbleicstate.minbleicstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.Constructorminbleicalglibminbleicstate">
            <summary>Sets the shim of minbleicstate.minbleicstate(minbleicstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.fGet">
            <summary>Sets the shim of minbleicstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.fSetDouble">
            <summary>Sets the shim of minbleicstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.gGet">
            <summary>Sets the shim of minbleicstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.innerobjGet">
            <summary>Sets the shim of minbleicstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.needfGet">
            <summary>Sets the shim of minbleicstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.needfSetBoolean">
            <summary>Sets the shim of minbleicstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.needfgGet">
            <summary>Sets the shim of minbleicstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.needfgSetBoolean">
            <summary>Sets the shim of minbleicstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.xGet">
            <summary>Sets the shim of minbleicstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.xupdatedGet">
            <summary>Sets the shim of minbleicstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.xupdatedSetBoolean">
            <summary>Sets the shim of minbleicstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.fGet">
            <summary>Sets the shim of minbleicstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.fSetDouble">
            <summary>Sets the shim of minbleicstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.gGet">
            <summary>Sets the shim of minbleicstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.innerobjGet">
            <summary>Sets the shim of minbleicstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.needfGet">
            <summary>Sets the shim of minbleicstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of minbleicstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.needfgGet">
            <summary>Sets the shim of minbleicstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of minbleicstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.xGet">
            <summary>Sets the shim of minbleicstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of minbleicstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminbleicstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of minbleicstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg">
            <summary>Shim type of alglib+mincg</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.#ctor(alglib.mincg)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Constructor">
            <summary>Sets the shim of mincg.mincg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.clearrequestfieldsmincgalglibmincgstate">
            <summary>Sets the shim of mincg.clearrequestfields(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgcreateInt32DoubleArraymincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincgcreate(Int32 n, Double[] x, mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgcreatefInt32DoubleArrayDoublemincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincgcreatef(Int32 n, Double[] x, Double diffstep, mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincginitinternalInt32Doublemincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincginitinternal(Int32 n, Double diffstep, mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgiterationmincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincgiteration(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgrestartfrommincgalglibmincgstateDoubleArray">
            <summary>Sets the shim of mincg.mincgrestartfrom(mincgstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgresultsbufmincgalglibmincgstateDoubleArrayRefmincgalglibmincgreport">
            <summary>Sets the shim of mincg.mincgresultsbuf(mincgstate state, Double[]&amp; x, mincgreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgresultsmincgalglibmincgstateDoubleArrayRefmincgalglibmincgreport">
            <summary>Sets the shim of mincg.mincgresults(mincgstate state, Double[]&amp; x, mincgreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetcgtypemincgalglibmincgstateInt32">
            <summary>Sets the shim of mincg.mincgsetcgtype(mincgstate state, Int32 cgtype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetcondmincgalglibmincgstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of mincg.mincgsetcond(mincgstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetdrepmincgalglibmincgstateBoolean">
            <summary>Sets the shim of mincg.mincgsetdrep(mincgstate state, Boolean needdrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetprecdefaultmincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincgsetprecdefault(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetprecdiagfastmincgalglibmincgstateDoubleArray">
            <summary>Sets the shim of mincg.mincgsetprecdiagfast(mincgstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetprecdiagmincgalglibmincgstateDoubleArray">
            <summary>Sets the shim of mincg.mincgsetprecdiag(mincgstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetpreclowrankfastmincgalglibmincgstateDoubleArrayDoubleArrayDoubleMdArray2Int32">
            <summary>Sets the shim of mincg.mincgsetpreclowrankfast(mincgstate state, Double[] d1, Double[] c, Double[,] v, Int32 vcnt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetprecscalemincgalglibmincgstate">
            <summary>Sets the shim of mincg.mincgsetprecscale(mincgstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetprecvarpartmincgalglibmincgstateDoubleArray">
            <summary>Sets the shim of mincg.mincgsetprecvarpart(mincgstate state, Double[] d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetscalemincgalglibmincgstateDoubleArray">
            <summary>Sets the shim of mincg.mincgsetscale(mincgstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetstpmaxmincgalglibmincgstateDouble">
            <summary>Sets the shim of mincg.mincgsetstpmax(mincgstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsetxrepmincgalglibmincgstateBoolean">
            <summary>Sets the shim of mincg.mincgsetxrep(mincgstate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.mincgsuggeststepmincgalglibmincgstateDouble">
            <summary>Sets the shim of mincg.mincgsuggeststep(mincgstate state, Double stp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.preconditionedmultiply2mincgalglibmincgstateDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of mincg.preconditionedmultiply2(mincgstate state, Double[]&amp; x, Double[]&amp; y, Double[]&amp; work0, Double[]&amp; work1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.preconditionedmultiplymincgalglibmincgstateDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of mincg.preconditionedmultiply(mincgstate state, Double[]&amp; x, Double[]&amp; work0, Double[]&amp; work1)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport">
            <summary>Shim type of alglib+mincg+mincgreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.#ctor(alglib.mincg.mincgreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.Constructor">
            <summary>Sets the shim of mincgreport.mincgreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg.Shimmincgreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate">
            <summary>Shim type of alglib+mincg+mincgstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.#ctor(alglib.mincg.mincgstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.Constructor">
            <summary>Sets the shim of mincgstate.mincgstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincg.Shimmincgstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincgreport">
            <summary>Shim type of alglib+mincgreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgreport.#ctor(alglib.mincgreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.Constructor">
            <summary>Sets the shim of mincgreport.mincgreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.Constructormincgalglibmincgreport">
            <summary>Sets the shim of mincgreport.mincgreport(mincgreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.innerobjGet">
            <summary>Sets the shim of mincgreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.iterationscountGet">
            <summary>Sets the shim of mincgreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.iterationscountSetInt32">
            <summary>Sets the shim of mincgreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.nfevGet">
            <summary>Sets the shim of mincgreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.nfevSetInt32">
            <summary>Sets the shim of mincgreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.terminationtypeGet">
            <summary>Sets the shim of mincgreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.terminationtypeSetInt32">
            <summary>Sets the shim of mincgreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.innerobjGet">
            <summary>Sets the shim of mincgreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.iterationscountGet">
            <summary>Sets the shim of mincgreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of mincgreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.nfevGet">
            <summary>Sets the shim of mincgreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of mincgreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of mincgreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of mincgreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincgstate">
            <summary>Shim type of alglib+mincgstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgstate.#ctor(alglib.mincgstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincgstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.Constructor">
            <summary>Sets the shim of mincgstate.mincgstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.Constructormincgalglibmincgstate">
            <summary>Sets the shim of mincgstate.mincgstate(mincgstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.fGet">
            <summary>Sets the shim of mincgstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.fSetDouble">
            <summary>Sets the shim of mincgstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.gGet">
            <summary>Sets the shim of mincgstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.innerobjGet">
            <summary>Sets the shim of mincgstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.needfGet">
            <summary>Sets the shim of mincgstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.needfSetBoolean">
            <summary>Sets the shim of mincgstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.needfgGet">
            <summary>Sets the shim of mincgstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.needfgSetBoolean">
            <summary>Sets the shim of mincgstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.xGet">
            <summary>Sets the shim of mincgstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.xupdatedGet">
            <summary>Sets the shim of mincgstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.xupdatedSetBoolean">
            <summary>Sets the shim of mincgstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.fGet">
            <summary>Sets the shim of mincgstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.fSetDouble">
            <summary>Sets the shim of mincgstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.gGet">
            <summary>Sets the shim of mincgstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.innerobjGet">
            <summary>Sets the shim of mincgstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.needfGet">
            <summary>Sets the shim of mincgstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of mincgstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.needfgGet">
            <summary>Sets the shim of mincgstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of mincgstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.xGet">
            <summary>Sets the shim of mincgstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of mincgstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincgstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of mincgstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp">
            <summary>Shim type of alglib+mincomp</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.#ctor(alglib.mincomp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Constructor">
            <summary>Sets the shim of mincomp.mincomp()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.asaboundedantigradnormmincompalglibminasastate">
            <summary>Sets the shim of mincomp.asaboundedantigradnorm(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.asad1normmincompalglibminasastate">
            <summary>Sets the shim of mincomp.asad1norm(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.asaginormmincompalglibminasastate">
            <summary>Sets the shim of mincomp.asaginorm(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.asauisemptymincompalglibminasastate">
            <summary>Sets the shim of mincomp.asauisempty(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.clearrequestfieldsmincompalglibminasastate">
            <summary>Sets the shim of mincomp.clearrequestfields(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasacreateInt32DoubleArrayDoubleArrayDoubleArraymincompalglibminasastate">
            <summary>Sets the shim of mincomp.minasacreate(Int32 n, Double[] x, Double[] bndl, Double[] bndu, minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasaiterationmincompalglibminasastate">
            <summary>Sets the shim of mincomp.minasaiteration(minasastate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasarestartfrommincompalglibminasastateDoubleArrayDoubleArrayDoubleArray">
            <summary>Sets the shim of mincomp.minasarestartfrom(minasastate state, Double[] x, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasaresultsbufmincompalglibminasastateDoubleArrayRefmincompalglibminasareport">
            <summary>Sets the shim of mincomp.minasaresultsbuf(minasastate state, Double[]&amp; x, minasareport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasaresultsmincompalglibminasastateDoubleArrayRefmincompalglibminasareport">
            <summary>Sets the shim of mincomp.minasaresults(minasastate state, Double[]&amp; x, minasareport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasasetalgorithmmincompalglibminasastateInt32">
            <summary>Sets the shim of mincomp.minasasetalgorithm(minasastate state, Int32 algotype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasasetcondmincompalglibminasastateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of mincomp.minasasetcond(minasastate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasasetstpmaxmincompalglibminasastateDouble">
            <summary>Sets the shim of mincomp.minasasetstpmax(minasastate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minasasetxrepmincompalglibminasastateBoolean">
            <summary>Sets the shim of mincomp.minasasetxrep(minasastate state, Boolean needxrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minbleicsetbarrierdecayminbleicalglibminbleicstateDouble">
            <summary>Sets the shim of mincomp.minbleicsetbarrierdecay(minbleicstate state, Double mudecay)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minbleicsetbarrierwidthminbleicalglibminbleicstateDouble">
            <summary>Sets the shim of mincomp.minbleicsetbarrierwidth(minbleicstate state, Double mu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minlbfgssetcholeskypreconditionerminlbfgsalglibminlbfgsstateDoubleMdArray2Boolean">
            <summary>Sets the shim of mincomp.minlbfgssetcholeskypreconditioner(minlbfgsstate state, Double[,] p, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.minlbfgssetdefaultpreconditionerminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of mincomp.minlbfgssetdefaultpreconditioner(minlbfgsstate state)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport">
            <summary>Shim type of alglib+mincomp+minasareport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.#ctor(alglib.mincomp.minasareport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.Constructor">
            <summary>Sets the shim of minasareport.minasareport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp.Shimminasareport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate">
            <summary>Shim type of alglib+mincomp+minasastate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.#ctor(alglib.mincomp.minasastate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.Constructor">
            <summary>Sets the shim of minasastate.minasastate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmincomp.Shimminasastate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs">
            <summary>Shim type of alglib+minlbfgs</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.#ctor(alglib.minlbfgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Constructor">
            <summary>Sets the shim of minlbfgs.minlbfgs()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.clearrequestfieldsminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.clearrequestfields(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgscreateInt32Int32DoubleArrayminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgscreate(Int32 n, Int32 m, Double[] x, minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgscreatefInt32Int32DoubleArrayDoubleminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgscreatef(Int32 n, Int32 m, Double[] x, Double diffstep, minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgscreatexInt32Int32DoubleArrayInt32Doubleminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgscreatex(Int32 n, Int32 m, Double[] x, Int32 flags, Double diffstep, minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgsiterationminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgsiteration(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgsrestartfromminlbfgsalglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of minlbfgs.minlbfgsrestartfrom(minlbfgsstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgsresultsbufminlbfgsalglibminlbfgsstateDoubleArrayRefminlbfgsalglibminlbfgsreport">
            <summary>Sets the shim of minlbfgs.minlbfgsresultsbuf(minlbfgsstate state, Double[]&amp; x, minlbfgsreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgsresultsminlbfgsalglibminlbfgsstateDoubleArrayRefminlbfgsalglibminlbfgsreport">
            <summary>Sets the shim of minlbfgs.minlbfgsresults(minlbfgsstate state, Double[]&amp; x, minlbfgsreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetcondminlbfgsalglibminlbfgsstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of minlbfgs.minlbfgssetcond(minlbfgsstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetpreccholeskyminlbfgsalglibminlbfgsstateDoubleMdArray2Boolean">
            <summary>Sets the shim of minlbfgs.minlbfgssetpreccholesky(minlbfgsstate state, Double[,] p, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetprecdefaultminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgssetprecdefault(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetprecdiagminlbfgsalglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of minlbfgs.minlbfgssetprecdiag(minlbfgsstate state, Double[] d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetprecscaleminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgs.minlbfgssetprecscale(minlbfgsstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetscaleminlbfgsalglibminlbfgsstateDoubleArray">
            <summary>Sets the shim of minlbfgs.minlbfgssetscale(minlbfgsstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetstpmaxminlbfgsalglibminlbfgsstateDouble">
            <summary>Sets the shim of minlbfgs.minlbfgssetstpmax(minlbfgsstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.minlbfgssetxrepminlbfgsalglibminlbfgsstateBoolean">
            <summary>Sets the shim of minlbfgs.minlbfgssetxrep(minlbfgsstate state, Boolean needxrep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport">
            <summary>Shim type of alglib+minlbfgs+minlbfgsreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.#ctor(alglib.minlbfgs.minlbfgsreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.Constructor">
            <summary>Sets the shim of minlbfgsreport.minlbfgsreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate">
            <summary>Shim type of alglib+minlbfgs+minlbfgsstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.#ctor(alglib.minlbfgs.minlbfgsstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.Constructor">
            <summary>Sets the shim of minlbfgsstate.minlbfgsstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgs.Shimminlbfgsstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgsreport">
            <summary>Shim type of alglib+minlbfgsreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsreport.#ctor(alglib.minlbfgsreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.Constructor">
            <summary>Sets the shim of minlbfgsreport.minlbfgsreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.Constructorminlbfgsalglibminlbfgsreport">
            <summary>Sets the shim of minlbfgsreport.minlbfgsreport(minlbfgsreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.innerobjGet">
            <summary>Sets the shim of minlbfgsreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.iterationscountGet">
            <summary>Sets the shim of minlbfgsreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.iterationscountSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.nfevGet">
            <summary>Sets the shim of minlbfgsreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.nfevSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.terminationtypeGet">
            <summary>Sets the shim of minlbfgsreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.terminationtypeSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.innerobjGet">
            <summary>Sets the shim of minlbfgsreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.iterationscountGet">
            <summary>Sets the shim of minlbfgsreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.nfevGet">
            <summary>Sets the shim of minlbfgsreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of minlbfgsreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of minlbfgsreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgsstate">
            <summary>Shim type of alglib+minlbfgsstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsstate.#ctor(alglib.minlbfgsstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlbfgsstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.Constructor">
            <summary>Sets the shim of minlbfgsstate.minlbfgsstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.Constructorminlbfgsalglibminlbfgsstate">
            <summary>Sets the shim of minlbfgsstate.minlbfgsstate(minlbfgsstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.fGet">
            <summary>Sets the shim of minlbfgsstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.fSetDouble">
            <summary>Sets the shim of minlbfgsstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.gGet">
            <summary>Sets the shim of minlbfgsstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.innerobjGet">
            <summary>Sets the shim of minlbfgsstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.needfGet">
            <summary>Sets the shim of minlbfgsstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.needfSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.needfgGet">
            <summary>Sets the shim of minlbfgsstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.needfgSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.xGet">
            <summary>Sets the shim of minlbfgsstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.xupdatedGet">
            <summary>Sets the shim of minlbfgsstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.xupdatedSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.fGet">
            <summary>Sets the shim of minlbfgsstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.fSetDouble">
            <summary>Sets the shim of minlbfgsstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.gGet">
            <summary>Sets the shim of minlbfgsstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.innerobjGet">
            <summary>Sets the shim of minlbfgsstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.needfGet">
            <summary>Sets the shim of minlbfgsstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.needfgGet">
            <summary>Sets the shim of minlbfgsstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.xGet">
            <summary>Sets the shim of minlbfgsstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of minlbfgsstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlbfgsstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of minlbfgsstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm">
            <summary>Shim type of alglib+minlm</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.#ctor(alglib.minlm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Constructor">
            <summary>Sets the shim of minlm.minlm()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.boundedscaledantigradnormminlmalglibminlmstateDoubleArrayDoubleArray">
            <summary>Sets the shim of minlm.boundedscaledantigradnorm(minlmstate state, Double[] x, Double[] g)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.clearrequestfieldsminlmalglibminlmstate">
            <summary>Sets the shim of minlm.clearrequestfields(minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.decreaselambdaDoubleRefDoubleRef">
            <summary>Sets the shim of minlm.decreaselambda(Double&amp; lambdav, Double&amp; nu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.increaselambdaDoubleRefDoubleRef">
            <summary>Sets the shim of minlm.increaselambda(Double&amp; lambdav, Double&amp; nu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.lmprepareInt32Int32Booleanminlmalglibminlmstate">
            <summary>Sets the shim of minlm.lmprepare(Int32 n, Int32 m, Boolean havegrad, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatefghInt32DoubleArrayminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatefgh(Int32 n, Double[] x, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatefgjInt32Int32DoubleArrayminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatefgj(Int32 n, Int32 m, Double[] x, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatefjInt32Int32DoubleArrayminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatefj(Int32 n, Int32 m, Double[] x, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatevInt32Int32DoubleArrayDoubleminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatev(Int32 n, Int32 m, Double[] x, Double diffstep, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatevgjInt32Int32DoubleArrayminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatevgj(Int32 n, Int32 m, Double[] x, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmcreatevjInt32Int32DoubleArrayminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmcreatevj(Int32 n, Int32 m, Double[] x, minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmiterationminlmalglibminlmstate">
            <summary>Sets the shim of minlm.minlmiteration(minlmstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmrestartfromminlmalglibminlmstateDoubleArray">
            <summary>Sets the shim of minlm.minlmrestartfrom(minlmstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmresultsbufminlmalglibminlmstateDoubleArrayRefminlmalglibminlmreport">
            <summary>Sets the shim of minlm.minlmresultsbuf(minlmstate state, Double[]&amp; x, minlmreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmresultsminlmalglibminlmstateDoubleArrayRefminlmalglibminlmreport">
            <summary>Sets the shim of minlm.minlmresults(minlmstate state, Double[]&amp; x, minlmreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetacctypeminlmalglibminlmstateInt32">
            <summary>Sets the shim of minlm.minlmsetacctype(minlmstate state, Int32 acctype)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetbcminlmalglibminlmstateDoubleArrayDoubleArray">
            <summary>Sets the shim of minlm.minlmsetbc(minlmstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetcondminlmalglibminlmstateDoubleDoubleDoubleInt32">
            <summary>Sets the shim of minlm.minlmsetcond(minlmstate state, Double epsg, Double epsf, Double epsx, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetscaleminlmalglibminlmstateDoubleArray">
            <summary>Sets the shim of minlm.minlmsetscale(minlmstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetstpmaxminlmalglibminlmstateDouble">
            <summary>Sets the shim of minlm.minlmsetstpmax(minlmstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.minlmsetxrepminlmalglibminlmstateBoolean">
            <summary>Sets the shim of minlm.minlmsetxrep(minlmstate state, Boolean needxrep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport">
            <summary>Shim type of alglib+minlm+minlmreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.#ctor(alglib.minlm.minlmreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.Constructor">
            <summary>Sets the shim of minlmreport.minlmreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm.Shimminlmreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate">
            <summary>Shim type of alglib+minlm+minlmstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.#ctor(alglib.minlm.minlmstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.Constructor">
            <summary>Sets the shim of minlmstate.minlmstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlm.Shimminlmstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlmreport">
            <summary>Shim type of alglib+minlmreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmreport.#ctor(alglib.minlmreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.Constructor">
            <summary>Sets the shim of minlmreport.minlmreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.Constructorminlmalglibminlmreport">
            <summary>Sets the shim of minlmreport.minlmreport(minlmreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.innerobjGet">
            <summary>Sets the shim of minlmreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.iterationscountGet">
            <summary>Sets the shim of minlmreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.iterationscountSetInt32">
            <summary>Sets the shim of minlmreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.ncholeskyGet">
            <summary>Sets the shim of minlmreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.ncholeskySetInt32">
            <summary>Sets the shim of minlmreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.nfuncGet">
            <summary>Sets the shim of minlmreport.get_nfunc()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.nfuncSetInt32">
            <summary>Sets the shim of minlmreport.set_nfunc(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.ngradGet">
            <summary>Sets the shim of minlmreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.ngradSetInt32">
            <summary>Sets the shim of minlmreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.nhessGet">
            <summary>Sets the shim of minlmreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.nhessSetInt32">
            <summary>Sets the shim of minlmreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.njacGet">
            <summary>Sets the shim of minlmreport.get_njac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.njacSetInt32">
            <summary>Sets the shim of minlmreport.set_njac(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.terminationtypeGet">
            <summary>Sets the shim of minlmreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.terminationtypeSetInt32">
            <summary>Sets the shim of minlmreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.innerobjGet">
            <summary>Sets the shim of minlmreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.iterationscountGet">
            <summary>Sets the shim of minlmreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of minlmreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.ncholeskyGet">
            <summary>Sets the shim of minlmreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.ncholeskySetInt32">
            <summary>Sets the shim of minlmreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.nfuncGet">
            <summary>Sets the shim of minlmreport.get_nfunc()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.nfuncSetInt32">
            <summary>Sets the shim of minlmreport.set_nfunc(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.ngradGet">
            <summary>Sets the shim of minlmreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.ngradSetInt32">
            <summary>Sets the shim of minlmreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.nhessGet">
            <summary>Sets the shim of minlmreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.nhessSetInt32">
            <summary>Sets the shim of minlmreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.njacGet">
            <summary>Sets the shim of minlmreport.get_njac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.njacSetInt32">
            <summary>Sets the shim of minlmreport.set_njac(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of minlmreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of minlmreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlmstate">
            <summary>Shim type of alglib+minlmstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmstate.#ctor(alglib.minlmstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminlmstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.Constructor">
            <summary>Sets the shim of minlmstate.minlmstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.Constructorminlmalglibminlmstate">
            <summary>Sets the shim of minlmstate.minlmstate(minlmstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.fGet">
            <summary>Sets the shim of minlmstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.fSetDouble">
            <summary>Sets the shim of minlmstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.fiGet">
            <summary>Sets the shim of minlmstate.get_fi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.gGet">
            <summary>Sets the shim of minlmstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.hGet">
            <summary>Sets the shim of minlmstate.get_h()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.innerobjGet">
            <summary>Sets the shim of minlmstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.jGet">
            <summary>Sets the shim of minlmstate.get_j()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfGet">
            <summary>Sets the shim of minlmstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfSetBoolean">
            <summary>Sets the shim of minlmstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfgGet">
            <summary>Sets the shim of minlmstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfgSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfghGet">
            <summary>Sets the shim of minlmstate.get_needfgh()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfghSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfgh(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfiGet">
            <summary>Sets the shim of minlmstate.get_needfi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfiSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfi(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfijGet">
            <summary>Sets the shim of minlmstate.get_needfij()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.needfijSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfij(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.xGet">
            <summary>Sets the shim of minlmstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.xupdatedGet">
            <summary>Sets the shim of minlmstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.xupdatedSetBoolean">
            <summary>Sets the shim of minlmstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.fGet">
            <summary>Sets the shim of minlmstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.fSetDouble">
            <summary>Sets the shim of minlmstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.fiGet">
            <summary>Sets the shim of minlmstate.get_fi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.gGet">
            <summary>Sets the shim of minlmstate.get_g()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.hGet">
            <summary>Sets the shim of minlmstate.get_h()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.innerobjGet">
            <summary>Sets the shim of minlmstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.jGet">
            <summary>Sets the shim of minlmstate.get_j()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfGet">
            <summary>Sets the shim of minlmstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of minlmstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfgGet">
            <summary>Sets the shim of minlmstate.get_needfg()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfgSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfg(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfghGet">
            <summary>Sets the shim of minlmstate.get_needfgh()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfghSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfgh(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfiGet">
            <summary>Sets the shim of minlmstate.get_needfi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfiSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfi(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfijGet">
            <summary>Sets the shim of minlmstate.get_needfij()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.needfijSetBoolean">
            <summary>Sets the shim of minlmstate.set_needfij(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.xGet">
            <summary>Sets the shim of minlmstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of minlmstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminlmstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of minlmstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp">
            <summary>Shim type of alglib+minqp</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.#ctor(alglib.minqp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Constructor">
            <summary>Sets the shim of minqp.minqp()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpcreateInt32minqpalglibminqpstate">
            <summary>Sets the shim of minqp.minqpcreate(Int32 n, minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpgradminqpalglibminqpstate">
            <summary>Sets the shim of minqp.minqpgrad(minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpoptimizeminqpalglibminqpstate">
            <summary>Sets the shim of minqp.minqpoptimize(minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpresultsbufminqpalglibminqpstateDoubleArrayRefminqpalglibminqpreport">
            <summary>Sets the shim of minqp.minqpresultsbuf(minqpstate state, Double[]&amp; x, minqpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpresultsminqpalglibminqpstateDoubleArrayRefminqpalglibminqpreport">
            <summary>Sets the shim of minqp.minqpresults(minqpstate state, Double[]&amp; x, minqpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqprewritediagonalminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqprewritediagonal(minqpstate state, Double[] s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetalgocholeskyminqpalglibminqpstate">
            <summary>Sets the shim of minqp.minqpsetalgocholesky(minqpstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetbcminqpalglibminqpstateDoubleArrayDoubleArray">
            <summary>Sets the shim of minqp.minqpsetbc(minqpstate state, Double[] bndl, Double[] bndu)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetlineartermfastminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetlineartermfast(minqpstate state, Double[] b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetlineartermminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetlinearterm(minqpstate state, Double[] b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetoriginfastminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetoriginfast(minqpstate state, Double[] xorigin)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetoriginminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetorigin(minqpstate state, Double[] xorigin)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetquadratictermfastminqpalglibminqpstateDoubleMdArray2BooleanDouble">
            <summary>Sets the shim of minqp.minqpsetquadratictermfast(minqpstate state, Double[,] a, Boolean isupper, Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetquadratictermminqpalglibminqpstateDoubleMdArray2Boolean">
            <summary>Sets the shim of minqp.minqpsetquadraticterm(minqpstate state, Double[,] a, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetstartingpointfastminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetstartingpointfast(minqpstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpsetstartingpointminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpsetstartingpoint(minqpstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.minqpxtaxminqpalglibminqpstateDoubleArray">
            <summary>Sets the shim of minqp.minqpxtax(minqpstate state, Double[] x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport">
            <summary>Shim type of alglib+minqp+minqpreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.#ctor(alglib.minqp.minqpreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.Constructor">
            <summary>Sets the shim of minqpreport.minqpreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp.Shimminqpreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate">
            <summary>Shim type of alglib+minqp+minqpstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.#ctor(alglib.minqp.minqpstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.Constructor">
            <summary>Sets the shim of minqpstate.minqpstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqp.Shimminqpstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqpreport">
            <summary>Shim type of alglib+minqpreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpreport.#ctor(alglib.minqpreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.Constructor">
            <summary>Sets the shim of minqpreport.minqpreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.Constructorminqpalglibminqpreport">
            <summary>Sets the shim of minqpreport.minqpreport(minqpreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.inneriterationscountGet">
            <summary>Sets the shim of minqpreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.inneriterationscountSetInt32">
            <summary>Sets the shim of minqpreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.innerobjGet">
            <summary>Sets the shim of minqpreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.ncholeskyGet">
            <summary>Sets the shim of minqpreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.ncholeskySetInt32">
            <summary>Sets the shim of minqpreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.nmvGet">
            <summary>Sets the shim of minqpreport.get_nmv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.nmvSetInt32">
            <summary>Sets the shim of minqpreport.set_nmv(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.outeriterationscountGet">
            <summary>Sets the shim of minqpreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.outeriterationscountSetInt32">
            <summary>Sets the shim of minqpreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.terminationtypeGet">
            <summary>Sets the shim of minqpreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.terminationtypeSetInt32">
            <summary>Sets the shim of minqpreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.inneriterationscountGet">
            <summary>Sets the shim of minqpreport.get_inneriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.inneriterationscountSetInt32">
            <summary>Sets the shim of minqpreport.set_inneriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.innerobjGet">
            <summary>Sets the shim of minqpreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.ncholeskyGet">
            <summary>Sets the shim of minqpreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.ncholeskySetInt32">
            <summary>Sets the shim of minqpreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.nmvGet">
            <summary>Sets the shim of minqpreport.get_nmv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.nmvSetInt32">
            <summary>Sets the shim of minqpreport.set_nmv(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.outeriterationscountGet">
            <summary>Sets the shim of minqpreport.get_outeriterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.outeriterationscountSetInt32">
            <summary>Sets the shim of minqpreport.set_outeriterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of minqpreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of minqpreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqpstate">
            <summary>Shim type of alglib+minqpstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpstate.#ctor(alglib.minqpstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimminqpstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpstate.Constructor">
            <summary>Sets the shim of minqpstate.minqpstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpstate.Constructorminqpalglibminqpstate">
            <summary>Sets the shim of minqpstate.minqpstate(minqpstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpstate.innerobjGet">
            <summary>Sets the shim of minqpstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimminqpstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimminqpstate.AllInstances.innerobjGet">
            <summary>Sets the shim of minqpstate.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpbase">
            <summary>Shim type of alglib+mlpbase</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.#ctor(alglib.mlpbase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.Constructor">
            <summary>Sets the shim of mlpbase.mlpbase()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.addactivationlayerInt32Int32ArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of mlpbase.addactivationlayer(Int32 functype, Int32[]&amp; lsizes, Int32[]&amp; ltypes, Int32[]&amp; lconnfirst, Int32[]&amp; lconnlast, Int32&amp; lastproc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.addbiasedsummatorlayerInt32Int32ArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of mlpbase.addbiasedsummatorlayer(Int32 ncount, Int32[]&amp; lsizes, Int32[]&amp; ltypes, Int32[]&amp; lconnfirst, Int32[]&amp; lconnlast, Int32&amp; lastproc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.addinputlayerInt32Int32ArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of mlpbase.addinputlayer(Int32 ncount, Int32[]&amp; lsizes, Int32[]&amp; ltypes, Int32[]&amp; lconnfirst, Int32[]&amp; lconnlast, Int32&amp; lastproc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.addzerolayerInt32ArrayRefInt32ArrayRefInt32ArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of mlpbase.addzerolayer(Int32[]&amp; lsizes, Int32[]&amp; ltypes, Int32[]&amp; lconnfirst, Int32[]&amp; lconnlast, Int32&amp; lastproc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.fillhighlevelinformationmlpbasealglibmultilayerperceptronInt32Int32Int32Int32BooleanBoolean">
            <summary>Sets the shim of mlpbase.fillhighlevelinformation(multilayerperceptron network, Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Boolean iscls, Boolean islinearout)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.hladdhiddenlayermlpbasealglibmultilayerperceptronInt32RefInt32RefInt32RefInt32RefInt32Int32Int32">
            <summary>Sets the shim of mlpbase.hladdhiddenlayer(multilayerperceptron network, Int32&amp; connidx, Int32&amp; neuroidx, Int32&amp; structinfoidx, Int32&amp; weightsidx, Int32 k, Int32 nprev, Int32 ncur)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.hladdinputlayermlpbasealglibmultilayerperceptronInt32RefInt32RefInt32RefInt32">
            <summary>Sets the shim of mlpbase.hladdinputlayer(multilayerperceptron network, Int32&amp; connidx, Int32&amp; neuroidx, Int32&amp; structinfoidx, Int32 nin)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.hladdoutputlayermlpbasealglibmultilayerperceptronInt32RefInt32RefInt32RefInt32RefInt32Int32Int32BooleanBoolean">
            <summary>Sets the shim of mlpbase.hladdoutputlayer(multilayerperceptron network, Int32&amp; connidx, Int32&amp; neuroidx, Int32&amp; structinfoidx, Int32&amp; weightsidx, Int32 k, Int32 nprev, Int32 nout, Boolean iscls, Boolean islinearout)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpactivationfunctionDoubleInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of mlpbase.mlpactivationfunction(Double net, Int32 k, Double&amp; f, Double&amp; df, Double&amp; d2f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpallocalglibserializermlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpalloc(serializer s, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpavgcemlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlpavgce(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpavgerrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlpavgerror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpavgrelerrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlpavgrelerror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpchunkedgradientmlpbasealglibmultilayerperceptronDoubleMdArray2Int32Int32DoubleRefDoubleArrayRefBoolean">
            <summary>Sets the shim of mlpbase.mlpchunkedgradient(multilayerperceptron network, Double[,] xy, Int32 cstart, Int32 csize, Double&amp; e, Double[]&amp; grad, Boolean naturalerrorfunc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpclserrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlpclserror(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcopymlpbasealglibmultilayerperceptronmlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcopy(multilayerperceptron network1, multilayerperceptron network2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreate0Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreate0(Int32 nin, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreate1Int32Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreate1(Int32 nin, Int32 nhid, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreate2Int32Int32Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreate2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreateInt32Int32Int32ArrayInt32ArrayInt32ArrayInt32ArrayInt32Booleanmlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreate(Int32 nin, Int32 nout, Int32[] lsizes, Int32[] ltypes, Int32[] lconnfirst, Int32[] lconnlast, Int32 layerscount, Boolean isclsnet, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreateb0Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreateb0(Int32 nin, Int32 nout, Double b, Double d, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreateb1Int32Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreateb1(Int32 nin, Int32 nhid, Int32 nout, Double b, Double d, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreateb2Int32Int32Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreateb2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double b, Double d, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreatec0Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreatec0(Int32 nin, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreatec1Int32Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreatec1(Int32 nin, Int32 nhid, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreatec2Int32Int32Int32Int32mlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreatec2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreater0Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreater0(Int32 nin, Int32 nout, Double a, Double b, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreater1Int32Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreater1(Int32 nin, Int32 nhid, Int32 nout, Double a, Double b, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpcreater2Int32Int32Int32Int32DoubleDoublemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpcreater2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double a, Double b, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlperrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlperror(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlperrornmlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlperrorn(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetinputscalingmlpbasealglibmultilayerperceptronInt32DoubleRefDoubleRef">
            <summary>Sets the shim of mlpbase.mlpgetinputscaling(multilayerperceptron network, Int32 i, Double&amp; mean, Double&amp; sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetlayerscountmlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpgetlayerscount(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetlayersizemlpbasealglibmultilayerperceptronInt32">
            <summary>Sets the shim of mlpbase.mlpgetlayersize(multilayerperceptron network, Int32 k)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetneuroninfomlpbasealglibmultilayerperceptronInt32Int32Int32RefDoubleRef">
            <summary>Sets the shim of mlpbase.mlpgetneuroninfo(multilayerperceptron network, Int32 k, Int32 i, Int32&amp; fkind, Double&amp; threshold)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetoutputscalingmlpbasealglibmultilayerperceptronInt32DoubleRefDoubleRef">
            <summary>Sets the shim of mlpbase.mlpgetoutputscaling(multilayerperceptron network, Int32 i, Double&amp; mean, Double&amp; sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgetweightmlpbasealglibmultilayerperceptronInt32Int32Int32Int32">
            <summary>Sets the shim of mlpbase.mlpgetweight(multilayerperceptron network, Int32 k0, Int32 i0, Int32 k1, Int32 i1)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgradbatchmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleRefDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpgradbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgradmlpbasealglibmultilayerperceptronDoubleArrayDoubleArrayDoubleRefDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpgrad(multilayerperceptron network, Double[] x, Double[] desiredy, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgradnbatchmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleRefDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpgradnbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpgradnmlpbasealglibmultilayerperceptronDoubleArrayDoubleArrayDoubleRefDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpgradn(multilayerperceptron network, Double[] x, Double[] desiredy, Double&amp; e, Double[]&amp; grad)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlphessianbatchinternalmlpbasealglibmultilayerperceptronDoubleMdArray2Int32BooleanDoubleRefDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of mlpbase.mlphessianbatchinternal(multilayerperceptron network, Double[,] xy, Int32 ssize, Boolean naturalerr, Double&amp; e, Double[]&amp; grad, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlphessianbatchmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleRefDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of mlpbase.mlphessianbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlphessiannbatchmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleRefDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of mlpbase.mlphessiannbatch(multilayerperceptron network, Double[,] xy, Int32 ssize, Double&amp; e, Double[]&amp; grad, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpinitpreprocessormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlpinitpreprocessor(multilayerperceptron network, Double[,] xy, Int32 ssize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpinternalcalculategradientmlpbasealglibmultilayerperceptronDoubleArrayDoubleArrayDoubleArrayRefDoubleArrayRefBoolean">
            <summary>Sets the shim of mlpbase.mlpinternalcalculategradient(multilayerperceptron network, Double[] neurons, Double[] weights, Double[]&amp; derror, Double[]&amp; grad, Boolean naturalerrorfunc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpinternalprocessvectorInt32ArrayDoubleArrayDoubleArrayDoubleArrayDoubleArrayRefDoubleArrayRefDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpinternalprocessvector(Int32[] structinfo, Double[] weights, Double[] columnmeans, Double[] columnsigmas, Double[]&amp; neurons, Double[]&amp; dfdnet, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpissoftmaxmlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpissoftmax(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpprocessimlpbasealglibmultilayerperceptronDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpprocessi(multilayerperceptron network, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpprocessmlpbasealglibmultilayerperceptronDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of mlpbase.mlpprocess(multilayerperceptron network, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlppropertiesmlpbasealglibmultilayerperceptronInt32RefInt32RefInt32Ref">
            <summary>Sets the shim of mlpbase.mlpproperties(multilayerperceptron network, Int32&amp; nin, Int32&amp; nout, Int32&amp; wcount)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlprandomizefullmlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlprandomizefull(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlprandomizemlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlprandomize(multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlprelclserrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlprelclserror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlprmserrormlpbasealglibmultilayerperceptronDoubleMdArray2Int32">
            <summary>Sets the shim of mlpbase.mlprmserror(multilayerperceptron network, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpserializealglibserializermlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpserialize(serializer s, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpserializeoldmlpbasealglibmultilayerperceptronDoubleArrayRefInt32Ref">
            <summary>Sets the shim of mlpbase.mlpserializeold(multilayerperceptron network, Double[]&amp; ra, Int32&amp; rlen)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpsetinputscalingmlpbasealglibmultilayerperceptronInt32DoubleDouble">
            <summary>Sets the shim of mlpbase.mlpsetinputscaling(multilayerperceptron network, Int32 i, Double mean, Double sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpsetneuroninfomlpbasealglibmultilayerperceptronInt32Int32Int32Double">
            <summary>Sets the shim of mlpbase.mlpsetneuroninfo(multilayerperceptron network, Int32 k, Int32 i, Int32 fkind, Double threshold)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpsetoutputscalingmlpbasealglibmultilayerperceptronInt32DoubleDouble">
            <summary>Sets the shim of mlpbase.mlpsetoutputscaling(multilayerperceptron network, Int32 i, Double mean, Double sigma)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpsetweightmlpbasealglibmultilayerperceptronInt32Int32Int32Int32Double">
            <summary>Sets the shim of mlpbase.mlpsetweight(multilayerperceptron network, Int32 k0, Int32 i0, Int32 k1, Int32 i1, Double w)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpunserializealglibserializermlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpunserialize(serializer s, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.mlpunserializeoldDoubleArraymlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of mlpbase.mlpunserializeold(Double[] ra, multilayerperceptron network)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.safecrossentropyDoubleDouble">
            <summary>Sets the shim of mlpbase.safecrossentropy(Double t, Double z)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpbase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron">
            <summary>Shim type of alglib+mlpbase+multilayerperceptron</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.#ctor(alglib.mlpbase.multilayerperceptron)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.Constructor">
            <summary>Sets the shim of multilayerperceptron.multilayerperceptron()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpbase.Shimmultilayerperceptron.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpcvreport">
            <summary>Shim type of alglib+mlpcvreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpcvreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpcvreport.#ctor(alglib.mlpcvreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpcvreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpcvreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.Constructor">
            <summary>Sets the shim of mlpcvreport.mlpcvreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.Constructormlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlpcvreport.mlpcvreport(mlpcvreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgceGet">
            <summary>Sets the shim of mlpcvreport.get_avgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgceSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgerrorGet">
            <summary>Sets the shim of mlpcvreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgerrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgrelerrorGet">
            <summary>Sets the shim of mlpcvreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.avgrelerrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.innerobjGet">
            <summary>Sets the shim of mlpcvreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.relclserrorGet">
            <summary>Sets the shim of mlpcvreport.get_relclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.relclserrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_relclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.rmserrorGet">
            <summary>Sets the shim of mlpcvreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.rmserrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgceGet">
            <summary>Sets the shim of mlpcvreport.get_avgce()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgceSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgce(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of mlpcvreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of mlpcvreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.innerobjGet">
            <summary>Sets the shim of mlpcvreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.relclserrorGet">
            <summary>Sets the shim of mlpcvreport.get_relclserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.relclserrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_relclserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of mlpcvreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpcvreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of mlpcvreport.set_rmserror(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpe">
            <summary>Shim type of alglib+mlpe</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.#ctor(alglib.mlpe)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.Constructor">
            <summary>Sets the shim of mlpe.mlpe()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeallerrorsmlpealglibmlpensembleDoubleMdArray2Int32DoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of mlpe.mlpeallerrors(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double&amp; relcls, Double&amp; avgce, Double&amp; rms, Double&amp; avg, Double&amp; avgrel)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeavgcemlpealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of mlpe.mlpeavgce(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeavgerrormlpealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of mlpe.mlpeavgerror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeavgrelerrormlpealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of mlpe.mlpeavgrelerror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpebagginginternalmlpealglibmlpensembleDoubleMdArray2Int32DoubleInt32DoubleInt32BooleanInt32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlpe.mlpebagginginternal(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Boolean lmalgorithm, Int32&amp; info, mlpreport rep, mlpcvreport ooberrors)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpebagginglbfgsmlpealglibmlpensembleDoubleMdArray2Int32DoubleInt32DoubleInt32Int32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlpe.mlpebagginglbfgs(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32&amp; info, mlpreport rep, mlpcvreport ooberrors)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpebagginglmmlpealglibmlpensembleDoubleMdArray2Int32DoubleInt32Int32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlpe.mlpebagginglm(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport rep, mlpcvreport ooberrors)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecopymlpealglibmlpensemblemlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecopy(mlpensemble ensemble1, mlpensemble ensemble2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreate0Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreate0(Int32 nin, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreate1Int32Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreate1(Int32 nin, Int32 nhid, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreate2Int32Int32Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreate2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreateb0Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreateb0(Int32 nin, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreateb1Int32Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreateb1(Int32 nin, Int32 nhid, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreateb2Int32Int32Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreateb2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double b, Double d, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreatec0Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreatec0(Int32 nin, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreatec1Int32Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreatec1(Int32 nin, Int32 nhid, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreatec2Int32Int32Int32Int32Int32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreatec2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreatefromnetworkmlpbasealglibmultilayerperceptronInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreatefromnetwork(multilayerperceptron network, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreater0Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreater0(Int32 nin, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreater1Int32Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreater1(Int32 nin, Int32 nhid, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpecreater2Int32Int32Int32Int32DoubleDoubleInt32mlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpecreater2(Int32 nin, Int32 nhid1, Int32 nhid2, Int32 nout, Double a, Double b, Int32 ensemblesize, mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeissoftmaxmlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpeissoftmax(mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeprocessimlpealglibmlpensembleDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of mlpe.mlpeprocessi(mlpensemble ensemble, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeprocessmlpealglibmlpensembleDoubleArrayDoubleArrayRef">
            <summary>Sets the shim of mlpe.mlpeprocess(mlpensemble ensemble, Double[] x, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpepropertiesmlpealglibmlpensembleInt32RefInt32Ref">
            <summary>Sets the shim of mlpe.mlpeproperties(mlpensemble ensemble, Int32&amp; nin, Int32&amp; nout)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlperandomizemlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlperandomize(mlpensemble ensemble)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlperelclserrormlpealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of mlpe.mlperelclserror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpermserrormlpealglibmlpensembleDoubleMdArray2Int32">
            <summary>Sets the shim of mlpe.mlpermserror(mlpensemble ensemble, Double[,] xy, Int32 npoints)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeserializemlpealglibmlpensembleDoubleArrayRefInt32Ref">
            <summary>Sets the shim of mlpe.mlpeserialize(mlpensemble ensemble, Double[]&amp; ra, Int32&amp; rlen)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpetrainesmlpealglibmlpensembleDoubleMdArray2Int32DoubleInt32Int32Refmlptrainalglibmlpreport">
            <summary>Sets the shim of mlpe.mlpetraines(mlpensemble ensemble, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.mlpeunserializeDoubleArraymlpealglibmlpensemble">
            <summary>Sets the shim of mlpe.mlpeunserialize(Double[] ra, mlpensemble ensemble)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpe.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble">
            <summary>Shim type of alglib+mlpe+mlpensemble</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.#ctor(alglib.mlpe.mlpensemble)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.Constructor">
            <summary>Sets the shim of mlpensemble.mlpensemble()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpe.Shimmlpensemble.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpensemble">
            <summary>Shim type of alglib+mlpensemble</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpensemble.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpensemble.#ctor(alglib.mlpensemble)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpensemble.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpensemble.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpensemble.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpensemble.Constructor">
            <summary>Sets the shim of mlpensemble.mlpensemble()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpensemble.Constructormlpealglibmlpensemble">
            <summary>Sets the shim of mlpensemble.mlpensemble(mlpensemble obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpensemble.innerobjGet">
            <summary>Sets the shim of mlpensemble.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpensemble.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpensemble.AllInstances.innerobjGet">
            <summary>Sets the shim of mlpensemble.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpreport">
            <summary>Shim type of alglib+mlpreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpreport.#ctor(alglib.mlpreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlpreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.Constructor">
            <summary>Sets the shim of mlpreport.mlpreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.Constructormlptrainalglibmlpreport">
            <summary>Sets the shim of mlpreport.mlpreport(mlpreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.innerobjGet">
            <summary>Sets the shim of mlpreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.ncholeskyGet">
            <summary>Sets the shim of mlpreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.ncholeskySetInt32">
            <summary>Sets the shim of mlpreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.ngradGet">
            <summary>Sets the shim of mlpreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.ngradSetInt32">
            <summary>Sets the shim of mlpreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.nhessGet">
            <summary>Sets the shim of mlpreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.nhessSetInt32">
            <summary>Sets the shim of mlpreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.innerobjGet">
            <summary>Sets the shim of mlpreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.ncholeskyGet">
            <summary>Sets the shim of mlpreport.get_ncholesky()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.ncholeskySetInt32">
            <summary>Sets the shim of mlpreport.set_ncholesky(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.ngradGet">
            <summary>Sets the shim of mlpreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.ngradSetInt32">
            <summary>Sets the shim of mlpreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.nhessGet">
            <summary>Sets the shim of mlpreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlpreport.AllInstances.nhessSetInt32">
            <summary>Sets the shim of mlpreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain">
            <summary>Shim type of alglib+mlptrain</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.#ctor(alglib.mlptrain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Constructor">
            <summary>Sets the shim of mlptrain.mlptrain()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlpkfoldcvgeneralmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32Int32BooleanDoubleInt32Int32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlptrain.mlpkfoldcvgeneral(multilayerperceptron n, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32 foldscount, Boolean lmalgorithm, Double wstep, Int32 maxits, Int32&amp; info, mlpreport rep, mlpcvreport cvrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlpkfoldcvlbfgsmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32DoubleInt32Int32Int32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlptrain.mlpkfoldcvlbfgs(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32 foldscount, Int32&amp; info, mlpreport rep, mlpcvreport cvrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlpkfoldcvlmmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32Int32Int32Refmlptrainalglibmlpreportmlptrainalglibmlpcvreport">
            <summary>Sets the shim of mlptrain.mlpkfoldcvlm(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32 foldscount, Int32&amp; info, mlpreport rep, mlpcvreport cvrep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlpkfoldsplitDoubleMdArray2Int32Int32Int32BooleanInt32ArrayRef">
            <summary>Sets the shim of mlptrain.mlpkfoldsplit(Double[,] xy, Int32 npoints, Int32 nclasses, Int32 foldscount, Boolean stratifiedsplits, Int32[]&amp; folds)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlptrainesmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleMdArray2Int32DoubleInt32Int32Refmlptrainalglibmlpreport">
            <summary>Sets the shim of mlptrain.mlptraines(multilayerperceptron network, Double[,] trnxy, Int32 trnsize, Double[,] valxy, Int32 valsize, Double decay, Int32 restarts, Int32&amp; info, mlpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlptrainlbfgsmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32DoubleInt32Int32Refmlptrainalglibmlpreport">
            <summary>Sets the shim of mlptrain.mlptrainlbfgs(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Double wstep, Int32 maxits, Int32&amp; info, mlpreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.mlptrainlmmlpbasealglibmultilayerperceptronDoubleMdArray2Int32DoubleInt32Int32Refmlptrainalglibmlpreport">
            <summary>Sets the shim of mlptrain.mlptrainlm(multilayerperceptron network, Double[,] xy, Int32 npoints, Double decay, Int32 restarts, Int32&amp; info, mlpreport rep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport">
            <summary>Shim type of alglib+mlptrain+mlpcvreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.#ctor(alglib.mlptrain.mlpcvreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.Constructor">
            <summary>Sets the shim of mlpcvreport.mlpcvreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpcvreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport">
            <summary>Shim type of alglib+mlptrain+mlpreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.#ctor(alglib.mlptrain.mlpreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.Constructor">
            <summary>Sets the shim of mlpreport.mlpreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmlptrain.Shimmlpreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmnlreport">
            <summary>Shim type of alglib+mnlreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmnlreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmnlreport.#ctor(alglib.mnlreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmnlreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmnlreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.Constructor">
            <summary>Sets the shim of mnlreport.mnlreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.Constructorlogitalglibmnlreport">
            <summary>Sets the shim of mnlreport.mnlreport(mnlreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.innerobjGet">
            <summary>Sets the shim of mnlreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.ngradGet">
            <summary>Sets the shim of mnlreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.ngradSetInt32">
            <summary>Sets the shim of mnlreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.nhessGet">
            <summary>Sets the shim of mnlreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.nhessSetInt32">
            <summary>Sets the shim of mnlreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances.innerobjGet">
            <summary>Sets the shim of mnlreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances.ngradGet">
            <summary>Sets the shim of mnlreport.get_ngrad()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances.ngradSetInt32">
            <summary>Sets the shim of mnlreport.set_ngrad(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances.nhessGet">
            <summary>Sets the shim of mnlreport.get_nhess()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmnlreport.AllInstances.nhessSetInt32">
            <summary>Sets the shim of mnlreport.set_nhess(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmultilayerperceptron">
            <summary>Shim type of alglib+multilayerperceptron</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmultilayerperceptron.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmultilayerperceptron.#ctor(alglib.multilayerperceptron)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmultilayerperceptron.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimmultilayerperceptron.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmultilayerperceptron.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmultilayerperceptron.Constructor">
            <summary>Sets the shim of multilayerperceptron.multilayerperceptron()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmultilayerperceptron.Constructormlpbasealglibmultilayerperceptron">
            <summary>Sets the shim of multilayerperceptron.multilayerperceptron(multilayerperceptron obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmultilayerperceptron.innerobjGet">
            <summary>Sets the shim of multilayerperceptron.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimmultilayerperceptron.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimmultilayerperceptron.AllInstances.innerobjGet">
            <summary>Sets the shim of multilayerperceptron.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearestneighbor">
            <summary>Shim type of alglib+nearestneighbor</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.#ctor(alglib.nearestneighbor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.Constructor">
            <summary>Sets the shim of nearestneighbor.nearestneighbor()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeallocalglibserializernearestneighboralglibkdtree">
            <summary>Sets the shim of nearestneighbor.kdtreealloc(serializer s, kdtree tree)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeallocdatasetdependentnearestneighboralglibkdtreeInt32Int32Int32">
            <summary>Sets the shim of nearestneighbor.kdtreeallocdatasetdependent(kdtree kdt, Int32 n, Int32 nx, Int32 ny)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeallocdatasetindependentnearestneighboralglibkdtreeInt32Int32">
            <summary>Sets the shim of nearestneighbor.kdtreeallocdatasetindependent(kdtree kdt, Int32 nx, Int32 ny)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreealloctemporariesnearestneighboralglibkdtreeInt32Int32Int32">
            <summary>Sets the shim of nearestneighbor.kdtreealloctemporaries(kdtree kdt, Int32 n, Int32 nx, Int32 ny)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreebuildDoubleMdArray2Int32Int32Int32Int32nearestneighboralglibkdtree">
            <summary>Sets the shim of nearestneighbor.kdtreebuild(Double[,] xy, Int32 n, Int32 nx, Int32 ny, Int32 normtype, kdtree kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreebuildtaggedDoubleMdArray2Int32ArrayInt32Int32Int32Int32nearestneighboralglibkdtree">
            <summary>Sets the shim of nearestneighbor.kdtreebuildtagged(Double[,] xy, Int32[] tags, Int32 n, Int32 nx, Int32 ny, Int32 normtype, kdtree kdt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreegeneratetreerecnearestneighboralglibkdtreeInt32RefInt32RefInt32Int32Int32">
            <summary>Sets the shim of nearestneighbor.kdtreegeneratetreerec(kdtree kdt, Int32&amp; nodesoffs, Int32&amp; splitsoffs, Int32 i1, Int32 i2, Int32 maxleafsize)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeinitboxnearestneighboralglibkdtreeDoubleArray">
            <summary>Sets the shim of nearestneighbor.kdtreeinitbox(kdtree kdt, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryaknnnearestneighboralglibkdtreeDoubleArrayInt32BooleanDouble">
            <summary>Sets the shim of nearestneighbor.kdtreequeryaknn(kdtree kdt, Double[] x, Int32 k, Boolean selfmatch, Double eps)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryknnnearestneighboralglibkdtreeDoubleArrayInt32Boolean">
            <summary>Sets the shim of nearestneighbor.kdtreequeryknn(kdtree kdt, Double[] x, Int32 k, Boolean selfmatch)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequerynnrecnearestneighboralglibkdtreeInt32">
            <summary>Sets the shim of nearestneighbor.kdtreequerynnrec(kdtree kdt, Int32 offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsdistancesinearestneighboralglibkdtreeDoubleArrayRef">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsdistancesi(kdtree kdt, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsdistancesnearestneighboralglibkdtreeDoubleArrayRef">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsdistances(kdtree kdt, Double[]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultstagsinearestneighboralglibkdtreeInt32ArrayRef">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultstagsi(kdtree kdt, Int32[]&amp; tags)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultstagsnearestneighboralglibkdtreeInt32ArrayRef">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultstags(kdtree kdt, Int32[]&amp; tags)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsxinearestneighboralglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsxi(kdtree kdt, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsxnearestneighboralglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsx(kdtree kdt, Double[,]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsxyinearestneighboralglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsxyi(kdtree kdt, Double[,]&amp; xy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryresultsxynearestneighboralglibkdtreeDoubleMdArray2Ref">
            <summary>Sets the shim of nearestneighbor.kdtreequeryresultsxy(kdtree kdt, Double[,]&amp; xy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreequeryrnnnearestneighboralglibkdtreeDoubleArrayDoubleBoolean">
            <summary>Sets the shim of nearestneighbor.kdtreequeryrnn(kdtree kdt, Double[] x, Double r, Boolean selfmatch)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeserializealglibserializernearestneighboralglibkdtree">
            <summary>Sets the shim of nearestneighbor.kdtreeserialize(serializer s, kdtree tree)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreesplitnearestneighboralglibkdtreeInt32Int32Int32DoubleInt32Ref">
            <summary>Sets the shim of nearestneighbor.kdtreesplit(kdtree kdt, Int32 i1, Int32 i2, Int32 d, Double s, Int32&amp; i3)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.kdtreeunserializealglibserializernearestneighboralglibkdtree">
            <summary>Sets the shim of nearestneighbor.kdtreeunserialize(serializer s, kdtree tree)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearestneighbor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree">
            <summary>Shim type of alglib+nearestneighbor+kdtree</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.#ctor(alglib.nearestneighbor.kdtree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.Constructor">
            <summary>Sets the shim of kdtree.kdtree()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearestneighbor.Shimkdtree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearunityunit">
            <summary>Shim type of alglib+nearunityunit</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearunityunit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearunityunit.#ctor(alglib.nearunityunit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearunityunit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnearunityunit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearunityunit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearunityunit.Constructor">
            <summary>Sets the shim of nearunityunit.nearunityunit()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearunityunit.nucosm1Double">
            <summary>Sets the shim of nearunityunit.nucosm1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearunityunit.nuexpm1Double">
            <summary>Sets the shim of nearunityunit.nuexpm1(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnearunityunit.nulog1pDouble">
            <summary>Sets the shim of nearunityunit.nulog1p(Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnearunityunit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq">
            <summary>Shim type of alglib+nleq</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.#ctor(alglib.nleq)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Constructor">
            <summary>Sets the shim of nleq.nleq()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.clearrequestfieldsnleqalglibnleqstate">
            <summary>Sets the shim of nleq.clearrequestfields(nleqstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.decreaselambdaDoubleRefDoubleRefDouble">
            <summary>Sets the shim of nleq.decreaselambda(Double&amp; lambdav, Double&amp; nu, Double lambdadown)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.increaselambdaDoubleRefDoubleRefDouble">
            <summary>Sets the shim of nleq.increaselambda(Double&amp; lambdav, Double&amp; nu, Double lambdaup)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqcreatelmInt32Int32DoubleArraynleqalglibnleqstate">
            <summary>Sets the shim of nleq.nleqcreatelm(Int32 n, Int32 m, Double[] x, nleqstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqiterationnleqalglibnleqstate">
            <summary>Sets the shim of nleq.nleqiteration(nleqstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqrestartfromnleqalglibnleqstateDoubleArray">
            <summary>Sets the shim of nleq.nleqrestartfrom(nleqstate state, Double[] x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqresultsbufnleqalglibnleqstateDoubleArrayRefnleqalglibnleqreport">
            <summary>Sets the shim of nleq.nleqresultsbuf(nleqstate state, Double[]&amp; x, nleqreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqresultsnleqalglibnleqstateDoubleArrayRefnleqalglibnleqreport">
            <summary>Sets the shim of nleq.nleqresults(nleqstate state, Double[]&amp; x, nleqreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqsetcondnleqalglibnleqstateDoubleInt32">
            <summary>Sets the shim of nleq.nleqsetcond(nleqstate state, Double epsf, Int32 maxits)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqsetstpmaxnleqalglibnleqstateDouble">
            <summary>Sets the shim of nleq.nleqsetstpmax(nleqstate state, Double stpmax)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.nleqsetxrepnleqalglibnleqstateBoolean">
            <summary>Sets the shim of nleq.nleqsetxrep(nleqstate state, Boolean needxrep)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport">
            <summary>Shim type of alglib+nleq+nleqreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.#ctor(alglib.nleq.nleqreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.Constructor">
            <summary>Sets the shim of nleqreport.nleqreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq.Shimnleqreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate">
            <summary>Shim type of alglib+nleq+nleqstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.#ctor(alglib.nleq.nleqstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.Constructor">
            <summary>Sets the shim of nleqstate.nleqstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleq.Shimnleqstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleqreport">
            <summary>Shim type of alglib+nleqreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqreport.#ctor(alglib.nleqreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.Constructor">
            <summary>Sets the shim of nleqreport.nleqreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.Constructornleqalglibnleqreport">
            <summary>Sets the shim of nleqreport.nleqreport(nleqreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.innerobjGet">
            <summary>Sets the shim of nleqreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.iterationscountGet">
            <summary>Sets the shim of nleqreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.iterationscountSetInt32">
            <summary>Sets the shim of nleqreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.nfuncGet">
            <summary>Sets the shim of nleqreport.get_nfunc()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.nfuncSetInt32">
            <summary>Sets the shim of nleqreport.set_nfunc(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.njacGet">
            <summary>Sets the shim of nleqreport.get_njac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.njacSetInt32">
            <summary>Sets the shim of nleqreport.set_njac(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.terminationtypeGet">
            <summary>Sets the shim of nleqreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.terminationtypeSetInt32">
            <summary>Sets the shim of nleqreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.innerobjGet">
            <summary>Sets the shim of nleqreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.iterationscountGet">
            <summary>Sets the shim of nleqreport.get_iterationscount()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.iterationscountSetInt32">
            <summary>Sets the shim of nleqreport.set_iterationscount(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.nfuncGet">
            <summary>Sets the shim of nleqreport.get_nfunc()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.nfuncSetInt32">
            <summary>Sets the shim of nleqreport.set_nfunc(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.njacGet">
            <summary>Sets the shim of nleqreport.get_njac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.njacSetInt32">
            <summary>Sets the shim of nleqreport.set_njac(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of nleqreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of nleqreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleqstate">
            <summary>Shim type of alglib+nleqstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqstate.#ctor(alglib.nleqstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnleqstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.Constructor">
            <summary>Sets the shim of nleqstate.nleqstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.Constructornleqalglibnleqstate">
            <summary>Sets the shim of nleqstate.nleqstate(nleqstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.fGet">
            <summary>Sets the shim of nleqstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.fSetDouble">
            <summary>Sets the shim of nleqstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.fiGet">
            <summary>Sets the shim of nleqstate.get_fi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.innerobjGet">
            <summary>Sets the shim of nleqstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.jGet">
            <summary>Sets the shim of nleqstate.get_j()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.needfGet">
            <summary>Sets the shim of nleqstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.needfSetBoolean">
            <summary>Sets the shim of nleqstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.needfijGet">
            <summary>Sets the shim of nleqstate.get_needfij()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.needfijSetBoolean">
            <summary>Sets the shim of nleqstate.set_needfij(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.xGet">
            <summary>Sets the shim of nleqstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.xupdatedGet">
            <summary>Sets the shim of nleqstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.xupdatedSetBoolean">
            <summary>Sets the shim of nleqstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.fGet">
            <summary>Sets the shim of nleqstate.get_f()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.fSetDouble">
            <summary>Sets the shim of nleqstate.set_f(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.fiGet">
            <summary>Sets the shim of nleqstate.get_fi()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.innerobjGet">
            <summary>Sets the shim of nleqstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.jGet">
            <summary>Sets the shim of nleqstate.get_j()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.needfGet">
            <summary>Sets the shim of nleqstate.get_needf()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.needfSetBoolean">
            <summary>Sets the shim of nleqstate.set_needf(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.needfijGet">
            <summary>Sets the shim of nleqstate.get_needfij()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.needfijSetBoolean">
            <summary>Sets the shim of nleqstate.set_needfij(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.xGet">
            <summary>Sets the shim of nleqstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.xupdatedGet">
            <summary>Sets the shim of nleqstate.get_xupdated()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnleqstate.AllInstances.xupdatedSetBoolean">
            <summary>Sets the shim of nleqstate.set_xupdated(Boolean value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnormaldistr">
            <summary>Shim type of alglib+normaldistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnormaldistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnormaldistr.#ctor(alglib.normaldistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnormaldistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimnormaldistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.Constructor">
            <summary>Sets the shim of normaldistr.normaldistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.errorfunctionDouble">
            <summary>Sets the shim of normaldistr.errorfunction(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.errorfunctioncDouble">
            <summary>Sets the shim of normaldistr.errorfunctionc(Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.inverfDouble">
            <summary>Sets the shim of normaldistr.inverf(Double e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.invnormaldistributionDouble">
            <summary>Sets the shim of normaldistr.invnormaldistribution(Double y0)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimnormaldistr.normaldistributionDouble">
            <summary>Sets the shim of normaldistr.normaldistribution(Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimnormaldistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver">
            <summary>Shim type of alglib+odesolver</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.#ctor(alglib.odesolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Constructor">
            <summary>Sets the shim of odesolver.odesolver()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.odesolverinitInt32DoubleArrayInt32DoubleArrayInt32DoubleDoubleodesolveralglibodesolverstate">
            <summary>Sets the shim of odesolver.odesolverinit(Int32 solvertype, Double[] y, Int32 n, Double[] x, Int32 m, Double eps, Double h, odesolverstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.odesolveriterationodesolveralglibodesolverstate">
            <summary>Sets the shim of odesolver.odesolveriteration(odesolverstate state)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.odesolverresultsodesolveralglibodesolverstateInt32RefDoubleArrayRefDoubleMdArray2Refodesolveralglibodesolverreport">
            <summary>Sets the shim of odesolver.odesolverresults(odesolverstate state, Int32&amp; m, Double[]&amp; xtbl, Double[,]&amp; ytbl, odesolverreport rep)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.odesolverrkckDoubleArrayInt32DoubleArrayInt32DoubleDoubleodesolveralglibodesolverstate">
            <summary>Sets the shim of odesolver.odesolverrkck(Double[] y, Int32 n, Double[] x, Int32 m, Double eps, Double h, odesolverstate state)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport">
            <summary>Shim type of alglib+odesolver+odesolverreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.#ctor(alglib.odesolver.odesolverreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.Constructor">
            <summary>Sets the shim of odesolverreport.odesolverreport()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate">
            <summary>Shim type of alglib+odesolver+odesolverstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.#ctor(alglib.odesolver.odesolverstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.Constructor">
            <summary>Sets the shim of odesolverstate.odesolverstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolver.Shimodesolverstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolverreport">
            <summary>Shim type of alglib+odesolverreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverreport.#ctor(alglib.odesolverreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.Constructor">
            <summary>Sets the shim of odesolverreport.odesolverreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.Constructorodesolveralglibodesolverreport">
            <summary>Sets the shim of odesolverreport.odesolverreport(odesolverreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.innerobjGet">
            <summary>Sets the shim of odesolverreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.nfevGet">
            <summary>Sets the shim of odesolverreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.nfevSetInt32">
            <summary>Sets the shim of odesolverreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.terminationtypeGet">
            <summary>Sets the shim of odesolverreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.terminationtypeSetInt32">
            <summary>Sets the shim of odesolverreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances.innerobjGet">
            <summary>Sets the shim of odesolverreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances.nfevGet">
            <summary>Sets the shim of odesolverreport.get_nfev()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances.nfevSetInt32">
            <summary>Sets the shim of odesolverreport.set_nfev(Int32 value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances.terminationtypeGet">
            <summary>Sets the shim of odesolverreport.get_terminationtype()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverreport.AllInstances.terminationtypeSetInt32">
            <summary>Sets the shim of odesolverreport.set_terminationtype(Int32 value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolverstate">
            <summary>Shim type of alglib+odesolverstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverstate.#ctor(alglib.odesolverstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimodesolverstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.Constructor">
            <summary>Sets the shim of odesolverstate.odesolverstate()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.Constructorodesolveralglibodesolverstate">
            <summary>Sets the shim of odesolverstate.odesolverstate(odesolverstate obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.dyGet">
            <summary>Sets the shim of odesolverstate.get_dy()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.innerobjGet">
            <summary>Sets the shim of odesolverstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.needdyGet">
            <summary>Sets the shim of odesolverstate.get_needdy()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.needdySetBoolean">
            <summary>Sets the shim of odesolverstate.set_needdy(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.xGet">
            <summary>Sets the shim of odesolverstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.xSetDouble">
            <summary>Sets the shim of odesolverstate.set_x(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.yGet">
            <summary>Sets the shim of odesolverstate.get_y()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.dyGet">
            <summary>Sets the shim of odesolverstate.get_dy()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.innerobjGet">
            <summary>Sets the shim of odesolverstate.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.needdyGet">
            <summary>Sets the shim of odesolverstate.get_needdy()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.needdySetBoolean">
            <summary>Sets the shim of odesolverstate.set_needdy(Boolean value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.xGet">
            <summary>Sets the shim of odesolverstate.get_x()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.xSetDouble">
            <summary>Sets the shim of odesolverstate.set_x(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimodesolverstate.AllInstances.yGet">
            <summary>Sets the shim of odesolverstate.get_y()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimoptserv">
            <summary>Shim type of alglib+optserv</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimoptserv.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimoptserv.#ctor(alglib.optserv)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimoptserv.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimoptserv.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimoptserv.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimoptserv.Constructor">
            <summary>Sets the shim of optserv.optserv()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimoptserv.trimfunctionDoubleRefDoubleArrayRefInt32Double">
            <summary>Sets the shim of optserv.trimfunction(Double&amp; f, Double[]&amp; g, Int32 n, Double threshold)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimoptserv.trimprepareDoubleDoubleRef">
            <summary>Sets the shim of optserv.trimprepare(Double f, Double&amp; threshold)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimoptserv.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimortfac">
            <summary>Shim type of alglib+ortfac</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimortfac.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimortfac.#ctor(alglib.ortfac)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimortfac.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimortfac.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.Constructor">
            <summary>Sets the shim of ortfac.ortfac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixblockreflectoralglibcomplexMdArray2RefalglibcomplexArrayRefBooleanInt32Int32alglibcomplexMdArray2RefalglibcomplexArrayRef">
            <summary>Sets the shim of ortfac.cmatrixblockreflector(complex[,]&amp; a, complex[]&amp; tau, Boolean columnwisea, Int32 lengtha, Int32 blocksize, complex[,]&amp; t, complex[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixlqalglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRef">
            <summary>Sets the shim of ortfac.cmatrixlq(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixlqbasecasealglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefalglibcomplexArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of ortfac.cmatrixlqbasecase(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; work, complex[]&amp; t, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixlqunpacklalglibcomplexMdArray2Int32Int32alglibcomplexMdArray2Ref">
            <summary>Sets the shim of ortfac.cmatrixlqunpackl(complex[,] a, Int32 m, Int32 n, complex[,]&amp; l)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixlqunpackqalglibcomplexMdArray2Int32Int32alglibcomplexArrayInt32alglibcomplexMdArray2Ref">
            <summary>Sets the shim of ortfac.cmatrixlqunpackq(complex[,] a, Int32 m, Int32 n, complex[] tau, Int32 qrows, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixqralglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRef">
            <summary>Sets the shim of ortfac.cmatrixqr(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixqrbasecasealglibcomplexMdArray2RefInt32Int32alglibcomplexArrayRefalglibcomplexArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of ortfac.cmatrixqrbasecase(complex[,]&amp; a, Int32 m, Int32 n, complex[]&amp; work, complex[]&amp; t, complex[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixqrunpackqalglibcomplexMdArray2Int32Int32alglibcomplexArrayInt32alglibcomplexMdArray2Ref">
            <summary>Sets the shim of ortfac.cmatrixqrunpackq(complex[,] a, Int32 m, Int32 n, complex[] tau, Int32 qcolumns, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.cmatrixqrunpackralglibcomplexMdArray2Int32Int32alglibcomplexMdArray2Ref">
            <summary>Sets the shim of ortfac.cmatrixqrunpackr(complex[,] a, Int32 m, Int32 n, complex[,]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.hmatrixtdalglibcomplexMdArray2RefInt32BooleanalglibcomplexArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.hmatrixtd(complex[,]&amp; a, Int32 n, Boolean isupper, complex[]&amp; tau, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.hmatrixtdunpackqalglibcomplexMdArray2Int32BooleanalglibcomplexArrayalglibcomplexMdArray2Ref">
            <summary>Sets the shim of ortfac.hmatrixtdunpackq(complex[,] a, Int32 n, Boolean isupper, complex[] tau, complex[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdDoubleMdArray2RefInt32Int32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixbd(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tauq, Double[]&amp; taup)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdmultiplybypDoubleMdArray2Int32Int32DoubleArrayDoubleMdArray2RefInt32Int32BooleanBoolean">
            <summary>Sets the shim of ortfac.rmatrixbdmultiplybyp(Double[,] qp, Int32 m, Int32 n, Double[] taup, Double[,]&amp; z, Int32 zrows, Int32 zcolumns, Boolean fromtheright, Boolean dotranspose)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdmultiplybyqDoubleMdArray2Int32Int32DoubleArrayDoubleMdArray2RefInt32Int32BooleanBoolean">
            <summary>Sets the shim of ortfac.rmatrixbdmultiplybyq(Double[,] qp, Int32 m, Int32 n, Double[] tauq, Double[,]&amp; z, Int32 zrows, Int32 zcolumns, Boolean fromtheright, Boolean dotranspose)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdunpackdiagonalsDoubleMdArray2Int32Int32BooleanRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixbdunpackdiagonals(Double[,] b, Int32 m, Int32 n, Boolean&amp; isupper, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdunpackptDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixbdunpackpt(Double[,] qp, Int32 m, Int32 n, Double[] taup, Int32 ptrows, Double[,]&amp; pt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixbdunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixbdunpackq(Double[,] qp, Int32 m, Int32 n, Double[] tauq, Int32 qcolumns, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixblockreflectorDoubleMdArray2RefDoubleArrayRefBooleanInt32Int32DoubleMdArray2RefDoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixblockreflector(Double[,]&amp; a, Double[]&amp; tau, Boolean columnwisea, Int32 lengtha, Int32 blocksize, Double[,]&amp; t, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixhessenbergDoubleMdArray2RefInt32DoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixhessenberg(Double[,]&amp; a, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixhessenbergunpackhDoubleMdArray2Int32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixhessenbergunpackh(Double[,] a, Int32 n, Double[,]&amp; h)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixhessenbergunpackqDoubleMdArray2Int32DoubleArrayDoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixhessenbergunpackq(Double[,] a, Int32 n, Double[] tau, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixlqDoubleMdArray2RefInt32Int32DoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixlq(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixlqbasecaseDoubleMdArray2RefInt32Int32DoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixlqbasecase(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; work, Double[]&amp; t, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixlqunpacklDoubleMdArray2Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixlqunpackl(Double[,] a, Int32 m, Int32 n, Double[,]&amp; l)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixlqunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixlqunpackq(Double[,] a, Int32 m, Int32 n, Double[] tau, Int32 qrows, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixqrDoubleMdArray2RefInt32Int32DoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixqr(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixqrbasecaseDoubleMdArray2RefInt32Int32DoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.rmatrixqrbasecase(Double[,]&amp; a, Int32 m, Int32 n, Double[]&amp; work, Double[]&amp; t, Double[]&amp; tau)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixqrunpackqDoubleMdArray2Int32Int32DoubleArrayInt32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixqrunpackq(Double[,] a, Int32 m, Int32 n, Double[] tau, Int32 qcolumns, Double[,]&amp; q)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.rmatrixqrunpackrDoubleMdArray2Int32Int32DoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.rmatrixqrunpackr(Double[,] a, Int32 m, Int32 n, Double[,]&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.smatrixtdDoubleMdArray2RefInt32BooleanDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ortfac.smatrixtd(Double[,]&amp; a, Int32 n, Boolean isupper, Double[]&amp; tau, Double[]&amp; d, Double[]&amp; e)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimortfac.smatrixtdunpackqDoubleMdArray2Int32BooleanDoubleArrayDoubleMdArray2Ref">
            <summary>Sets the shim of ortfac.smatrixtdunpackq(Double[,] a, Int32 n, Boolean isupper, Double[] tau, Double[,]&amp; q)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimortfac.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpca">
            <summary>Shim type of alglib+pca</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpca.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpca.#ctor(alglib.pca)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpca.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpca.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpca.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpca.Constructor">
            <summary>Sets the shim of pca.pca()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpca.pcabuildbasisDoubleMdArray2Int32Int32Int32RefDoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of pca.pcabuildbasis(Double[,] x, Int32 npoints, Int32 nvars, Int32&amp; info, Double[]&amp; s2, Double[,]&amp; v)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpca.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpoissondistr">
            <summary>Shim type of alglib+poissondistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpoissondistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpoissondistr.#ctor(alglib.poissondistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpoissondistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpoissondistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpoissondistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpoissondistr.Constructor">
            <summary>Sets the shim of poissondistr.poissondistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpoissondistr.invpoissondistributionInt32Double">
            <summary>Sets the shim of poissondistr.invpoissondistribution(Int32 k, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpoissondistr.poissoncdistributionInt32Double">
            <summary>Sets the shim of poissondistr.poissoncdistribution(Int32 k, Double m)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpoissondistr.poissondistributionInt32Double">
            <summary>Sets the shim of poissondistr.poissondistribution(Int32 k, Double m)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpoissondistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpolint">
            <summary>Shim type of alglib+polint</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolint.#ctor(alglib.polint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.Constructor">
            <summary>Sets the shim of polint.polint()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbar2chebratintalglibbarycentricinterpolantDoubleDoubleDoubleArrayRef">
            <summary>Sets the shim of polint.polynomialbar2cheb(barycentricinterpolant p, Double a, Double b, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbar2powratintalglibbarycentricinterpolantDoubleDoubleDoubleArrayRef">
            <summary>Sets the shim of polint.polynomialbar2pow(barycentricinterpolant p, Double c, Double s, Double[]&amp; a)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbuildDoubleArrayDoubleArrayInt32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialbuild(Double[] x, Double[] y, Int32 n, barycentricinterpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbuildcheb1DoubleDoubleDoubleArrayInt32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialbuildcheb1(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbuildcheb2DoubleDoubleDoubleArrayInt32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialbuildcheb2(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialbuildeqdistDoubleDoubleDoubleArrayInt32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialbuildeqdist(Double a, Double b, Double[] y, Int32 n, barycentricinterpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialcalccheb1DoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of polint.polynomialcalccheb1(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialcalccheb2DoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of polint.polynomialcalccheb2(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialcalceqdistDoubleDoubleDoubleArrayInt32Double">
            <summary>Sets the shim of polint.polynomialcalceqdist(Double a, Double b, Double[] f, Int32 n, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialcheb2barDoubleArrayInt32DoubleDoubleratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialcheb2bar(Double[] t, Int32 n, Double a, Double b, barycentricinterpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolint.polynomialpow2barDoubleArrayInt32DoubleDoubleratintalglibbarycentricinterpolant">
            <summary>Sets the shim of polint.polynomialpow2bar(Double[] a, Int32 n, Double c, Double s, barycentricinterpolant p)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpolint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpolynomialfitreport">
            <summary>Shim type of alglib+polynomialfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolynomialfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolynomialfitreport.#ctor(alglib.polynomialfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolynomialfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpolynomialfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.Constructor">
            <summary>Sets the shim of polynomialfitreport.polynomialfitreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.Constructorlsfitalglibpolynomialfitreport">
            <summary>Sets the shim of polynomialfitreport.polynomialfitreport(polynomialfitreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.avgerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.avgerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.avgrelerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.avgrelerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.innerobjGet">
            <summary>Sets the shim of polynomialfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.maxerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.maxerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.rmserrorGet">
            <summary>Sets the shim of polynomialfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.rmserrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.taskrcondGet">
            <summary>Sets the shim of polynomialfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.taskrcondSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.innerobjGet">
            <summary>Sets the shim of polynomialfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.maxerrorGet">
            <summary>Sets the shim of polynomialfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.maxerrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of polynomialfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.taskrcondGet">
            <summary>Sets the shim of polynomialfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpolynomialfitreport.AllInstances.taskrcondSetDouble">
            <summary>Sets the shim of polynomialfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpsif">
            <summary>Shim type of alglib+psif</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpsif.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpsif.#ctor(alglib.psif)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpsif.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpsif.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpsif.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpsif.Constructor">
            <summary>Sets the shim of psif.psif()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpsif.psiDouble">
            <summary>Sets the shim of psif.psi(Double x)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpsif.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline">
            <summary>Shim type of alglib+pspline</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.#ctor(alglib.pspline)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Constructor">
            <summary>Sets the shim of pspline.pspline()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2arclengthpsplinealglibpspline2interpolantDoubleDouble">
            <summary>Sets the shim of pspline.pspline2arclength(pspline2interpolant p, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2buildDoubleMdArray2Int32Int32Int32psplinealglibpspline2interpolant">
            <summary>Sets the shim of pspline.pspline2build(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline2interpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2buildperiodicDoubleMdArray2Int32Int32Int32psplinealglibpspline2interpolant">
            <summary>Sets the shim of pspline.pspline2buildperiodic(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline2interpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2calcpsplinealglibpspline2interpolantDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline2calc(pspline2interpolant p, Double t, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2diff2psplinealglibpspline2interpolantDoubleDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline2diff2(pspline2interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; d2x, Double&amp; y, Double&amp; dy, Double&amp; d2y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2diffpsplinealglibpspline2interpolantDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline2diff(pspline2interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; y, Double&amp; dy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2parDoubleMdArray2Int32Int32DoubleArrayRef">
            <summary>Sets the shim of pspline.pspline2par(Double[,] xy, Int32 n, Int32 pt, Double[]&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2parametervaluespsplinealglibpspline2interpolantInt32RefDoubleArrayRef">
            <summary>Sets the shim of pspline.pspline2parametervalues(pspline2interpolant p, Int32&amp; n, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline2tangentpsplinealglibpspline2interpolantDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline2tangent(pspline2interpolant p, Double t, Double&amp; x, Double&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3arclengthpsplinealglibpspline3interpolantDoubleDouble">
            <summary>Sets the shim of pspline.pspline3arclength(pspline3interpolant p, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3buildDoubleMdArray2Int32Int32Int32psplinealglibpspline3interpolant">
            <summary>Sets the shim of pspline.pspline3build(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline3interpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3buildperiodicDoubleMdArray2Int32Int32Int32psplinealglibpspline3interpolant">
            <summary>Sets the shim of pspline.pspline3buildperiodic(Double[,] xy, Int32 n, Int32 st, Int32 pt, pspline3interpolant p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3calcpsplinealglibpspline3interpolantDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline3calc(pspline3interpolant p, Double t, Double&amp; x, Double&amp; y, Double&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3diff2psplinealglibpspline3interpolantDoubleDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline3diff2(pspline3interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; d2x, Double&amp; y, Double&amp; dy, Double&amp; d2y, Double&amp; z, Double&amp; dz, Double&amp; d2z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3diffpsplinealglibpspline3interpolantDoubleDoubleRefDoubleRefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline3diff(pspline3interpolant p, Double t, Double&amp; x, Double&amp; dx, Double&amp; y, Double&amp; dy, Double&amp; z, Double&amp; dz)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3parDoubleMdArray2Int32Int32DoubleArrayRef">
            <summary>Sets the shim of pspline.pspline3par(Double[,] xy, Int32 n, Int32 pt, Double[]&amp; p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3parametervaluespsplinealglibpspline3interpolantInt32RefDoubleArrayRef">
            <summary>Sets the shim of pspline.pspline3parametervalues(pspline3interpolant p, Int32&amp; n, Double[]&amp; t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.pspline3tangentpsplinealglibpspline3interpolantDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of pspline.pspline3tangent(pspline3interpolant p, Double t, Double&amp; x, Double&amp; y, Double&amp; z)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant">
            <summary>Shim type of alglib+pspline+pspline2interpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.#ctor(alglib.pspline.pspline2interpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.Constructor">
            <summary>Sets the shim of pspline2interpolant.pspline2interpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline.Shimpspline2interpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant">
            <summary>Shim type of alglib+pspline+pspline3interpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.#ctor(alglib.pspline.pspline3interpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.Constructor">
            <summary>Sets the shim of pspline3interpolant.pspline3interpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline.Shimpspline3interpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline2interpolant">
            <summary>Shim type of alglib+pspline2interpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline2interpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline2interpolant.#ctor(alglib.pspline2interpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline2interpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline2interpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline2interpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline2interpolant.Constructor">
            <summary>Sets the shim of pspline2interpolant.pspline2interpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline2interpolant.Constructorpsplinealglibpspline2interpolant">
            <summary>Sets the shim of pspline2interpolant.pspline2interpolant(pspline2interpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline2interpolant.innerobjGet">
            <summary>Sets the shim of pspline2interpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline2interpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline2interpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of pspline2interpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline3interpolant">
            <summary>Shim type of alglib+pspline3interpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline3interpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline3interpolant.#ctor(alglib.pspline3interpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline3interpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimpspline3interpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline3interpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline3interpolant.Constructor">
            <summary>Sets the shim of pspline3interpolant.pspline3interpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline3interpolant.Constructorpsplinealglibpspline3interpolant">
            <summary>Sets the shim of pspline3interpolant.pspline3interpolant(pspline3interpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline3interpolant.innerobjGet">
            <summary>Sets the shim of pspline3interpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimpspline3interpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimpspline3interpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of pspline3interpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimratint">
            <summary>Shim type of alglib+ratint</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.#ctor(alglib.ratint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.Constructor">
            <summary>Sets the shim of ratint.ratint()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricbuildfloaterhormannDoubleArrayDoubleArrayInt32Int32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of ratint.barycentricbuildfloaterhormann(Double[] x, Double[] y, Int32 n, Int32 d, barycentricinterpolant b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricbuildxywDoubleArrayDoubleArrayDoubleArrayInt32ratintalglibbarycentricinterpolant">
            <summary>Sets the shim of ratint.barycentricbuildxyw(Double[] x, Double[] y, Double[] w, Int32 n, barycentricinterpolant b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentriccalcratintalglibbarycentricinterpolantDouble">
            <summary>Sets the shim of ratint.barycentriccalc(barycentricinterpolant b, Double t)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentriccopyratintalglibbarycentricinterpolantratintalglibbarycentricinterpolant">
            <summary>Sets the shim of ratint.barycentriccopy(barycentricinterpolant b, barycentricinterpolant b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricdiff1ratintalglibbarycentricinterpolantDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of ratint.barycentricdiff1(barycentricinterpolant b, Double t, Double&amp; f, Double&amp; df)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricdiff2ratintalglibbarycentricinterpolantDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of ratint.barycentricdiff2(barycentricinterpolant b, Double t, Double&amp; f, Double&amp; df, Double&amp; d2f)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentriclintransxratintalglibbarycentricinterpolantDoubleDouble">
            <summary>Sets the shim of ratint.barycentriclintransx(barycentricinterpolant b, Double ca, Double cb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentriclintransyratintalglibbarycentricinterpolantDoubleDouble">
            <summary>Sets the shim of ratint.barycentriclintransy(barycentricinterpolant b, Double ca, Double cb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricnormalizeratintalglibbarycentricinterpolant">
            <summary>Sets the shim of ratint.barycentricnormalize(barycentricinterpolant b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.barycentricunpackratintalglibbarycentricinterpolantInt32RefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of ratint.barycentricunpack(barycentricinterpolant b, Int32&amp; n, Double[]&amp; x, Double[]&amp; y, Double[]&amp; w)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimratint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant">
            <summary>Shim type of alglib+ratint+barycentricinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.#ctor(alglib.ratint.barycentricinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.Constructor">
            <summary>Sets the shim of barycentricinterpolant.barycentricinterpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimratint.Shimbarycentricinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrcommstate">
            <summary>Shim type of alglib+rcommstate</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcommstate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcommstate.#ctor(alglib.rcommstate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcommstate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcommstate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcommstate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcommstate.Constructor">
            <summary>Sets the shim of rcommstate.rcommstate()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrcommstate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrcond">
            <summary>Shim type of alglib+rcond</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcond.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcond.#ctor(alglib.rcond)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcond.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrcond.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.Constructor">
            <summary>Sets the shim of rcond.rcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixestimatenormInt32alglibcomplexArrayRefalglibcomplexArrayRefDoubleRefInt32RefInt32ArrayRefDoubleArrayRef">
            <summary>Sets the shim of rcond.cmatrixestimatenorm(Int32 n, complex[]&amp; v, complex[]&amp; x, Double&amp; est, Int32&amp; kase, Int32[]&amp; isave, Double[]&amp; rsave)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixlurcond1alglibcomplexMdArray2Int32">
            <summary>Sets the shim of rcond.cmatrixlurcond1(complex[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixlurcondinfalglibcomplexMdArray2Int32">
            <summary>Sets the shim of rcond.cmatrixlurcondinf(complex[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixrcond1alglibcomplexMdArray2Int32">
            <summary>Sets the shim of rcond.cmatrixrcond1(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixrcondinfalglibcomplexMdArray2Int32">
            <summary>Sets the shim of rcond.cmatrixrcondinf(complex[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixrcondluinternalalglibcomplexMdArray2Int32BooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.cmatrixrcondluinternal(complex[,] lua, Int32 n, Boolean onenorm, Boolean isanormprovided, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixrcondtrinternalalglibcomplexMdArray2Int32BooleanBooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.cmatrixrcondtrinternal(complex[,] a, Int32 n, Boolean isupper, Boolean isunit, Boolean onenorm, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixtrrcond1alglibcomplexMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of rcond.cmatrixtrrcond1(complex[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.cmatrixtrrcondinfalglibcomplexMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of rcond.cmatrixtrrcondinf(complex[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.hpdmatrixcholeskyrcondalglibcomplexMdArray2Int32Boolean">
            <summary>Sets the shim of rcond.hpdmatrixcholeskyrcond(complex[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.hpdmatrixrcondalglibcomplexMdArray2Int32Boolean">
            <summary>Sets the shim of rcond.hpdmatrixrcond(complex[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.hpdmatrixrcondcholeskyinternalalglibcomplexMdArray2Int32BooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.hpdmatrixrcondcholeskyinternal(complex[,] cha, Int32 n, Boolean isupper, Boolean isnormprovided, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.internalcomplexrcondicmax1alglibcomplexArrayInt32">
            <summary>Sets the shim of rcond.internalcomplexrcondicmax1(complex[] x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.internalcomplexrcondloadallInt32ArrayRefDoubleArrayRefInt32RefInt32RefInt32RefInt32RefInt32RefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of rcond.internalcomplexrcondloadall(Int32[]&amp; isave, Double[]&amp; rsave, Int32&amp; i, Int32&amp; iter, Int32&amp; j, Int32&amp; jlast, Int32&amp; jump, Double&amp; absxi, Double&amp; altsgn, Double&amp; estold, Double&amp; temp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.internalcomplexrcondsaveallInt32ArrayRefDoubleArrayRefInt32RefInt32RefInt32RefInt32RefInt32RefDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of rcond.internalcomplexrcondsaveall(Int32[]&amp; isave, Double[]&amp; rsave, Int32&amp; i, Int32&amp; iter, Int32&amp; j, Int32&amp; jlast, Int32&amp; jump, Double&amp; absxi, Double&amp; altsgn, Double&amp; estold, Double&amp; temp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.internalcomplexrcondscsum1alglibcomplexArrayInt32">
            <summary>Sets the shim of rcond.internalcomplexrcondscsum1(complex[] x, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rcondthreshold">
            <summary>Sets the shim of rcond.rcondthreshold()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixestimatenormInt32DoubleArrayRefDoubleArrayRefInt32ArrayRefDoubleRefInt32Ref">
            <summary>Sets the shim of rcond.rmatrixestimatenorm(Int32 n, Double[]&amp; v, Double[]&amp; x, Int32[]&amp; isgn, Double&amp; est, Int32&amp; kase)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixlurcond1DoubleMdArray2Int32">
            <summary>Sets the shim of rcond.rmatrixlurcond1(Double[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixlurcondinfDoubleMdArray2Int32">
            <summary>Sets the shim of rcond.rmatrixlurcondinf(Double[,] lua, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixrcond1DoubleMdArray2Int32">
            <summary>Sets the shim of rcond.rmatrixrcond1(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixrcondinfDoubleMdArray2Int32">
            <summary>Sets the shim of rcond.rmatrixrcondinf(Double[,] a, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixrcondluinternalDoubleMdArray2Int32BooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.rmatrixrcondluinternal(Double[,] lua, Int32 n, Boolean onenorm, Boolean isanormprovided, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixrcondtrinternalDoubleMdArray2Int32BooleanBooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.rmatrixrcondtrinternal(Double[,] a, Int32 n, Boolean isupper, Boolean isunit, Boolean onenorm, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixtrrcond1DoubleMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of rcond.rmatrixtrrcond1(Double[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.rmatrixtrrcondinfDoubleMdArray2Int32BooleanBoolean">
            <summary>Sets the shim of rcond.rmatrixtrrcondinf(Double[,] a, Int32 n, Boolean isupper, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.spdmatrixcholeskyrcondDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of rcond.spdmatrixcholeskyrcond(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.spdmatrixrcondDoubleMdArray2Int32Boolean">
            <summary>Sets the shim of rcond.spdmatrixrcond(Double[,] a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrcond.spdmatrixrcondcholeskyinternalDoubleMdArray2Int32BooleanBooleanDoubleDoubleRef">
            <summary>Sets the shim of rcond.spdmatrixrcondcholeskyinternal(Double[,] cha, Int32 n, Boolean isupper, Boolean isnormprovided, Double anorm, Double&amp; rc)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrcond.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimreflections">
            <summary>Shim type of alglib+reflections</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimreflections.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimreflections.#ctor(alglib.reflections)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimreflections.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimreflections.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimreflections.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimreflections.Constructor">
            <summary>Sets the shim of reflections.reflections()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimreflections.applyreflectionfromtheleftDoubleMdArray2RefDoubleDoubleArrayInt32Int32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of reflections.applyreflectionfromtheleft(Double[,]&amp; c, Double tau, Double[] v, Int32 m1, Int32 m2, Int32 n1, Int32 n2, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimreflections.applyreflectionfromtherightDoubleMdArray2RefDoubleDoubleArrayInt32Int32Int32Int32DoubleArrayRef">
            <summary>Sets the shim of reflections.applyreflectionfromtheright(Double[,]&amp; c, Double tau, Double[] v, Int32 m1, Int32 m2, Int32 n1, Int32 n2, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimreflections.generatereflectionDoubleArrayRefInt32DoubleRef">
            <summary>Sets the shim of reflections.generatereflection(Double[]&amp; x, Int32 n, Double&amp; tau)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimreflections.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrotations">
            <summary>Shim type of alglib+rotations</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrotations.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrotations.#ctor(alglib.rotations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrotations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimrotations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrotations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrotations.Constructor">
            <summary>Sets the shim of rotations.rotations()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrotations.applyrotationsfromtheleftBooleanInt32Int32Int32Int32DoubleArrayDoubleArrayDoubleMdArray2RefDoubleArrayRef">
            <summary>Sets the shim of rotations.applyrotationsfromtheleft(Boolean isforward, Int32 m1, Int32 m2, Int32 n1, Int32 n2, Double[] c, Double[] s, Double[,]&amp; a, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrotations.applyrotationsfromtherightBooleanInt32Int32Int32Int32DoubleArrayDoubleArrayDoubleMdArray2RefDoubleArrayRef">
            <summary>Sets the shim of rotations.applyrotationsfromtheright(Boolean isforward, Int32 m1, Int32 m2, Int32 n1, Int32 n2, Double[] c, Double[] s, Double[,]&amp; a, Double[]&amp; work)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimrotations.generaterotationDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of rotations.generaterotation(Double f, Double g, Double&amp; cs, Double&amp; sn, Double&amp; r)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimrotations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsafesolve">
            <summary>Shim type of alglib+safesolve</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsafesolve.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsafesolve.#ctor(alglib.safesolve)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsafesolve.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsafesolve.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsafesolve.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsafesolve.Constructor">
            <summary>Sets the shim of safesolve.safesolve()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsafesolve.cbasicsolveandupdatealglibcomplexalglibcomplexDoubleDoubleDoubleDoubleRefalglibcomplexRef">
            <summary>Sets the shim of safesolve.cbasicsolveandupdate(complex alpha, complex beta, Double lnmax, Double bnorm, Double maxgrowth, Double&amp; xnorm, complex&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsafesolve.cmatrixscaledtrsafesolvealglibcomplexMdArray2DoubleInt32alglibcomplexArrayRefBooleanInt32BooleanDouble">
            <summary>Sets the shim of safesolve.cmatrixscaledtrsafesolve(complex[,] a, Double sa, Int32 n, complex[]&amp; x, Boolean isupper, Int32 trans, Boolean isunit, Double maxgrowth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsafesolve.rmatrixscaledtrsafesolveDoubleMdArray2DoubleInt32DoubleArrayRefBooleanInt32BooleanDouble">
            <summary>Sets the shim of safesolve.rmatrixscaledtrsafesolve(Double[,] a, Double sa, Int32 n, Double[]&amp; x, Boolean isupper, Int32 trans, Boolean isunit, Double maxgrowth)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsafesolve.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsblas">
            <summary>Shim type of alglib+sblas</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsblas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsblas.#ctor(alglib.sblas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsblas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsblas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsblas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsblas.Constructor">
            <summary>Sets the shim of sblas.sblas()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsblas.symmetricmatrixvectormultiplyDoubleMdArray2BooleanInt32Int32DoubleArrayDoubleDoubleArrayRef">
            <summary>Sets the shim of sblas.symmetricmatrixvectormultiply(Double[,] a, Boolean isupper, Int32 i1, Int32 i2, Double[] x, Double alpha, Double[]&amp; y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsblas.symmetricrank2updateDoubleMdArray2RefBooleanInt32Int32DoubleArrayDoubleArrayDoubleArrayRefDouble">
            <summary>Sets the shim of sblas.symmetricrank2update(Double[,]&amp; a, Boolean isupper, Int32 i1, Int32 i2, Double[] x, Double[] y, Double[]&amp; t, Double alpha)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsblas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimschur">
            <summary>Shim type of alglib+schur</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimschur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimschur.#ctor(alglib.schur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimschur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimschur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimschur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimschur.Constructor">
            <summary>Sets the shim of schur.schur()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimschur.rmatrixschurDoubleMdArray2RefInt32DoubleMdArray2Ref">
            <summary>Sets the shim of schur.rmatrixschur(Double[,]&amp; a, Int32 n, Double[,]&amp; s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimschur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimscodes">
            <summary>Shim type of alglib+scodes</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimscodes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimscodes.#ctor(alglib.scodes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimscodes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimscodes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimscodes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimscodes.Constructor">
            <summary>Sets the shim of scodes.scodes()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimscodes.getkdtreeserializationcode">
            <summary>Sets the shim of scodes.getkdtreeserializationcode()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimscodes.getmlpserializationcode">
            <summary>Sets the shim of scodes.getmlpserializationcode()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimscodes.getrdfserializationcode">
            <summary>Sets the shim of scodes.getrdfserializationcode()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimscodes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimserializer">
            <summary>Shim type of alglib+serializer</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimserializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimserializer.#ctor(alglib.serializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimserializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimserializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.Constructor">
            <summary>Sets the shim of serializer.serializer()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.StaticConstructor">
            <summary>Sets the shim of serializer.serializer()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.alloc_entry">
            <summary>Sets the shim of serializer.alloc_entry()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.alloc_start">
            <summary>Sets the shim of serializer.alloc_start()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.bool2strBooleanCharArrayInt32Ref">
            <summary>Sets the shim of serializer.bool2str(Boolean v, Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.char2sixbitsChar">
            <summary>Sets the shim of serializer.char2sixbits(Char c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.double2strDoubleCharArrayInt32Ref">
            <summary>Sets the shim of serializer.double2str(Double v, Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.foursixbits2threebytesInt32ArrayInt32ByteArrayInt32">
            <summary>Sets the shim of serializer.foursixbits2threebytes(Int32[] src, Int32 src_offs, Byte[] dst, Int32 dst_offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.get_alloc_size">
            <summary>Sets the shim of serializer.get_alloc_size()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.get_string">
            <summary>Sets the shim of serializer.get_string()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.int2strInt32CharArrayInt32Ref">
            <summary>Sets the shim of serializer.int2str(Int32 v, Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.serialize_boolBoolean">
            <summary>Sets the shim of serializer.serialize_bool(Boolean v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.serialize_doubleDouble">
            <summary>Sets the shim of serializer.serialize_double(Double v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.serialize_intInt32">
            <summary>Sets the shim of serializer.serialize_int(Int32 v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.sixbits2charInt32">
            <summary>Sets the shim of serializer.sixbits2char(Int32 v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.sstart_str">
            <summary>Sets the shim of serializer.sstart_str()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.stop">
            <summary>Sets the shim of serializer.stop()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.str2boolCharArrayInt32Ref">
            <summary>Sets the shim of serializer.str2bool(Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.str2doubleCharArrayInt32Ref">
            <summary>Sets the shim of serializer.str2double(Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.str2intCharArrayInt32Ref">
            <summary>Sets the shim of serializer.str2int(Char[] buf, Int32&amp; offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.threebytes2foursixbitsByteArrayInt32Int32ArrayInt32">
            <summary>Sets the shim of serializer.threebytes2foursixbits(Byte[] src, Int32 src_offs, Int32[] dst, Int32 dst_offs)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.unserialize_bool">
            <summary>Sets the shim of serializer.unserialize_bool()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.unserialize_double">
            <summary>Sets the shim of serializer.unserialize_double()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.unserialize_int">
            <summary>Sets the shim of serializer.unserialize_int()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.ustart_strString">
            <summary>Sets the shim of serializer.ustart_str(String s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimserializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.alloc_entry">
            <summary>Sets the shim of serializer.alloc_entry()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.alloc_start">
            <summary>Sets the shim of serializer.alloc_start()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.get_alloc_size">
            <summary>Sets the shim of serializer.get_alloc_size()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.get_string">
            <summary>Sets the shim of serializer.get_string()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.serialize_boolBoolean">
            <summary>Sets the shim of serializer.serialize_bool(Boolean v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.serialize_doubleDouble">
            <summary>Sets the shim of serializer.serialize_double(Double v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.serialize_intInt32">
            <summary>Sets the shim of serializer.serialize_int(Int32 v)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.sstart_str">
            <summary>Sets the shim of serializer.sstart_str()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.stop">
            <summary>Sets the shim of serializer.stop()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.unserialize_bool">
            <summary>Sets the shim of serializer.unserialize_bool()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.unserialize_double">
            <summary>Sets the shim of serializer.unserialize_double()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.unserialize_int">
            <summary>Sets the shim of serializer.unserialize_int()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimserializer.AllInstances.ustart_strString">
            <summary>Sets the shim of serializer.ustart_str(String s)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspdgevd">
            <summary>Shim type of alglib+spdgevd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspdgevd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspdgevd.#ctor(alglib.spdgevd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspdgevd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspdgevd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspdgevd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspdgevd.Constructor">
            <summary>Sets the shim of spdgevd.spdgevd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspdgevd.smatrixgevdDoubleMdArray2Int32BooleanDoubleMdArray2BooleanInt32Int32DoubleArrayRefDoubleMdArray2Ref">
            <summary>Sets the shim of spdgevd.smatrixgevd(Double[,] a, Int32 n, Boolean isuppera, Double[,] b, Boolean isupperb, Int32 zneeded, Int32 problemtype, Double[]&amp; d, Double[,]&amp; z)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspdgevd.smatrixgevdreduceDoubleMdArray2RefInt32BooleanDoubleMdArray2BooleanInt32DoubleMdArray2RefBooleanRef">
            <summary>Sets the shim of spdgevd.smatrixgevdreduce(Double[,]&amp; a, Int32 n, Boolean isuppera, Double[,] b, Boolean isupperb, Int32 problemtype, Double[,]&amp; r, Boolean&amp; isupperr)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspdgevd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1d">
            <summary>Shim type of alglib+spline1d</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.#ctor(alglib.spline1d)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.Constructor">
            <summary>Sets the shim of spline1d.spline1d()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.diffthreepointDoubleDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of spline1d.diffthreepoint(Double t, Double x0, Double f0, Double x1, Double f1, Double x2, Double f2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.heapsortdpointsDoubleArrayRefDoubleArrayRefDoubleArrayRefInt32">
            <summary>Sets the shim of spline1d.heapsortdpoints(Double[]&amp; x, Double[]&amp; y, Double[]&amp; d, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.heapsortpointsDoubleArrayRefDoubleArrayRefInt32">
            <summary>Sets the shim of spline1d.heapsortpoints(Double[]&amp; x, Double[]&amp; y, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.heapsortppointsDoubleArrayRefDoubleArrayRefInt32ArrayRefInt32">
            <summary>Sets the shim of spline1d.heapsortppoints(Double[]&amp; x, Double[]&amp; y, Int32[]&amp; p, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.solvecyclictridiagonalDoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of spline1d.solvecyclictridiagonal(Double[] a, Double[] b, Double[] c, Double[] d, Int32 n, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.solvetridiagonalDoubleArrayDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of spline1d.solvetridiagonal(Double[] a, Double[] b, Double[] c, Double[] d, Int32 n, Double[]&amp; x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dbuildakimaDoubleArrayDoubleArrayInt32spline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dbuildakima(Double[] x, Double[] y, Int32 n, spline1dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dbuildcatmullromDoubleArrayDoubleArrayInt32Int32Doublespline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dbuildcatmullrom(Double[] x, Double[] y, Int32 n, Int32 boundtype, Double tension, spline1dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dbuildcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32Doublespline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dbuildcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, spline1dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dbuildhermiteDoubleArrayDoubleArrayDoubleArrayInt32spline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dbuildhermite(Double[] x, Double[] y, Double[] d, Int32 n, spline1dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dbuildlinearDoubleArrayDoubleArrayInt32spline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dbuildlinear(Double[] x, Double[] y, Int32 n, spline1dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dcalcspline1dalglibspline1dinterpolantDouble">
            <summary>Sets the shim of spline1d.spline1dcalc(spline1dinterpolant c, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dconvcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dconvcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dconvdiff2cubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dconvdiff2cubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2, Double[]&amp; d2, Double[]&amp; dd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dconvdiffcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayInt32DoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dconvdiffcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[] x2, Int32 n2, Double[]&amp; y2, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dconvdiffinternalDoubleArrayDoubleArrayDoubleArrayInt32DoubleArrayInt32DoubleArrayRefBooleanDoubleArrayRefBooleanDoubleArrayRefBoolean">
            <summary>Sets the shim of spline1d.spline1dconvdiffinternal(Double[] xold, Double[] yold, Double[] dold, Int32 n, Double[] x2, Int32 n2, Double[]&amp; y, Boolean needy, Double[]&amp; d1, Boolean needd1, Double[]&amp; d2, Boolean needd2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dcopyspline1dalglibspline1dinterpolantspline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1d.spline1dcopy(spline1dinterpolant c, spline1dinterpolant cc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1ddiffspline1dalglibspline1dinterpolantDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of spline1d.spline1ddiff(spline1dinterpolant c, Double x, Double&amp; s, Double&amp; ds, Double&amp; d2s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dgriddiff2cubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dgriddiff2cubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[]&amp; d1, Double[]&amp; d2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dgriddiffcubicDoubleArrayDoubleArrayInt32Int32DoubleInt32DoubleDoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dgriddiffcubic(Double[] x, Double[] y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[]&amp; d)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dgriddiffcubicinternalDoubleArrayDoubleArrayRefInt32Int32DoubleInt32DoubleDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRef">
            <summary>Sets the shim of spline1d.spline1dgriddiffcubicinternal(Double[] x, Double[]&amp; y, Int32 n, Int32 boundltype, Double boundl, Int32 boundrtype, Double boundr, Double[]&amp; d, Double[]&amp; a1, Double[]&amp; a2, Double[]&amp; a3, Double[]&amp; b, Double[]&amp; dt)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dintegratespline1dalglibspline1dinterpolantDouble">
            <summary>Sets the shim of spline1d.spline1dintegrate(spline1dinterpolant c, Double x)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dlintransxspline1dalglibspline1dinterpolantDoubleDouble">
            <summary>Sets the shim of spline1d.spline1dlintransx(spline1dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dlintransyspline1dalglibspline1dinterpolantDoubleDouble">
            <summary>Sets the shim of spline1d.spline1dlintransy(spline1dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.spline1dunpackspline1dalglibspline1dinterpolantInt32RefDoubleMdArray2Ref">
            <summary>Sets the shim of spline1d.spline1dunpack(spline1dinterpolant c, Int32&amp; n, Double[,]&amp; tbl)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1d.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant">
            <summary>Shim type of alglib+spline1d+spline1dinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.#ctor(alglib.spline1d.spline1dinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.Constructor">
            <summary>Sets the shim of spline1dinterpolant.spline1dinterpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1d.Shimspline1dinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1dfitreport">
            <summary>Shim type of alglib+spline1dfitreport</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dfitreport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dfitreport.#ctor(alglib.spline1dfitreport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dfitreport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dfitreport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.Constructor">
            <summary>Sets the shim of spline1dfitreport.spline1dfitreport()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.Constructorlsfitalglibspline1dfitreport">
            <summary>Sets the shim of spline1dfitreport.spline1dfitreport(spline1dfitreport obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.avgerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.avgerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.avgrelerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.avgrelerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.innerobjGet">
            <summary>Sets the shim of spline1dfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.maxerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.maxerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.rmserrorGet">
            <summary>Sets the shim of spline1dfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.rmserrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.taskrcondGet">
            <summary>Sets the shim of spline1dfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.taskrcondSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.avgerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_avgerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.avgerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_avgerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.avgrelerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_avgrelerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.avgrelerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_avgrelerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.innerobjGet">
            <summary>Sets the shim of spline1dfitreport.get_innerobj()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.maxerrorGet">
            <summary>Sets the shim of spline1dfitreport.get_maxerror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.maxerrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_maxerror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.rmserrorGet">
            <summary>Sets the shim of spline1dfitreport.get_rmserror()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.rmserrorSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_rmserror(Double value)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.taskrcondGet">
            <summary>Sets the shim of spline1dfitreport.get_taskrcond()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dfitreport.AllInstances.taskrcondSetDouble">
            <summary>Sets the shim of spline1dfitreport.set_taskrcond(Double value)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1dinterpolant">
            <summary>Shim type of alglib+spline1dinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dinterpolant.#ctor(alglib.spline1dinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline1dinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dinterpolant.Constructor">
            <summary>Sets the shim of spline1dinterpolant.spline1dinterpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dinterpolant.Constructorspline1dalglibspline1dinterpolant">
            <summary>Sets the shim of spline1dinterpolant.spline1dinterpolant(spline1dinterpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dinterpolant.innerobjGet">
            <summary>Sets the shim of spline1dinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline1dinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline1dinterpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of spline1dinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2d">
            <summary>Shim type of alglib+spline2d</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.#ctor(alglib.spline2d)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.Constructor">
            <summary>Sets the shim of spline2d.spline2d()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.bicubiccalcderivativesDoubleMdArray2DoubleArrayDoubleArrayInt32Int32DoubleMdArray2RefDoubleMdArray2RefDoubleMdArray2Ref">
            <summary>Sets the shim of spline2d.bicubiccalcderivatives(Double[,] a, Double[] x, Double[] y, Int32 m, Int32 n, Double[,]&amp; dx, Double[,]&amp; dy, Double[,]&amp; dxy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dbuildbicubicDoubleArrayDoubleArrayDoubleMdArray2Int32Int32spline2dalglibspline2dinterpolant">
            <summary>Sets the shim of spline2d.spline2dbuildbicubic(Double[] x, Double[] y, Double[,] f, Int32 m, Int32 n, spline2dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dbuildbilinearDoubleArrayDoubleArrayDoubleMdArray2Int32Int32spline2dalglibspline2dinterpolant">
            <summary>Sets the shim of spline2d.spline2dbuildbilinear(Double[] x, Double[] y, Double[,] f, Int32 m, Int32 n, spline2dinterpolant c)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dcalcspline2dalglibspline2dinterpolantDoubleDouble">
            <summary>Sets the shim of spline2d.spline2dcalc(spline2dinterpolant c, Double x, Double y)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dcopyspline2dalglibspline2dinterpolantspline2dalglibspline2dinterpolant">
            <summary>Sets the shim of spline2d.spline2dcopy(spline2dinterpolant c, spline2dinterpolant cc)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2ddiffspline2dalglibspline2dinterpolantDoubleDoubleDoubleRefDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of spline2d.spline2ddiff(spline2dinterpolant c, Double x, Double y, Double&amp; f, Double&amp; fx, Double&amp; fy, Double&amp; fxy)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dlintransfspline2dalglibspline2dinterpolantDoubleDouble">
            <summary>Sets the shim of spline2d.spline2dlintransf(spline2dinterpolant c, Double a, Double b)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dlintransxyspline2dalglibspline2dinterpolantDoubleDoubleDoubleDouble">
            <summary>Sets the shim of spline2d.spline2dlintransxy(spline2dinterpolant c, Double ax, Double bx, Double ay, Double by)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dresamplebicubicDoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of spline2d.spline2dresamplebicubic(Double[,] a, Int32 oldheight, Int32 oldwidth, Double[,]&amp; b, Int32 newheight, Int32 newwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dresamplebilinearDoubleMdArray2Int32Int32DoubleMdArray2RefInt32Int32">
            <summary>Sets the shim of spline2d.spline2dresamplebilinear(Double[,] a, Int32 oldheight, Int32 oldwidth, Double[,]&amp; b, Int32 newheight, Int32 newwidth)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.spline2dunpackspline2dalglibspline2dinterpolantInt32RefInt32RefDoubleMdArray2Ref">
            <summary>Sets the shim of spline2d.spline2dunpack(spline2dinterpolant c, Int32&amp; m, Int32&amp; n, Double[,]&amp; tbl)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2d.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant">
            <summary>Shim type of alglib+spline2d+spline2dinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.#ctor(alglib.spline2d.spline2dinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.Constructor">
            <summary>Sets the shim of spline2dinterpolant.spline2dinterpolant()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2d.Shimspline2dinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2dinterpolant">
            <summary>Shim type of alglib+spline2dinterpolant</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2dinterpolant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2dinterpolant.#ctor(alglib.spline2dinterpolant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2dinterpolant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimspline2dinterpolant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2dinterpolant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2dinterpolant.Constructor">
            <summary>Sets the shim of spline2dinterpolant.spline2dinterpolant()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2dinterpolant.Constructorspline2dalglibspline2dinterpolant">
            <summary>Sets the shim of spline2dinterpolant.spline2dinterpolant(spline2dinterpolant obj)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2dinterpolant.innerobjGet">
            <summary>Sets the shim of spline2dinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimspline2dinterpolant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimspline2dinterpolant.AllInstances.innerobjGet">
            <summary>Sets the shim of spline2dinterpolant.get_innerobj()</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstest">
            <summary>Shim type of alglib+stest</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstest.#ctor(alglib.stest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstest.Constructor">
            <summary>Sets the shim of stest.stest()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstest.onesamplesigntestDoubleArrayInt32DoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of stest.onesamplesigntest(Double[] x, Int32 n, Double median, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstudenttdistr">
            <summary>Shim type of alglib+studenttdistr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudenttdistr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudenttdistr.#ctor(alglib.studenttdistr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudenttdistr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudenttdistr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudenttdistr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudenttdistr.Constructor">
            <summary>Sets the shim of studenttdistr.studenttdistr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudenttdistr.invstudenttdistributionInt32Double">
            <summary>Sets the shim of studenttdistr.invstudenttdistribution(Int32 k, Double p)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudenttdistr.studenttdistributionInt32Double">
            <summary>Sets the shim of studenttdistr.studenttdistribution(Int32 k, Double t)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstudenttdistr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstudentttests">
            <summary>Shim type of alglib+studentttests</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudentttests.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudentttests.#ctor(alglib.studentttests)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudentttests.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimstudentttests.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudentttests.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudentttests.Constructor">
            <summary>Sets the shim of studentttests.studentttests()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudentttests.studentttest1DoubleArrayInt32DoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of studentttests.studentttest1(Double[] x, Int32 n, Double mean, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudentttests.studentttest2DoubleArrayInt32DoubleArrayInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of studentttests.studentttest2(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimstudentttests.unequalvariancettestDoubleArrayInt32DoubleArrayInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of studentttests.unequalvariancettest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimstudentttests.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsvd">
            <summary>Shim type of alglib+svd</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsvd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsvd.#ctor(alglib.svd)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsvd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimsvd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsvd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsvd.Constructor">
            <summary>Sets the shim of svd.svd()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimsvd.rmatrixsvdDoubleMdArray2Int32Int32Int32Int32Int32DoubleArrayRefDoubleMdArray2RefDoubleMdArray2Ref">
            <summary>Sets the shim of svd.rmatrixsvd(Double[,] a, Int32 m, Int32 n, Int32 uneeded, Int32 vtneeded, Int32 additionalmemory, Double[]&amp; w, Double[,]&amp; u, Double[,]&amp; vt)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimsvd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrfac">
            <summary>Shim type of alglib+trfac</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrfac.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrfac.#ctor(alglib.trfac)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrfac.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrfac.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.Constructor">
            <summary>Sets the shim of trfac.trfac()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixlualglibcomplexMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.cmatrixlu(complex[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixlup2alglibcomplexMdArray2RefInt32Int32Int32Int32ArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.cmatrixlup2(complex[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixlupalglibcomplexMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.cmatrixlup(complex[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixluprecalglibcomplexMdArray2RefInt32Int32Int32Int32ArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.cmatrixluprec(complex[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixplu2alglibcomplexMdArray2RefInt32Int32Int32Int32ArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.cmatrixplu2(complex[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixplualglibcomplexMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.cmatrixplu(complex[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.cmatrixplurecalglibcomplexMdArray2RefInt32Int32Int32Int32ArrayRefalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.cmatrixplurec(complex[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.hpdmatrixcholesky2alglibcomplexMdArray2RefInt32Int32BooleanalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.hpdmatrixcholesky2(complex[,]&amp; aaa, Int32 offs, Int32 n, Boolean isupper, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.hpdmatrixcholeskyalglibcomplexMdArray2RefInt32Boolean">
            <summary>Sets the shim of trfac.hpdmatrixcholesky(complex[,]&amp; a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.hpdmatrixcholeskyrecalglibcomplexMdArray2RefInt32Int32BooleanalglibcomplexArrayRef">
            <summary>Sets the shim of trfac.hpdmatrixcholeskyrec(complex[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, complex[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixluDoubleMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.rmatrixlu(Double[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixlup2DoubleMdArray2RefInt32Int32Int32Int32ArrayRefDoubleArrayRef">
            <summary>Sets the shim of trfac.rmatrixlup2(Double[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixlupDoubleMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.rmatrixlup(Double[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixluprecDoubleMdArray2RefInt32Int32Int32Int32ArrayRefDoubleArrayRef">
            <summary>Sets the shim of trfac.rmatrixluprec(Double[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixplu2DoubleMdArray2RefInt32Int32Int32Int32ArrayRefDoubleArrayRef">
            <summary>Sets the shim of trfac.rmatrixplu2(Double[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixpluDoubleMdArray2RefInt32Int32Int32ArrayRef">
            <summary>Sets the shim of trfac.rmatrixplu(Double[,]&amp; a, Int32 m, Int32 n, Int32[]&amp; pivots)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.rmatrixplurecDoubleMdArray2RefInt32Int32Int32Int32ArrayRefDoubleArrayRef">
            <summary>Sets the shim of trfac.rmatrixplurec(Double[,]&amp; a, Int32 offs, Int32 m, Int32 n, Int32[]&amp; pivots, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.spdmatrixcholesky2DoubleMdArray2RefInt32Int32BooleanDoubleArrayRef">
            <summary>Sets the shim of trfac.spdmatrixcholesky2(Double[,]&amp; aaa, Int32 offs, Int32 n, Boolean isupper, Double[]&amp; tmp)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.spdmatrixcholeskyDoubleMdArray2RefInt32Boolean">
            <summary>Sets the shim of trfac.spdmatrixcholesky(Double[,]&amp; a, Int32 n, Boolean isupper)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrfac.spdmatrixcholeskyrecDoubleMdArray2RefInt32Int32BooleanDoubleArrayRef">
            <summary>Sets the shim of trfac.spdmatrixcholeskyrec(Double[,]&amp; a, Int32 offs, Int32 n, Boolean isupper, Double[]&amp; tmp)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrfac.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrigintegrals">
            <summary>Shim type of alglib+trigintegrals</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrigintegrals.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrigintegrals.#ctor(alglib.trigintegrals)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrigintegrals.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrigintegrals.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrigintegrals.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrigintegrals.Constructor">
            <summary>Sets the shim of trigintegrals.trigintegrals()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrigintegrals.chebiterationshichiDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of trigintegrals.chebiterationshichi(Double x, Double c, Double&amp; b0, Double&amp; b1, Double&amp; b2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrigintegrals.hyperbolicsinecosineintegralsDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of trigintegrals.hyperbolicsinecosineintegrals(Double x, Double&amp; shi, Double&amp; chi)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrigintegrals.sinecosineintegralsDoubleDoubleRefDoubleRef">
            <summary>Sets the shim of trigintegrals.sinecosineintegrals(Double x, Double&amp; si, Double&amp; ci)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrigintegrals.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrlinsolve">
            <summary>Shim type of alglib+trlinsolve</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrlinsolve.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrlinsolve.#ctor(alglib.trlinsolve)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrlinsolve.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtrlinsolve.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrlinsolve.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrlinsolve.Constructor">
            <summary>Sets the shim of trlinsolve.trlinsolve()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrlinsolve.rmatrixtrsafesolveDoubleMdArray2Int32DoubleArrayRefDoubleRefBooleanBooleanBoolean">
            <summary>Sets the shim of trlinsolve.rmatrixtrsafesolve(Double[,] a, Int32 n, Double[]&amp; x, Double&amp; s, Boolean isupper, Boolean istrans, Boolean isunit)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtrlinsolve.safesolvetriangularDoubleMdArray2Int32DoubleArrayRefDoubleRefBooleanBooleanBooleanBooleanDoubleArrayRef">
            <summary>Sets the shim of trlinsolve.safesolvetriangular(Double[,] a, Int32 n, Double[]&amp; x, Double&amp; s, Boolean isupper, Boolean istrans, Boolean isunit, Boolean normin, Double[]&amp; cnorm)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtrlinsolve.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtsort">
            <summary>Shim type of alglib+tsort</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtsort.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtsort.#ctor(alglib.tsort)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtsort.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimtsort.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.Constructor">
            <summary>Sets the shim of tsort.tsort()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagheappopiDoubleArrayRefInt32ArrayRefInt32Ref">
            <summary>Sets the shim of tsort.tagheappopi(Double[]&amp; a, Int32[]&amp; b, Int32&amp; n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagheappushiDoubleArrayRefInt32ArrayRefInt32RefDoubleInt32">
            <summary>Sets the shim of tsort.tagheappushi(Double[]&amp; a, Int32[]&amp; b, Int32&amp; n, Double va, Int32 vb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagheapreplacetopiDoubleArrayRefInt32ArrayRefInt32DoubleInt32">
            <summary>Sets the shim of tsort.tagheapreplacetopi(Double[]&amp; a, Int32[]&amp; b, Int32 n, Double va, Int32 vb)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortDoubleArrayRefInt32Int32ArrayRefInt32ArrayRef">
            <summary>Sets the shim of tsort.tagsort(Double[]&amp; a, Int32 n, Int32[]&amp; p1, Int32[]&amp; p2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortbufDoubleArrayRefInt32Int32ArrayRefInt32ArrayRefapservalglibapbuffers">
            <summary>Sets the shim of tsort.tagsortbuf(Double[]&amp; a, Int32 n, Int32[]&amp; p1, Int32[]&amp; p2, apbuffers buf)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastDoubleArrayRefDoubleArrayRefInt32">
            <summary>Sets the shim of tsort.tagsortfast(Double[]&amp; a, Double[]&amp; bufa, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastiDoubleArrayRefInt32ArrayRefDoubleArrayRefInt32ArrayRefInt32">
            <summary>Sets the shim of tsort.tagsortfasti(Double[]&amp; a, Int32[]&amp; b, Double[]&amp; bufa, Int32[]&amp; bufb, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastirecDoubleArrayRefInt32ArrayRefDoubleArrayRefInt32ArrayRefInt32Int32">
            <summary>Sets the shim of tsort.tagsortfastirec(Double[]&amp; a, Int32[]&amp; b, Double[]&amp; bufa, Int32[]&amp; bufb, Int32 i1, Int32 i2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastrDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRefInt32">
            <summary>Sets the shim of tsort.tagsortfastr(Double[]&amp; a, Double[]&amp; b, Double[]&amp; bufa, Double[]&amp; bufb, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastrecDoubleArrayRefDoubleArrayRefInt32Int32">
            <summary>Sets the shim of tsort.tagsortfastrec(Double[]&amp; a, Double[]&amp; bufa, Int32 i1, Int32 i2)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimtsort.tagsortfastrrecDoubleArrayRefDoubleArrayRefDoubleArrayRefDoubleArrayRefInt32Int32">
            <summary>Sets the shim of tsort.tagsortfastrrec(Double[]&amp; a, Double[]&amp; b, Double[]&amp; bufa, Double[]&amp; bufb, Int32 i1, Int32 i2)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimtsort.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimvariancetests">
            <summary>Shim type of alglib+variancetests</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimvariancetests.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimvariancetests.#ctor(alglib.variancetests)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimvariancetests.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimvariancetests.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimvariancetests.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimvariancetests.Constructor">
            <summary>Sets the shim of variancetests.variancetests()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimvariancetests.ftestDoubleArrayInt32DoubleArrayInt32DoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of variancetests.ftest(Double[] x, Int32 n, Double[] y, Int32 m, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimvariancetests.onesamplevariancetestDoubleArrayInt32DoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of variancetests.onesamplevariancetest(Double[] x, Int32 n, Double variance, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimvariancetests.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimwsr">
            <summary>Shim type of alglib+wsr</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimwsr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimwsr.#ctor(alglib.wsr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimwsr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimwsr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.Constructor">
            <summary>Sets the shim of wsr.wsr()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w10Double">
            <summary>Sets the shim of wsr.w10(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w11Double">
            <summary>Sets the shim of wsr.w11(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w120Double">
            <summary>Sets the shim of wsr.w120(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w12Double">
            <summary>Sets the shim of wsr.w12(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w13Double">
            <summary>Sets the shim of wsr.w13(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w14Double">
            <summary>Sets the shim of wsr.w14(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w15Double">
            <summary>Sets the shim of wsr.w15(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w16Double">
            <summary>Sets the shim of wsr.w16(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w17Double">
            <summary>Sets the shim of wsr.w17(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w18Double">
            <summary>Sets the shim of wsr.w18(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w19Double">
            <summary>Sets the shim of wsr.w19(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w200Double">
            <summary>Sets the shim of wsr.w200(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w20Double">
            <summary>Sets the shim of wsr.w20(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w21Double">
            <summary>Sets the shim of wsr.w21(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w22Double">
            <summary>Sets the shim of wsr.w22(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w23Double">
            <summary>Sets the shim of wsr.w23(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w24Double">
            <summary>Sets the shim of wsr.w24(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w25Double">
            <summary>Sets the shim of wsr.w25(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w26Double">
            <summary>Sets the shim of wsr.w26(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w27Double">
            <summary>Sets the shim of wsr.w27(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w28Double">
            <summary>Sets the shim of wsr.w28(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w29Double">
            <summary>Sets the shim of wsr.w29(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w30Double">
            <summary>Sets the shim of wsr.w30(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w40Double">
            <summary>Sets the shim of wsr.w40(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w5Double">
            <summary>Sets the shim of wsr.w5(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w60Double">
            <summary>Sets the shim of wsr.w60(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w6Double">
            <summary>Sets the shim of wsr.w6(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w7Double">
            <summary>Sets the shim of wsr.w7(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w8Double">
            <summary>Sets the shim of wsr.w8(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.w9Double">
            <summary>Sets the shim of wsr.w9(Double s)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.wchebDoubleDoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of wsr.wcheb(Double x, Double c, Double&amp; tj, Double&amp; tj1, Double&amp; r)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.wilcoxonsignedranktestDoubleArrayInt32DoubleDoubleRefDoubleRefDoubleRef">
            <summary>Sets the shim of wsr.wilcoxonsignedranktest(Double[] x, Int32 n, Double e, Double&amp; bothtails, Double&amp; lefttail, Double&amp; righttail)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimwsr.wsigmaDoubleInt32">
            <summary>Sets the shim of wsr.wsigma(Double s, Int32 n)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimwsr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimxblas">
            <summary>Shim type of alglib+xblas</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimxblas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimxblas.#ctor(alglib.xblas)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimxblas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shimalglib.Shimxblas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.Constructor">
            <summary>Sets the shim of xblas.xblas()</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.xcdotalglibcomplexArrayalglibcomplexArrayInt32DoubleArrayRefalglibcomplexRefDoubleRef">
            <summary>Sets the shim of xblas.xcdot(complex[] a, complex[] b, Int32 n, Double[]&amp; temp, complex&amp; r, Double&amp; rerr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.xdotDoubleArrayDoubleArrayInt32DoubleArrayRefDoubleRefDoubleRef">
            <summary>Sets the shim of xblas.xdot(Double[] a, Double[] b, Int32 n, Double[]&amp; temp, Double&amp; r, Double&amp; rerr)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.xfastpowDoubleInt32">
            <summary>Sets the shim of xblas.xfastpow(Double r, Int32 n)</summary>
        </member>
        <member name="P:Global.Fakes.Shimalglib.Shimxblas.xsumDoubleArrayRefDoubleInt32DoubleRefDoubleRef">
            <summary>Sets the shim of xblas.xsum(Double[]&amp; w, Double mx, Int32 n, Double&amp; r, Double&amp; rerr)</summary>
        </member>
        <member name="T:Global.Fakes.Shimalglib.Shimxblas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Stubalglib">
            <summary>Stub type of alglib</summary>
        </member>
        <member name="M:Global.Fakes.Stubalglib.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Global.Fakes.Stubalglib.InitializeStub">
            <summary>Initializes a new instance of type Stubalglib</summary>
        </member>
        <member name="P:Global.Fakes.Stubalglib.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Global.Fakes.Stubalglib.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Global.Fakes.Stubalglib.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.Alglibnet2Delegates">
            <summary>Contains custom delegates used for the stubs and shims of alglibnet2</summary>
        </member>
    </members>
</doc>
